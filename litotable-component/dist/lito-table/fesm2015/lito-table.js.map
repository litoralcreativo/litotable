{"version":3,"file":"lito-table.js","sources":["../../../projects/lito-table/src/lib/column.ts","../../../projects/lito-table/src/lib/configurations/fieldConstrians.config.ts","../../../projects/lito-table/src/lib/configurations/litotable.config.ts","../../../projects/lito-table/src/lib/decorators/column.decorator.ts","../../../projects/lito-table/src/lib/lito-color-picker/lito-color-picker.component.ts","../../../projects/lito-table/src/lib/lito-color-picker/lito-color-picker.component.html","../../../projects/lito-table/src/lib/lito-color-picker/dialog-color-picker.html","../../../projects/lito-table/src/lib/constrain-creator/constrain-creator.component.ts","../../../projects/lito-table/src/lib/constrain-creator/constrain-creator.component.html","../../../projects/lito-table/src/lib/constrain-creator/constrain-form.component.html","../../../projects/lito-table/src/lib/pipes/cuit.pipe.ts","../../../projects/lito-table/src/lib/pipes/phone.pipe.ts","../../../projects/lito-table/src/lib/lito-table.component.ts","../../../projects/lito-table/src/lib/lito-table.component.html","../../../projects/lito-table/src/lib/lito-table.module.ts","../../../projects/lito-table/src/public-api.ts","../../../projects/lito-table/src/lito-table.ts"],"sourcesContent":["import {\r\n  ColumnContentAlignment,\r\n  ColumnType,\r\n} from './decorators/column.decorator';\r\n\r\nexport class Column {\r\n  propertyKey: string;\r\n  visible?: boolean;\r\n  order: number;\r\n  name: string;\r\n  type: ColumnType;\r\n  format?: string;\r\n  contentAlign?: ColumnContentAlignment;\r\n  enumTypeAsociation?: {\r\n    key: string | boolean | number;\r\n    icon: string;\r\n    tooltip: string;\r\n  }[];\r\n  mutable?: boolean;\r\n  mutableAction?: (object: any) => any;\r\n  constructor(\r\n    propertyKey: string,\r\n    name: string,\r\n    type: ColumnType,\r\n    order: number\r\n  ) {\r\n    this.propertyKey = propertyKey;\r\n    this.name = name;\r\n    this.type = type;\r\n    this.order = order;\r\n  }\r\n}\r\n","import { ColumnType } from '../decorators/column.decorator';\r\n\r\n/**\r\n * This interface is for configuration\r\n *\r\n */\r\nexport interface FieldConstrianStyle {\r\n  propertyKey: string;\r\n  constrainName: string;\r\n  type: ColumnType;\r\n  constrain: Constrain;\r\n  /* metadata: {\r\n    enable: boolean;\r\n    trigger: (e: any) => boolean;\r\n    style: Object;\r\n  }; */\r\n}\r\n\r\n/**\r\n * This interface is for every Constrain\r\n */\r\nexport interface Constrain {\r\n  style: any;\r\n  enable: boolean;\r\n  trigger: (e: any) => boolean;\r\n}\r\n\r\n/**\r\n * This class is for date constrains\r\n */\r\nexport class DateConstrain implements Constrain {\r\n  style: Object;\r\n  enable: boolean;\r\n  values: [Date, Date];\r\n  type: MesurableConstrainType;\r\n  constructor(\r\n    type: MesurableConstrainType,\r\n    values: [Date, Date],\r\n    style: Object = {},\r\n    enable: boolean = true\r\n  ) {\r\n    this.type = type;\r\n    this.values = values;\r\n    this.style = style;\r\n    this.enable = enable;\r\n  }\r\n  trigger = (e: Date): boolean => {\r\n    switch (this.type) {\r\n      case MesurableConstrainType.LESSTHAN: {\r\n        if (e < this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.MORETHAN: {\r\n        if (e > this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.EQUALS: {\r\n        if (e == this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.BETWEEN: {\r\n        if (this.values.length == 2)\r\n          if (e > this.values[0] && e < this.values[1]) return true;\r\n          else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.NOTBETWEEN: {\r\n        if (this.values.length == 2)\r\n          if (!(e > this.values[0] && e < this.values[1])) return true;\r\n          else return false;\r\n        break;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\n/**\r\n * This class is for numbers constrains (integer, float, decimal, etc..)\r\n */\r\nexport class NumberConstrain implements Constrain {\r\n  style: Object;\r\n  enable: boolean;\r\n  values: [number, number];\r\n  type: MesurableConstrainType;\r\n  constructor(\r\n    type: MesurableConstrainType,\r\n    values: [number, number],\r\n    style: Object = {},\r\n    enable: boolean = true\r\n  ) {\r\n    this.type = type;\r\n    this.values = values;\r\n    this.style = style;\r\n    this.enable = enable;\r\n  }\r\n  trigger = (e: number): boolean => {\r\n    switch (this.type) {\r\n      case MesurableConstrainType.LESSTHAN: {\r\n        if (e < this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.MORETHAN: {\r\n        if (e > this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.EQUALS: {\r\n        if (e == this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.BETWEEN: {\r\n        if (this.values.length == 2)\r\n          if (e > this.values[0] && e < this.values[1]) return true;\r\n          else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.NOTBETWEEN: {\r\n        if (this.values.length == 2)\r\n          if (!(e > this.values[0] && e < this.values[1])) return true;\r\n          else return false;\r\n        break;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\n/**\r\n * This class is for string constrains\r\n */\r\nexport class StringConstrain implements Constrain {\r\n  style: Object;\r\n  enable: boolean;\r\n  constrainArray: StringConstrainObject[] = [];\r\n  caseSensitive: boolean;\r\n  constructor(\r\n    style: Object = {},\r\n    enable: boolean = true,\r\n    caseSense: boolean = true\r\n  ) {\r\n    this.style = style;\r\n    this.enable = enable;\r\n    this.caseSensitive = caseSense;\r\n  }\r\n  trigger = (e: string): boolean => {\r\n    e = e.toString();\r\n    let result = true;\r\n    for (let i = 0; i < this.constrainArray.length; i++) {\r\n      const con = this.constrainArray[i];\r\n      switch (con.type) {\r\n        case StringConstrainType.STARTSWITH: {\r\n          if (\r\n            !(this.caseSensitive\r\n              ? e.startsWith(con.value)\r\n              : e.toLocaleLowerCase().startsWith(con.value.toLocaleLowerCase()))\r\n          )\r\n            result = false;\r\n          break;\r\n        }\r\n        case StringConstrainType.ENDWITH: {\r\n          if (\r\n            !(this.caseSensitive\r\n              ? e.endsWith(con.value)\r\n              : e.toLocaleLowerCase().endsWith(con.value.toLocaleLowerCase()))\r\n          )\r\n            result = false;\r\n          break;\r\n        }\r\n        case StringConstrainType.CONTAINS: {\r\n          if (\r\n            !(this.caseSensitive\r\n              ? e.includes(con.value)\r\n              : e.toLocaleLowerCase().includes(con.value.toLocaleLowerCase()))\r\n          )\r\n            result = false;\r\n          break;\r\n        }\r\n      }\r\n      if (!result) break;\r\n    }\r\n    return result;\r\n  };\r\n  addConstrain(stringConstrain: StringConstrainObject) {\r\n    this.constrainArray.push(stringConstrain);\r\n  }\r\n  clearConstrains() {\r\n    this.constrainArray = [];\r\n  }\r\n}\r\n\r\nexport enum MesurableConstrainType {\r\n  EQUALS = 1,\r\n  MORETHAN = 2,\r\n  LESSTHAN = 3,\r\n  BETWEEN = 4,\r\n  NOTBETWEEN = 5,\r\n}\r\n\r\nexport interface StringConstrainObject {\r\n  type: StringConstrainType;\r\n  value: string;\r\n}\r\n\r\nexport enum StringConstrainType {\r\n  STARTSWITH = 1,\r\n  ENDWITH = 2,\r\n  CONTAINS = 3,\r\n}\r\n","import { Component, TemplateRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface LitoFooterAction {\r\n  icon?: string;\r\n  content?: string;\r\n  color?: string;\r\n  actionResult: {\r\n    willAddRow: boolean;\r\n    actionObservable?: Observable<any>;\r\n    nonObservableAction?: () => any;\r\n  };\r\n  template?: Component;\r\n}\r\n\r\nexport interface LitoGeneralAction {\r\n  name: string;\r\n  icon?: string;\r\n  content?: string;\r\n  color?: string;\r\n  mustLockRows: boolean;\r\n  template?: Component;\r\n  confirmation?: LitoGeneralActionConfirmation;\r\n  performable: { state: boolean; tooltip: string };\r\n  updatePerformable: (selectedRows: Set<any>) => {\r\n    state: boolean;\r\n    tooltip: string;\r\n  };\r\n}\r\n\r\nexport interface LitoRowAction {\r\n  name: string;\r\n  tooltip: string;\r\n  icon: string;\r\n  color: string;\r\n  actionResult: {\r\n    willUpdateRow?: boolean;\r\n    willDeleteRow?: boolean;\r\n    actionObservable?: Observable<any>;\r\n  };\r\n  confirmation?: LitoRowActionConfirmation;\r\n}\r\nexport interface LitoRowActionConfirmation {\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nexport interface LitoGeneralActionConfirmation {\r\n  title: string;\r\n  content: string;\r\n  items?: any[];\r\n  primaryKey: string;\r\n}\r\n\r\nexport class LitotableColor {\r\n  value: string;\r\n  constructor(\r\n    value: [number, number, number] | [number, number, number, number] | string\r\n  ) {\r\n    this.value = '';\r\n    if (typeof value == 'string') {\r\n      this.value = value;\r\n    } else {\r\n      if (value.length == 3) {\r\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\r\n      } else if (value.length == 4) {\r\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface TableConfigurations {\r\n  paginationSizes?: number[];\r\n  hoverStyle?: RowStyle;\r\n  selectionStyle?: RowStyle;\r\n  rowStyleColors?: LitotableColor[];\r\n  headerBorders?: boolean;\r\n  cellBorders?: boolean;\r\n  actionsColumn?: LitoRowAction[];\r\n  footerAction?: LitoFooterAction;\r\n}\r\n\r\nexport enum RowStyle {\r\n  BORDER = 1,\r\n  SHADOW = 2,\r\n}\r\n\r\nexport class TableActionsConfig {\r\n  actions: LitoGeneralAction[];\r\n  expandable: boolean;\r\n  constructor(actions: LitoGeneralAction[], expandable: boolean = false) {\r\n    this.actions = actions;\r\n    this.expandable = expandable;\r\n  }\r\n  updatePermormableState(set: Set<any>) {\r\n    this.actions.forEach((a) => {\r\n      a.performable = a.updatePerformable(set);\r\n    });\r\n  }\r\n}\r\n\r\nexport enum GeneralActionScope {\r\n  SINGLE = 1,\r\n  MULTIPLE = 2,\r\n}\r\n\r\nexport enum TableOperation {\r\n  CREATE = 1,\r\n  UPDATE = 2,\r\n  DELETE = 3,\r\n  RESTORE = 4,\r\n}\r\n","import 'reflect-metadata';\r\nexport interface TableColumnMetadata {\r\n  visible?: boolean;\r\n  order: number;\r\n  columnName?: string;\r\n  type?: ColumnType;\r\n  enumTypeAsociation?: {\r\n    key: string | boolean | number;\r\n    icon: string;\r\n    tooltip: string;\r\n  }[];\r\n  format?: string;\r\n  contentAlign?: ColumnContentAlignment;\r\n  columnGroup?: ColumnGroup;\r\n}\r\n\r\nexport interface ColumnGroup {\r\n  name: string;\r\n}\r\n\r\nexport function TableColumn(columnMetadata: TableColumnMetadata) {\r\n  return (target: Object, propertyKey: string) => {\r\n    const prevData = Reflect.getMetadata('columnsMetadata', target);\r\n    const newData = {\r\n      propertyKey: propertyKey,\r\n      metadata: columnMetadata,\r\n    };\r\n    let data = [];\r\n    if (prevData != undefined) {\r\n      data.push(...prevData);\r\n    }\r\n    data.push(newData);\r\n    Reflect.defineMetadata('columnsMetadata', data, target);\r\n  };\r\n}\r\n\r\nexport enum ColumnType {\r\n  STRING = 0,\r\n  INTEGER = 1,\r\n  FLOAT = 2,\r\n  DATE = 3,\r\n  CURRENCY = 4,\r\n  CUIT = 5,\r\n  PHONE = 6,\r\n  ENUM = 7,\r\n}\r\n\r\nexport enum ColumnContentAlignment {\r\n  LEFT = 1,\r\n  CENTER = 2,\r\n  RIGHT = 3,\r\n}\r\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { LitotableColor } from '../configurations/litotable.config';\n\nexport interface DialogColorData {\n  title: string;\n  value: string;\n  colors: LitotableColor[];\n}\n\n@Component({\n  selector: 'app-lito-color-picker',\n  templateUrl: './lito-color-picker.component.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class LitoColorPickerComponent implements OnInit {\n  @Input('colors') colors?: LitotableColor[];\n  @Input('content') content: string = 'color';\n  @Output('result') result: EventEmitter<string> = new EventEmitter();\n  @Output('newColorArray') arr: EventEmitter<LitotableColor[]> =\n    new EventEmitter();\n  value?: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogColorPicker, {\n      width: '380px',\n      data: { colors: this.colors, value: this.value, title: this.content },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-color-picker.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class DialogColorPicker {\n  value: string = '';\n  nc: [number, number, number] = [0, 0, 0];\n  newColorString = 'rgb(255, 255, 255)';\n  fgc: string = '#222';\n  mainColors: LitotableColor[] = MAIN_COLORS;\n  constructor(\n    public dialogRef: MatDialogRef<DialogColorPicker>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogColorData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  changeNewColorValue(color: string, value: any) {\n    switch (color) {\n      case 'r':\n        this.nc[0] = value;\n        break;\n      case 'g':\n        this.nc[1] = value;\n        break;\n      case 'b':\n        this.nc[2] = value;\n        break;\n    }\n    this.newColorString = `rgb(${this.nc[0]}, ${this.nc[1]},${this.nc[2]})`;\n    if (this.nc.reduce((a, c) => a + c) / 3 < 180) this.fgc = '#fff';\n    else this.fgc = '#222';\n  }\n}\n\nexport const MAIN_COLORS: LitotableColor[] = [\n  new LitotableColor('#000000'),\n  new LitotableColor('#434343'),\n  new LitotableColor('#666666'),\n  new LitotableColor('#999999'),\n  new LitotableColor('#b7b7b7'),\n  new LitotableColor('#cccccc'),\n  new LitotableColor('#d9d9d9'),\n  new LitotableColor('#efefef'),\n  new LitotableColor('#f3f3f3'),\n  new LitotableColor('#ffffff'),\n\n  new LitotableColor('#980000'),\n  new LitotableColor('#ff0000'),\n  new LitotableColor('#ff9900'),\n  new LitotableColor('#ffff00'),\n  new LitotableColor('#00ff00'),\n  new LitotableColor('#00ffff'),\n  new LitotableColor('#4a86e8'),\n  new LitotableColor('#0000ff'),\n  new LitotableColor('#9900ff'),\n  new LitotableColor('#ff00ff'),\n\n  new LitotableColor('#e6b8af'),\n  new LitotableColor('#f4cccc'),\n  new LitotableColor('#fce5cd'),\n  new LitotableColor('#fff2cc'),\n  new LitotableColor('#d9ead3'),\n  new LitotableColor('#d0e0e3'),\n  new LitotableColor('#c9daf8'),\n  new LitotableColor('#cfe2f3'),\n  new LitotableColor('#d9d2e9'),\n  new LitotableColor('#ead1dc'),\n\n  new LitotableColor('#dd7e6b'),\n  new LitotableColor('#ea9999'),\n  new LitotableColor('#f9cb9c'),\n  new LitotableColor('#ffe599'),\n  new LitotableColor('#b6d7a8'),\n  new LitotableColor('#a2c4c9'),\n  new LitotableColor('#a4c2f4'),\n  new LitotableColor('#9fc5e8'),\n  new LitotableColor('#b4a7d6'),\n  new LitotableColor('#d5a6bd'),\n\n  new LitotableColor('#cc4125'),\n  new LitotableColor('#e06666'),\n  new LitotableColor('#f6b26b'),\n  new LitotableColor('#ffd966'),\n  new LitotableColor('#93c47d'),\n  new LitotableColor('#76a5af'),\n  new LitotableColor('#6d9eeb'),\n  new LitotableColor('#6fa8dc'),\n  new LitotableColor('#8e7cc3'),\n  new LitotableColor('#c27ba0'),\n\n  new LitotableColor('#a61c00'),\n  new LitotableColor('#cc0000'),\n  new LitotableColor('#e69138'),\n  new LitotableColor('#f1c232'),\n  new LitotableColor('#6aa84f'),\n  new LitotableColor('#45818e'),\n  new LitotableColor('#3c78d8'),\n  new LitotableColor('#3d85c6'),\n  new LitotableColor('#674ea7'),\n  new LitotableColor('#a64d79'),\n\n  new LitotableColor('#85200c'),\n  new LitotableColor('#990000'),\n  new LitotableColor('#b45f06'),\n  new LitotableColor('#bf9000'),\n  new LitotableColor('#38761d'),\n  new LitotableColor('#134f5c'),\n  new LitotableColor('#1155cc'),\n  new LitotableColor('#0b5394'),\n  new LitotableColor('#351c75'),\n  new LitotableColor('#741b47'),\n\n  new LitotableColor('#5b0f00'),\n  new LitotableColor('#660000'),\n  new LitotableColor('#783f04'),\n  new LitotableColor('#7f6000'),\n  new LitotableColor('#274e13'),\n  new LitotableColor('#0c343d'),\n  new LitotableColor('#1c4587'),\n  new LitotableColor('#073763'),\n  new LitotableColor('#20124d'),\n  new LitotableColor('#4c1130'),\n];\n","<button mat-raised-button (click)=\"openDialog()\">{{ content }}</button>\n","<div mat-dialog-title>\r\n  <span>{{data.title?data.title:'Colors'}}</span>\r\n</div>\r\n<div mat-dialog-content>\r\n  <div class=\"colors-container\" style=\"margin-top: 1rem\">\r\n    <mat-icon\r\n      *ngFor=\"let c of mainColors\"\r\n      [mat-dialog-close]=\"c.value\"\r\n      [style]=\"{\r\n            color: c.value\r\n          }\"\r\n      >circle</mat-icon\r\n    >\r\n    <mat-icon\r\n      *ngFor=\"let c of data.colors\"\r\n      [mat-dialog-close]=\"c.value\"\r\n      matSuffix\r\n      [style]=\"{\r\n                color: c.value\r\n              }\"\r\n      >circle</mat-icon\r\n    >\r\n  </div>\r\n</div>\r\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Column } from '../column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  NumberConstrain,\n  MesurableConstrainType,\n  DateConstrain,\n  StringConstrainType,\n  StringConstrain,\n  StringConstrainObject,\n} from '../configurations/fieldConstrians.config';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ColumnType } from '../decorators/column.decorator';\nimport { MatAccordion } from '@angular/material/expansion';\n\nexport class ConstrainCreationFormData {\n  columns: Column[] = [];\n}\n\n@Component({\n  selector: 'litotable-constrain-creator',\n  templateUrl: './constrain-creator.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreatorComponent implements OnInit {\n  @Input('columns') columns: Column[] = [];\n  @Output('result-constrain') result: EventEmitter<FieldConstrianStyle> =\n    new EventEmitter();\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConstrainCreationForm, {\n      data: { columns: this.columns },\n      maxHeight: '80vh',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'constrain-creation-form-dialog',\n  templateUrl: 'constrain-form.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreationForm {\n  fieldFormGroup!: FormGroup;\n  stringFormGroup!: FormGroup;\n  fieldConstrain: FieldConstrianStyle | any;\n  numberConstrainType = MesurableConstrainType;\n  stringConstrainType = StringConstrainType;\n  finalString: string = '';\n  valueType: string = '';\n  @ViewChild(MatAccordion) strAccordion!: MatAccordion;\n\n  dateRange = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialogRef: MatDialogRef<ConstrainCreationForm>,\n    @Inject(MAT_DIALOG_DATA) public data: ConstrainCreationFormData,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.fieldFormGroup = this._formBuilder.group({\n      field: ['', Validators.required],\n    });\n    this.stringFormGroup = this._formBuilder.group({\n      startWith: [''],\n      startWithToogle: [''],\n      includes: [''],\n      includesToogle: [''],\n      endsWith: [''],\n      endsWithToogle: [''],\n    });\n    this.resetValues();\n\n    this.getFinalText();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onFieldSelectorChange(selected: Column) {\n    this.resetValues();\n    if (selected) {\n      this.fieldConstrain.propertyKey = selected.propertyKey;\n      this.fieldConstrain.constrainName = selected.name;\n      this.fieldConstrain.type = selected.type;\n\n      switch (selected.type) {\n        case ColumnType.DATE:\n          this.fieldConstrain.constrain = new DateConstrain(\n            this.numberConstrainType.MORETHAN,\n            [new Date(), new Date()],\n            {\n              color: '#eee',\n              'background-color': '#888',\n            }\n          );\n          break;\n        case ColumnType.STRING:\n        case ColumnType.PHONE:\n        case ColumnType.CUIT:\n          this.fieldConstrain.constrain = new StringConstrain({\n            color: '#eee',\n            'background-color': '#888',\n          });\n          break;\n      }\n    }\n    this.getFinalText();\n  }\n\n  changeConstrainStyle(value: any, field: string) {\n    if (field && field != '') {\n      this.fieldConstrain.constrain.style[field] = value;\n    }\n  }\n\n  changeConstrainState(value: any, field: string) {\n    switch (field) {\n      case 'date-type':\n      case 'number-type':\n        this.fieldConstrain.constrain.type = parseFloat(value.value);\n        break;\n      case 'number-value':\n      case 'number-value1':\n        this.fieldConstrain.constrain.values[0] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'number-value2':\n        this.fieldConstrain.constrain.values[1] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'date-value':\n      case 'date-value1':\n        this.fieldConstrain.constrain.values[0] = new Date(value.value);\n        break;\n      case 'date-value2':\n        this.fieldConstrain.constrain.values[1] = new Date(value.value);\n        break;\n    }\n    this.getFinalText();\n  }\n\n  getFinalText() {\n    this.finalString = '';\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.FLOAT:\n        this.valueType = 'value';\n        this.finalString = `that is `;\n        break;\n      case ColumnType.DATE:\n        this.valueType = 'date';\n        break;\n      case ColumnType.STRING:\n      case ColumnType.PHONE:\n      case ColumnType.CUIT:\n        this.valueType = 'string';\n        this.finalString = `that `;\n        break;\n      default:\n        this.valueType = 'value';\n        break;\n    }\n\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.CURRENCY:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `more than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `less than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n        }\n        break;\n      case ColumnType.DATE:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `after ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `before ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n        }\n\n        break;\n      case ColumnType.STRING:\n      case ColumnType.CUIT:\n      case ColumnType.PHONE:\n        for (\n          let i = 0;\n          i < this.fieldConstrain.constrain.constrainArray.length;\n          i++\n        ) {\n          const strConstr: StringConstrainObject =\n            this.fieldConstrain.constrain.constrainArray[i];\n\n          switch (strConstr.type) {\n            case StringConstrainType.STARTSWITH:\n              this.finalString += `starts width ${strConstr.value}`;\n              break;\n            case StringConstrainType.CONTAINS:\n              this.finalString += `contains ${strConstr.value}`;\n              break;\n            case StringConstrainType.ENDWITH:\n              this.finalString += `ends width ${strConstr.value}`;\n              break;\n          }\n          if (this.fieldConstrain.constrain.constrainArray.length > 1) {\n            if (i < this.fieldConstrain.constrain.constrainArray.length - 2)\n              this.finalString += ', ';\n            if (i == this.fieldConstrain.constrain.constrainArray.length - 2)\n              this.finalString += ' and ';\n          }\n        }\n        break;\n    }\n  }\n\n  shortDate(str: string): string {\n    return new Date(str).toLocaleDateString('en-US', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    });\n  }\n\n  resetValues() {\n    this.stringFormGroup.reset();\n    this.fieldConstrain = {\n      propertyKey: this.data.columns[0].propertyKey,\n      constrainName: 'New Constrain',\n      type: ColumnType.INTEGER,\n      constrain: new NumberConstrain(\n        this.numberConstrainType.MORETHAN,\n        [0, 0],\n        {\n          color: '#eee',\n          'background-color': '#888',\n        }\n      ),\n      metadata: {\n        enable: true,\n        trigger: (e: any) => false,\n        style: {},\n      },\n    };\n    if (this.strAccordion) this.strAccordion.closeAll();\n  }\n\n  updateStringConstrain() {\n    let values: {\n      startWith: any;\n      startWithToogle: any;\n      includes: any;\n      includesToogle: any;\n      endsWith: any;\n      endsWithToogle: any;\n    } = this.stringFormGroup.value;\n\n    this.fieldConstrain.constrain.clearConstrains();\n    if (values.startWithToogle && values.startWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.STARTSWITH,\n        value: values.startWith,\n      });\n    if (values.includesToogle && values.includes)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.CONTAINS,\n        value: values.includes,\n      });\n    if (values.endsWithToogle && values.endsWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.ENDWITH,\n        value: values.endsWith,\n      });\n    this.getFinalText();\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.fieldConstrain);\n    console.log(this.fieldConstrain.constrain);\n  }\n}\n","<div (click)=\"openDialog()\">\n  <ng-content></ng-content>\n</div>\n","<div mat-dialog-content>\r\n  <mat-stepper [linear]=\"true\" #stepper orientation=\"vertical\">\r\n    <!-- Field step -->\r\n    <mat-step [stepControl]=\"fieldFormGroup\">\r\n      <div style=\"margin-top: 1rem\"></div>\r\n      <ng-template matStepLabel>Select a field</ng-template>\r\n      <ng-container *ngTemplateOutlet=\"constrainNameSelector\"></ng-container>\r\n      <div>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </mat-step>\r\n    <!-- Style step -->\r\n    <mat-step>\r\n      <div style=\"margin-top: 1rem\"></div>\r\n      <ng-template matStepLabel>Aply style</ng-template>\r\n      <ng-container *ngTemplateOutlet=\"constrainCreationStyle\"></ng-container>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </mat-step>\r\n    <!-- Constrain step -->\r\n    <mat-step>\r\n      <div style=\"margin-top: 1rem\"></div>\r\n      <ng-template matStepLabel>Set constrain</ng-template>\r\n      <ng-container [ngSwitch]=\"fieldConstrain.type\">\r\n        <!-- Numericos -->\r\n        <ng-container\r\n          *ngSwitchCase=\"1\"\r\n          [ngTemplateOutlet]=\"numberConstrainSelector\"\r\n        ></ng-container>\r\n        <ng-container\r\n          *ngSwitchCase=\"2\"\r\n          [ngTemplateOutlet]=\"numberConstrainSelector\"\r\n        ></ng-container>\r\n        <ng-container\r\n          *ngSwitchCase=\"4\"\r\n          [ngTemplateOutlet]=\"numberConstrainSelector\"\r\n        ></ng-container>\r\n\r\n        <!-- Date -->\r\n        <ng-container\r\n          *ngSwitchCase=\"3\"\r\n          [ngTemplateOutlet]=\"dateConstrainSelector\"\r\n        ></ng-container>\r\n        <!-- String -->\r\n        <ng-container\r\n          *ngSwitchCase=\"0\"\r\n          [ngTemplateOutlet]=\"stringConstrainSelector\"\r\n        ></ng-container>\r\n        <ng-container\r\n          *ngSwitchCase=\"5\"\r\n          [ngTemplateOutlet]=\"stringConstrainSelector\"\r\n        ></ng-container>\r\n        <ng-container\r\n          *ngSwitchCase=\"6\"\r\n          [ngTemplateOutlet]=\"stringConstrainSelector\"\r\n        ></ng-container>\r\n      </ng-container>\r\n\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </mat-step>\r\n    <!-- Final step -->\r\n    <mat-step>\r\n      <ng-template matStepLabel>Done</ng-template>\r\n      <div style=\"width: 350px\">\r\n        <p\r\n          class=\"mat-elevation-z4\"\r\n          [style]=\"{\r\n            color: fieldConstrain.constrain.style['color'],\r\n            'background-color':\r\n              fieldConstrain.constrain.style['background-color'],\r\n            padding: '1rem',\r\n            'border-radius': '4px'\r\n          }\"\r\n        >\r\n          Every {{ valueType }} from column\r\n          <strong>{{ fieldConstrain.constrainName }}</strong>\r\n          {{ finalString }}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button (click)=\"stepper.reset(); resetValues()\">\r\n          Reset\r\n        </button>\r\n        <button mat-button (click)=\"closeDialog()\">Create</button>\r\n      </div>\r\n    </mat-step>\r\n  </mat-stepper>\r\n</div>\r\n\r\n<ng-template #constrainNameSelector>\r\n  <form [formGroup]=\"fieldFormGroup\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Field</mat-label>\r\n      <mat-select\r\n        formControlName=\"field\"\r\n        required\r\n        (ngModelChange)=\"onFieldSelectorChange($event)\"\r\n      >\r\n        <mat-option>None</mat-option>\r\n        <mat-option *ngFor=\"let column of data.columns\" [value]=\"column\">{{\r\n          column.name\r\n        }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #constrainCreationStyle>\r\n  <mat-expansion-panel\r\n    hideToggle\r\n    [style]=\"{\r\n      'background-color': fieldConstrain.constrain.style['background-color'],\r\n      'margin-bottom': '1rem'\r\n    }\"\r\n  >\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title\r\n        [style]=\"{\r\n          color: fieldConstrain.constrain.style['color'],\r\n          'justify-content': 'center'\r\n        }\"\r\n        >{{ fieldConstrain.constrainName }}</mat-panel-title\r\n      >\r\n    </mat-expansion-panel-header>\r\n    <div class=\"flex-center\">\r\n      <app-lito-color-picker\r\n        (result)=\"changeConstrainStyle($event, 'background-color')\"\r\n        content=\"Background\"\r\n      ></app-lito-color-picker>\r\n      <app-lito-color-picker\r\n        style=\"margin-left: 1rem\"\r\n        (result)=\"changeConstrainStyle($event, 'color')\"\r\n        content=\"Foreground\"\r\n      ></app-lito-color-picker>\r\n    </div>\r\n  </mat-expansion-panel>\r\n</ng-template>\r\n\r\n<ng-template #numberConstrainSelector>\r\n  <mat-button-toggle-group\r\n    class=\"number-constrain-selector\"\r\n    name=\"constrainSelect\"\r\n    aria-label=\"Constrain select\"\r\n    value=\"{{ fieldConstrain.constrain.type }}\"\r\n    (change)=\"changeConstrainState($event, 'number-type')\"\r\n  >\r\n    <mat-button-toggle value=\"1\" matTooltip=\"EQUALS\">\r\n      <mat-icon>drag_handle</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"2\" matTooltip=\"MORE THAN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">expand_less</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"3\" matTooltip=\"LESS THAN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">expand_more</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"4\" matTooltip=\"BETWEEN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">unfold_less</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"5\" matTooltip=\"NOT BETWEEN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">unfold_more</mat-icon>\r\n    </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n  <div\r\n    *ngIf=\"\r\n      fieldConstrain.constrain.type != numberConstrainType.BETWEEN &&\r\n      fieldConstrain.constrain.type != numberConstrainType.NOTBETWEEN\r\n    \"\r\n    style=\"display: flex; justify-content: space-between\"\r\n  >\r\n    <mat-form-field style=\"width: 100%\" appearance=\"fill\">\r\n      <mat-label\r\n        (click)=\"$event.stopPropagation()\"\r\n        [ngSwitch]=\"fieldConstrain.constrain.type\"\r\n      >\r\n        <span *ngSwitchCase=\"numberConstrainType.EQUALS\">EQUALS</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.LESSTHAN\">LESS THAN</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.MORETHAN\">MORE THAN</span>\r\n      </mat-label>\r\n      <input\r\n        type=\"number\"\r\n        step=\"0.1\"\r\n        (change)=\"\r\n          $event.stopPropagation(); changeConstrainState($event, 'number-value')\r\n        \"\r\n        (keyup)=\"\r\n          $event.stopPropagation(); changeConstrainState($event, 'number-value')\r\n        \"\r\n        matInput\r\n        placeholder=\"\"\r\n        value=\"{{ fieldConstrain.constrain.values[0] }}\"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n  <!-- BETWEEN -->\r\n  <div\r\n    *ngIf=\"\r\n      fieldConstrain.constrain.type == numberConstrainType.BETWEEN ||\r\n      fieldConstrain.constrain.type == numberConstrainType.NOTBETWEEN\r\n    \"\r\n    style=\"max-width: fit-content; display: flow-root\"\r\n  >\r\n    <mat-form-field style=\"max-width: 45%; float: left\" appearance=\"fill\">\r\n      <mat-label (click)=\"$event.stopPropagation()\">{{\r\n        fieldConstrain.constrain.type == numberConstrainType.BETWEEN\r\n          ? \"MORE THAN\"\r\n          : \"LESS THAN\"\r\n      }}</mat-label>\r\n      <input\r\n        type=\"number\"\r\n        step=\"100\"\r\n        (change)=\"changeConstrainState($event, 'number-value1')\"\r\n        (keyup)=\"changeConstrainState($event, 'number-value1')\"\r\n        matInput\r\n        placeholder=\"\"\r\n        [max]=\"fieldConstrain.constrain.values[1]\"\r\n        value=\"{{ fieldConstrain.constrain.values[0] }}\"\r\n      />\r\n    </mat-form-field>\r\n    <mat-form-field\r\n      style=\"max-width: 45%; float: right\"\r\n      appearance=\"fill\"\r\n      (click)=\"$event.stopPropagation()\"\r\n      (keypress)=\"$event.stopPropagation()\"\r\n      (keydown)=\"$event.stopPropagation()\"\r\n    >\r\n      <mat-label\r\n        (click)=\"$event.stopPropagation()\"\r\n        (keypress)=\"$event.stopPropagation()\"\r\n      >\r\n        {{\r\n          fieldConstrain.constrain.type == numberConstrainType.BETWEEN\r\n            ? \"LESS THAN\"\r\n            : \"MORE THAN\"\r\n        }}\r\n      </mat-label>\r\n      <input\r\n        type=\"number\"\r\n        step=\"100\"\r\n        (change)=\"changeConstrainState($event, 'number-value2')\"\r\n        (click)=\"$event.stopPropagation()\"\r\n        (keydown)=\"$event.stopPropagation()\"\r\n        (keypress)=\"$event.stopPropagation()\"\r\n        (keyup)=\"changeConstrainState($event, 'number-value2')\"\r\n        matInput\r\n        placeholder=\"\"\r\n        [min]=\"fieldConstrain.constrain.values[0]\"\r\n        value=\"{{ fieldConstrain.constrain.values[1] }}\"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #dateConstrainSelector>\r\n  <mat-button-toggle-group\r\n    class=\"number-constrain-selector\"\r\n    name=\"constrainSelect\"\r\n    aria-label=\"Constrain select\"\r\n    value=\"{{ fieldConstrain.constrain.type }}\"\r\n    (change)=\"changeConstrainState($event, 'date-type')\"\r\n  >\r\n    <!-- <mat-button-toggle value=\"1\" matTooltip=\"EQUALS\">\r\n      <mat-icon>drag_handle</mat-icon>\r\n    </mat-button-toggle> -->\r\n    <mat-button-toggle value=\"2\" matTooltip=\"AFTER\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">expand_less</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"3\" matTooltip=\"BEFORE\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">expand_more</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"4\" matTooltip=\"BETWEEN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">unfold_less</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"5\" matTooltip=\"NOT BETWEEN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">unfold_more</mat-icon>\r\n    </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n  <div style=\"display: flex; justify-content: space-between\">\r\n    <!-- EQUALS, LESSTHAN, MORETHAN -->\r\n    <mat-form-field\r\n      style=\"width: 100%\"\r\n      appearance=\"fill\"\r\n      *ngIf=\"\r\n        fieldConstrain.constrain.type == numberConstrainType.EQUALS ||\r\n        fieldConstrain.constrain.type == numberConstrainType.LESSTHAN ||\r\n        fieldConstrain.constrain.type == numberConstrainType.MORETHAN\r\n      \"\r\n    >\r\n      <mat-label [ngSwitch]=\"fieldConstrain.constrain.type\">\r\n        <span *ngSwitchCase=\"numberConstrainType.EQUALS\">EQUALS</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.LESSTHAN\">Choose a date</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.MORETHAN\">Choose a date</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.BETWEEN\"\r\n          >Choose a date range</span\r\n        >\r\n        <span *ngSwitchCase=\"numberConstrainType.NOTBETWEEN\"\r\n          >Choose a date range</span\r\n        >\r\n      </mat-label>\r\n\r\n      <input\r\n        matInput\r\n        [matDatepicker]=\"picker\"\r\n        (dateChange)=\"changeConstrainState($event, 'date-value')\"\r\n      />\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <!-- BETWEEN, NOTBETWEEN -->\r\n    <mat-form-field\r\n      style=\"width: 100%\"\r\n      appearance=\"fill\"\r\n      *ngIf=\"\r\n        fieldConstrain.constrain.type == numberConstrainType.BETWEEN ||\r\n        fieldConstrain.constrain.type == numberConstrainType.NOTBETWEEN\r\n      \"\r\n    >\r\n      <mat-date-range-input [formGroup]=\"dateRange\" [rangePicker]=\"rangePicker\">\r\n        <input\r\n          matStartDate\r\n          formControlName=\"start\"\r\n          placeholder=\"{{ numberConstrainType.BETWEEN ? 'After' : 'Bafore' }}\"\r\n          (dateChange)=\"changeConstrainState($event, 'date-value1')\"\r\n        />\r\n        <input\r\n          matEndDate\r\n          formControlName=\"end\"\r\n          placeholder=\"{{ numberConstrainType.BETWEEN ? 'Before' : 'After' }}\"\r\n          (dateChange)=\"changeConstrainState($event, 'date-value2')\"\r\n        />\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle\r\n        matSuffix\r\n        [for]=\"rangePicker\"\r\n      ></mat-datepicker-toggle>\r\n      <mat-date-range-picker #rangePicker></mat-date-range-picker>\r\n    </mat-form-field>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #stringConstrainSelector>\r\n  <mat-accordion>\r\n    <mat-expansion-panel hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"swEnable.checked\" color=\"accent\">\r\n            radio_button_checked\r\n          </mat-icon>\r\n          <mat-icon *ngIf=\"!swEnable.checked\" style=\"color: gray\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <span class=\"flex-center\">&nbsp;Starts with</span>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <span class=\"flex-center\">{{ swInput.value }}</span>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <form [formGroup]=\"stringFormGroup\" (change)=\"updateStringConstrain()\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Value</mat-label>\r\n          <input\r\n            matInput\r\n            autocomplete=\"off\"\r\n            #swInput\r\n            formControlName=\"startWith\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-slide-toggle\r\n          (change)=\"updateStringConstrain()\"\r\n          #swEnable\r\n          style=\"margin-left: 1rem\"\r\n          formControlName=\"startWithToogle\"\r\n        ></mat-slide-toggle>\r\n      </form>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"siEnable.checked\" color=\"accent\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <mat-icon *ngIf=\"!siEnable.checked\" style=\"color: gray\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <span class=\"flex-center\">&nbsp;Includes</span>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <span class=\"flex-center\">{{ siInput.value }}</span>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <form [formGroup]=\"stringFormGroup\" (change)=\"updateStringConstrain()\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Value</mat-label>\r\n          <input\r\n            matInput\r\n            autocomplete=\"off\"\r\n            #siInput\r\n            formControlName=\"includes\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-slide-toggle\r\n          (change)=\"updateStringConstrain()\"\r\n          #siEnable\r\n          style=\"margin-left: 1rem\"\r\n          formControlName=\"includesToogle\"\r\n        ></mat-slide-toggle>\r\n      </form>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel hideToggle style=\"margin-bottom: 1rem\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"ewEnable.checked\" color=\"accent\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <mat-icon *ngIf=\"!ewEnable.checked\" style=\"color: gray\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <span class=\"flex-center\">&nbsp;Ends with</span>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <span class=\"flex-center\">{{ ewInput.value }}</span>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <form [formGroup]=\"stringFormGroup\" (change)=\"updateStringConstrain()\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Value</mat-label>\r\n          <input\r\n            matInput\r\n            autocomplete=\"off\"\r\n            #ewInput\r\n            formControlName=\"endsWith\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-slide-toggle\r\n          (change)=\"updateStringConstrain()\"\r\n          #ewEnable\r\n          style=\"margin-left: 1rem\"\r\n          formControlName=\"endsWithToogle\"\r\n        ></mat-slide-toggle>\r\n      </form>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</ng-template>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'cuit' })\r\nexport class CuitPipe implements PipeTransform {\r\n  transform(value: number, separador: string = '.'): string {\r\n    let result = value.toString().split('');\r\n    result = [\r\n      ...result.slice(0, 2),\r\n      separador,\r\n      ...result.slice(2, 10),\r\n      separador,\r\n      ...result.slice(10),\r\n    ];\r\n    return result.join('');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'phone' })\r\nexport class PhonePipe implements PipeTransform {\r\n  transform(value: number, format?: string): string {\r\n    // format style: \"(###) ####-####\"\r\n    if (format) {\r\n      let result = value.toString().split('');\r\n      let _format = Array.from(format);\r\n      for (let i = _format.length - 1; i >= 0; i--) {\r\n        if (_format[i] == '#') {\r\n          const temp = result.pop();\r\n          if (temp) {\r\n            _format[i] = temp;\r\n          } else {\r\n            _format[i] = '0';\r\n          }\r\n        }\r\n      }\r\n      result = _format;\r\n      return result.join('');\r\n    }\r\n    return value.toString();\r\n  }\r\n}\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstrians.config';\nimport {\n  LitoGeneralAction,\n  LitoGeneralActionConfirmation,\n  LitoRowAction,\n  LitoRowActionConfirmation,\n  TableActionsConfig,\n  TableConfigurations,\n  TableOperation,\n} from './configurations/litotable.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './lito-table.component.html',\n  styleUrls: ['./lito-table.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  /* Enums */\n  columnTypes = ColumnType;\n  operationTypes = TableOperation;\n\n  columns: Column[] = [];\n  numberConstrainType = MesurableConstrainType;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n  rowConfirmation?: {\n    confirmationData: LitoRowActionConfirmation;\n    row: any;\n    action: LitoRowAction;\n  };\n  generalConfirmation?: {\n    confirmationData: LitoGeneralActionConfirmation;\n    action: LitoGeneralAction;\n  };\n  _confirmation: string = 'multiple';\n\n  /* Filter */\n  filteringColumnsFormControl = new FormControl();\n  defaultFilterPredicate!: (data: unknown, filter: string) => boolean;\n  filteringStringFormControl: FormControl = new FormControl('');\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable<any[]>;\n  @Input('type') dataType!: Object;\n  @Input('tableActionsConfig') tableActionsConfig?: TableActionsConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatDrawer) drawer!: MatDrawer;\n  @Output('multipleActionOutput') multipleActionOutput: EventEmitter<{\n    operation: LitoGeneralAction;\n    data: Set<any>;\n  }> = new EventEmitter();\n  @Output('singleActionOutput') singleActionOutput: EventEmitter<{\n    operation: LitoRowAction;\n    data: any;\n  }> = new EventEmitter();\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n        this.tableActionsConfig?.updatePermormableState(this.selectedRows);\n        this.defaultFilterPredicate = this.dataSource.filterPredicate;\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(x.propertyKey, x.constrain);\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n          column.enumTypeAsociation =\n            c.metadata.enumTypeAsociation || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(\n      this.columns,\n      this.selection,\n      this.tableConfigurations?.actionsColumn != undefined\n    );\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n    if (this.tableActionsConfig?.actions) {\n      this.tableActionsConfig.updatePermormableState(this.selectedRows);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  tableDrop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(\n      this.displayedColumns.columnNames,\n      event.previousIndex + 1,\n      event.currentIndex + 1\n    );\n  }\n\n  onRowActionClick(row: any, action: LitoRowAction) {\n    if (\n      action.actionResult.willUpdateRow ||\n      action.actionResult.willDeleteRow\n    ) {\n      row.processing = true;\n      this.singleActionOutput.emit({\n        operation: action,\n        data: row,\n      });\n    }\n  }\n\n  updateRow(row: any, newRow: any) {\n    let indx = this.dataSource.data.indexOf(row);\n    if (newRow) {\n      this.dataSource.data[indx] = newRow;\n      (this.dataSource.data[indx] as any).processing = false;\n      this.selectedRows.delete(this.dataSource.data[indx]);\n    } else {\n      this.dataSource.data.splice(indx, 1);\n      row.processing = false;\n    }\n    this.selectedRows.delete(row);\n\n    this.dataSource._updateChangeSubscription();\n    this.updateVisibility();\n  }\n\n  performFooterAction() {\n    if (\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction\n    ) {\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction();\n    }\n  }\n\n  performRowActionConfirmation(\n    action: LitoRowAction,\n    row: any,\n    confirmation: LitoRowActionConfirmation\n  ) {\n    this._confirmation = 'single';\n    this.rowConfirmation = {\n      confirmationData: confirmation,\n      row: row,\n      action: action,\n    };\n    if (this.drawer) {\n      this.drawer.open();\n    }\n  }\n\n  onGeneralActionClick(operation: LitoGeneralAction) {\n    this.performGeneralAction(operation);\n  }\n\n  performGeneralAction(operation: LitoGeneralAction) {\n    this.multipleActionOutput.emit({\n      operation: operation,\n      data: this.selectedRows,\n    });\n    if (operation.mustLockRows) {\n      this.lockSelectedRows(this.selectedRows);\n    }\n  }\n\n  unLockRow(row: any) {\n    row.processing = false;\n  }\n  lockSelectedRows(rows: Set<any>) {\n    rows.forEach((row) => {\n      row.processing = true;\n    });\n  }\n  unLockSelectedRows(rows: Set<any>) {\n    rows.forEach((row) => {\n      row.processing = false;\n    });\n  }\n\n  performGeneralActionConfirmation(operation: LitoGeneralAction) {\n    this._confirmation = 'multiple';\n    this.generalConfirmation = {\n      confirmationData: operation.confirmation!,\n      action: operation,\n    };\n\n    if (this.drawer) {\n      this.drawer.open();\n    }\n  }\n\n  applyFilter() {\n    const filterValue = this.filteringStringFormControl.value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  setFilterSelection() {\n    if (\n      this.filteringColumnsFormControl.value &&\n      this.filteringColumnsFormControl.value.length != 0\n    ) {\n      this.dataSource.filterPredicate = (data: any, filter: string) => {\n        let result = false;\n        result = this.filteringColumnsFormControl.value.some(\n          (field: string) => {\n            return data[field].toString().toLowerCase().indexOf(filter) !== -1;\n          }\n        );\n        return result;\n      };\n    } else {\n      this.dataSource.filterPredicate = this.defaultFilterPredicate;\n    }\n    this.applyFilter();\n  }\n\n  draganddrop: boolean = false;\n  /* DragAndDrop */\n  toogleDragAndDrop() {\n    this.draganddrop = !this.draganddrop;\n  }\n  drop(event: CdkDragDrop<any[]>) {\n    const rowIndex =\n      event.currentIndex + this.paginator.pageIndex * this.paginator.pageSize;\n    const element = event.container.data[rowIndex];\n    console.log(element);\n\n    /* if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } */\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  actionColumn: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(\n    columns: Column[] = [],\n    selectable: boolean = false,\n    actionsColumn: boolean = false\n  ) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    this.actionColumn = actionsColumn;\n    if (selectable) this.columnNames.unshift('selection');\n    if (actionsColumn) this.columnNames.push('actions');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateVisivility() {\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  checked: boolean;\n  constructor(name: string) {\n    this.name = name;\n    this.checked = this.checkState();\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order);\n    this.colspan = groupData.length;\n    if (groupData.length != 0) this.start = groupData[0].order;\n    this.checked = this.checkState();\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n  toogleVisibbility(state: boolean) {\n    for (const c of this.columns) {\n      c.visible = state;\n    }\n  }\n  checkState() {\n    return this.columns.some((x) => x.visible);\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    this.groupColumns.forEach((e) => e.updateColspan());\n    let deletion = 0;\n    for (let i = 0; i < this.groupColumns.length; i++) {\n      const element = this.groupColumns[i];\n      const firstVisible = element.columns.filter((y) => y.visible)[0];\n\n      if (element.colspan != 0) {\n        let index = visibleColumns.findIndex(\n          (x) => x.propertyKey == firstVisible.propertyKey\n        );\n        this.displayNames.splice(\n          1 + index - deletion,\n          element.colspan,\n          element.name\n        );\n        deletion += element.colspan - 1;\n      }\n    }\n    /* \n    this.displayNames = visibleColumns\n      .reduce(\n        (a, c) => {\n          const includes = this.groupColumns.some((x) => x.columns.includes(c));\n          let str = '';\n          this.groupColumns.forEach((gc) => {\n            if (gc.columns.includes(c)) {\n              str = gc.name;\n            }\n          });\n          a.push(includes ? str : 'empty-group');\n          return a;\n        },\n        ['empty-group']\n      )\n      .reduce(\n        (a, c) => {\n          if (c == 'empty-group' || !a.includes(c)) {\n            a.push(c);\n          }\n          return a;\n        },\n        ['empty-group']\n      );\n    */\n    this.displayNames.unshift();\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  _constrain: Constrain;\n  constructor(name: string, _constrain: Constrain) {\n    this.name = name;\n    this._constrain = _constrain;\n  }\n}\n","<!-- Operations -->\n<!-- EXPANDABLE -->\n<mat-accordion\n  class=\"table-operations\"\n  *ngIf=\"tableActionsConfig && tableActionsConfig.expandable\"\n>\n  <mat-expansion-panel hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title style=\"align-items: center\">\n        Operaciones\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div class=\"operation-buttons-container\" *ngIf=\"tableActionsConfig\">\n      <div *ngFor=\"let operation of tableActionsConfig.actions\">\n        <div class=\"table-bottom-container\">\n          <!-- (selectedRows.size == 0 && operation.mustHaveOneSelected) ||\n              (selectedRows.size != 1 && operation.scope == 1) -->\n          <div\n            [matTooltipDisabled]=\"operation.performable.state\"\n            matTooltip=\"{{ operation.performable.tooltip }}\"\n          >\n            <button\n              [disabled]=\"!operation.performable.state\"\n              mat-stroked-button\n              class=\"general-action\"\n              (click)=\"\n                operation.confirmation\n                  ? performGeneralActionConfirmation(operation)\n                  : performGeneralAction(operation)\n              \"\n            >\n              <mat-icon\n                *ngIf=\"operation?.icon\"\n                [ngStyle]=\"{\n                  color:\n                    (!operation.performable.state\n                      ? 'gray'\n                      : operation?.color) || 'currentColor'\n                }\"\n                >{{ operation.icon }}</mat-icon\n              >\n              {{ operation.content }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>\n\n<!-- NOT EXPANDABLE -->\n<div\n  class=\"table-operations mat-elevation-z2 not-expandable-operatios\"\n  *ngIf=\"tableActionsConfig && !tableActionsConfig.expandable\"\n>\n  <div class=\"not-expandable-actions-container\">\n    <div class=\"operation-buttons-container\" *ngIf=\"tableActionsConfig\">\n      <div *ngFor=\"let operation of tableActionsConfig.actions\">\n        <div class=\"table-bottom-container\">\n          <!-- (selectedRows.size == 0 && operation.mustHaveOneSelected) ||\n              (selectedRows.size != 1 && operation.scope == 1) -->\n          <div\n            [matTooltipDisabled]=\"operation.performable.state\"\n            matTooltip=\"{{ operation.performable.tooltip }}\"\n          >\n            <button\n              [disabled]=\"!operation.performable.state\"\n              mat-stroked-button\n              class=\"general-action\"\n              (click)=\"\n                operation.confirmation\n                  ? performGeneralActionConfirmation(operation)\n                  : performGeneralAction(operation)\n              \"\n            >\n              <mat-icon\n                *ngIf=\"operation?.icon\"\n                [ngStyle]=\"{\n                  color:\n                    (!operation.performable.state\n                      ? 'gray'\n                      : operation?.color) || 'currentColor'\n                }\"\n                >{{ operation.icon }}</mat-icon\n              >\n              {{ operation.content }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Table -->\n<div class=\"litotable-main-container\">\n  <div class=\"litotable-container mat-elevation-z4\">\n    <!-- Toolbar actions -->\n    <div class=\"table-top-container\">\n      <button\n        mat-icon-button\n        aria-label=\"Drag & Drop\"\n        (click)=\"$event.stopPropagation(); toogleDragAndDrop()\"\n      >\n        <mat-icon [ngStyle]=\"{ color: draganddrop ? 'red' : 'currentColor' }\"\n          >open_with</mat-icon\n        >\n      </button>\n\n      <button\n        mat-icon-button\n        [matMenuTriggerFor]=\"export\"\n        aria-label=\"Exportar\"\n        (click)=\"$event.stopPropagation()\"\n      >\n        <mat-icon>download</mat-icon>\n      </button>\n\n      <button\n        mat-icon-button\n        [matMenuTriggerFor]=\"columns\"\n        aria-label=\"Columnas\"\n        (click)=\"$event.stopPropagation()\"\n      >\n        <mat-icon>view_column</mat-icon>\n      </button>\n\n      <button\n        mat-icon-button\n        [matMenuTriggerFor]=\"constrains\"\n        aria-label=\"Constrains\"\n        (click)=\"$event.stopPropagation()\"\n      >\n        <mat-icon>brush</mat-icon>\n      </button>\n    </div>\n    <div class=\"table-container\">\n      <!-- Filter -->\n      <div class=\"filter-container\">\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Columnas a filtrar</mat-label>\n          <mat-select\n            (selectionChange)=\"setFilterSelection()\"\n            [formControl]=\"filteringColumnsFormControl\"\n            multiple\n          >\n            <mat-option\n              *ngFor=\"let columna of displayedColumns.columns\"\n              [value]=\"columna.propertyKey\"\n              >{{ columna.name }}</mat-option\n            >\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"standard\" class=\"filter-selector\">\n          <mat-label>Filter</mat-label>\n          <input\n            [formControl]=\"filteringStringFormControl\"\n            matInput\n            (keyup)=\"applyFilter()\"\n            placeholder=\"Ex. ium\"\n            #input\n          />\n        </mat-form-field>\n      </div>\n      <mat-drawer-container class=\"example-container\" [hasBackdrop]=\"true\">\n        <mat-drawer #drawer mode=\"over\" position=\"end\">\n          <ng-container *ngTemplateOutlet=\"sidenavMenu\"></ng-container>\n        </mat-drawer>\n        <mat-drawer-content>\n          <div *ngIf=\"dataSource\" class=\"table-responsive\">\n            <!-- Table -->\n            <table\n              mat-table\n              [dataSource]=\"dataSource\"\n              matSort\n              (matSortChange)=\"announceSortChange($event)\"\n              cdkDropList\n              [cdkDropListData]=\"dataSource.data\"\n              (cdkDropListDropped)=\"drop($event)\"\n              cdkDropListSortingDisabled\n            >\n              <!-- Columna de seleccion -->\n              <ng-container matColumnDef=\"selection\">\n                <th mat-header-cell *matHeaderCellDef>\n                  <mat-checkbox\n                    (change)=\"masterToggle()\"\n                    [indeterminate]=\"\n                      this.selectedRows.size != 0 && !isAllSelected()\n                    \"\n                    [checked]=\"isAllSelected()\"\n                  >\n                  </mat-checkbox>\n                </th>\n                <td\n                  mat-cell\n                  *matCellDef=\"let row\"\n                  style=\"background-color: rgba(255, 255, 255, 1)\"\n                >\n                  <mat-checkbox\n                    (click)=\"$event.stopPropagation()\"\n                    (change)=\"selectionToogle($event.checked, row)\"\n                    [checked]=\"selectedRows.has(row)\"\n                    [disabled]=\"row.processing\"\n                  >\n                  </mat-checkbox>\n                </td>\n              </ng-container>\n\n              <!-- Resto de columnas -->\n              <ng-container\n                *ngFor=\"let column of displayedColumns.columns\"\n                matColumnDef=\"{{ column.name }}\"\n              >\n                <!-- Column Header -->\n                <th\n                  mat-header-cell\n                  *matHeaderCellDef\n                  mat-sort-header=\"{{ column.propertyKey }}\"\n                  sortActionDescription=\"Sort by {{ column.propertyKey }}\"\n                  [class.header-borders]=\"tableConfigurations?.headerBorders\"\n                >\n                  {{ column.name }}\n                </th>\n                <!-- Column Data -->\n                <td\n                  mat-cell\n                  *matCellDef=\"let element\"\n                  #litotableTd\n                  [class.cell-borders]=\"tableConfigurations?.headerBorders\"\n                >\n                  <div\n                    #content\n                    style=\"transition: 0.3s all\"\n                    [class.cell-align-left]=\"\n                      column.contentAlign && column.contentAlign == 1\n                    \"\n                    [class.cell-align-center]=\"\n                      column.contentAlign && column.contentAlign == 2\n                    \"\n                    [class.cell-align-right]=\"\n                      column.contentAlign && column.contentAlign == 3\n                    \"\n                    [ngStyle]=\"\n                      litotableTd.parentElement?.style?.color\n                        ? { color: litotableTd.parentElement?.style?.color }\n                        : {}\n                    \"\n                  >\n                    <span *ngIf=\"column.type == columnTypes.STRING\">\n                      {{ element[column.propertyKey] }}\n                    </span>\n                    <span *ngIf=\"column.type == columnTypes.INTEGER\">\n                      {{ element[column.propertyKey] | number: \"1.0-0\" }}\n                    </span>\n                    <span *ngIf=\"column.type == columnTypes.FLOAT\">\n                      {{ element[column.propertyKey] | number: \"1.2-4\" }}\n                    </span>\n                    <span *ngIf=\"column.type == columnTypes.DATE\">\n                      {{\n                        element[column.propertyKey]\n                          | date: (column.format ? column.format : \"short\")\n                      }}\n                    </span>\n                    <span *ngIf=\"column.type == columnTypes.CURRENCY\">\n                      {{ element[column.propertyKey] | currency }}\n                    </span>\n                    <span *ngIf=\"column.type == columnTypes.CUIT\">\n                      {{ element[column.propertyKey] | cuit: \"-\" }}\n                    </span>\n                    <span *ngIf=\"column.type == columnTypes.PHONE\">\n                      {{\n                        element[column.propertyKey]\n                          | phone: (column.format ? column.format : undefined)\n                      }}\n                    </span>\n                    <span *ngIf=\"column.type == columnTypes.ENUM\">\n                      <span\n                        *ngFor=\"let asociation of column.enumTypeAsociation\"\n                      >\n                        <mat-icon\n                          *ngIf=\"asociation.key == element[column.propertyKey]\"\n                          matTooltip=\"{{ asociation.tooltip }}\"\n                          >{{ asociation.icon }}</mat-icon\n                        >\n                      </span>\n                    </span>\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Columna de Acciones -->\n              <ng-container\n                *ngIf=\"tableConfigurations?.actionsColumn\"\n                matColumnDef=\"actions\"\n              >\n                <th\n                  mat-header-cell\n                  *matHeaderCellDef\n                  [class.header-borders]=\"tableConfigurations?.headerBorders\"\n                  class=\"actions-th\"\n                >\n                  Acciones\n                </th>\n                <td\n                  mat-cell\n                  *matCellDef=\"let row\"\n                  [class.cell-borders]=\"tableConfigurations?.headerBorders\"\n                  style=\"padding: 0\"\n                  class=\"actions-td\"\n                >\n                  <div>\n                    <div\n                      *ngFor=\"let action of tableConfigurations?.actionsColumn\"\n                    >\n                      <button\n                        [disabled]=\"row.processing\"\n                        *ngIf=\"action.confirmation\"\n                        mat-icon-button\n                        matTooltip=\"{{ action.tooltip }}\"\n                        (click)=\"\n                          performRowActionConfirmation(\n                            action,\n                            row,\n                            action.confirmation\n                          )\n                        \"\n                      >\n                        <mat-icon\n                          [style]=\"{\n                            color: row.processing ? 'lightgray' : action.color\n                          }\"\n                          >{{ action.icon }}</mat-icon\n                        >\n                      </button>\n                      <button\n                        [disabled]=\"row.processing\"\n                        *ngIf=\"!action.confirmation\"\n                        mat-icon-button\n                        matTooltip=\"{{ action.tooltip }}\"\n                        (click)=\"onRowActionClick(row, action)\"\n                      >\n                        <mat-icon\n                          [style]=\"{\n                            color: row.processing ? 'lightgray' : action.color\n                          }\"\n                          >{{ action.icon }}</mat-icon\n                        >\n                      </button>\n                    </div>\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Columnas de agrupacion -->\n              <ng-container matColumnDef=\"empty-group\">\n                <th *matHeaderCellDef class=\"group-header-empty\"></th>\n              </ng-container>\n              <ng-container\n                *ngFor=\"let col of displayedColumns.columnGroups.groupColumns\"\n                matColumnDef=\"{{ col.name }}\"\n              >\n                <th\n                  mat-header-cell\n                  *matHeaderCellDef\n                  [attr.colspan]=\"col.colspan\"\n                >\n                  {{ col.name }}\n                </th>\n              </ng-container>\n              <tr\n                class=\"group-header\"\n                mat-header-row\n                *matHeaderRowDef=\"displayedColumns.columnGroups.displayNames\"\n              ></tr>\n\n              <!-- Encabezados de columnas -->\n              <tr\n                mat-header-row\n                *matHeaderRowDef=\"displayedColumns.columnNames\"\n              ></tr>\n\n              <!-- Formato condicional de filas -->\n              <tr\n                cdkDrag\n                [cdkDragDisabled]=\"!draganddrop\"\n                mat-row\n                [class.mat-row-selected]=\"selectedRows.has(row)\"\n                [class.mat-row-selected-borders]=\"\n                  selectedRows.has(row) &&\n                  tableConfigurations?.selectionStyle == 1\n                \"\n                [class.mat-row-selected-shadow]=\"\n                  selectedRows.has(row) &&\n                  tableConfigurations?.selectionStyle == 2\n                \"\n                [class.mat-row-borders]=\"tableConfigurations?.hoverStyle == 1\"\n                [class.mat-row-shadow]=\"tableConfigurations?.hoverStyle == 2\"\n                style=\"transition: 0.3s background-color\"\n                [ngStyle]=\"constrainedRows.has(row) ? row.rowStyle.style : ''\"\n                *matRowDef=\"let row; columns: displayedColumns.columnNames\"\n                [class.mat-row-processing]=\"row.processing\"\n              >\n                <div *cdkDragPlaceholder>placeholder</div>\n              </tr>\n\n              <!-- Mensaje por defecto en caso de no haber datos o se este fetcheando -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">\n                  {{ fetching ? \"fetching data\" : \"No data found\" }}\n                </td>\n              </tr>\n            </table>\n          </div>\n        </mat-drawer-content>\n      </mat-drawer-container>\n\n      <!-- Footer action button -->\n      <div class=\"table-bottom-container\">\n        <button\n          mat-stroked-button\n          class=\"footercell\"\n          (click)=\"performFooterAction()\"\n        >\n          <mat-icon\n            *ngIf=\"tableConfigurations?.footerAction?.icon\"\n            [ngStyle]=\"{\n              color: tableConfigurations?.footerAction?.color || 'currentColor'\n            }\"\n            >{{ tableConfigurations?.footerAction?.icon }}</mat-icon\n          >\n          {{ tableConfigurations?.footerAction?.content }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Paginator -->\n    <div class=\"table-bottom-container\">\n      <mat-paginator\n        [pageSizeOptions]=\"tableConfigurations?.paginationSizes || [5, 10, 20]\"\n        showFirstLastButtons\n        aria-label=\"Select page\"\n      >\n      </mat-paginator>\n    </div>\n\n    <!-- Progressbar -->\n    <mat-progress-bar\n      [mode]=\"fetching ? 'indeterminate' : 'determinate'\"\n    ></mat-progress-bar>\n  </div>\n</div>\n\n<!-- Export Menu -->\n<mat-menu #export=\"matMenu\" xPosition=\"before\">\n  <div\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"$event.stopPropagation()\"\n    disabled=\"true\"\n  >\n    Exportar\n  </div>\n</mat-menu>\n\n<!-- Columns Selector Menu -->\n<mat-menu #columns=\"matMenu\" xPosition=\"before\">\n  <div\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"$event.stopPropagation()\"\n    disabled=\"true\"\n  >\n    Columnas\n  </div>\n  <mat-divider></mat-divider>\n\n  <div\n    *ngFor=\"let column of displayedColumns.columns\"\n    mat-menu-item\n    (click)=\"$event.stopPropagation()\"\n  >\n    <mat-slide-toggle\n      color=\"primary\"\n      (click)=\"$event.stopPropagation()\"\n      (change)=\"displayedColumns.changeColumnVisivility(column)\"\n      [checked]=\"column.visible\"\n    >\n      {{ column.name }}\n    </mat-slide-toggle>\n  </div>\n  <mat-divider></mat-divider>\n  <div\n    *ngFor=\"let group of displayedColumns.columnGroups.groupColumns\"\n    mat-menu-item\n    (click)=\"$event.stopPropagation()\"\n  >\n    <mat-slide-toggle\n      color=\"accent\"\n      (click)=\"$event.stopPropagation()\"\n      (change)=\"\n        group.toogleVisibbility($event.checked);\n        displayedColumns.updateVisivility()\n      \"\n      [checked]=\"group.checked\"\n    >\n      {{ group.name }}\n    </mat-slide-toggle>\n  </div>\n  <button\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"displayedColumns.allVisible(); $event.stopPropagation()\"\n  >\n    Todas\n  </button>\n</mat-menu>\n\n<!-- Constrains Menu -->\n<mat-menu\n  #constrains=\"matMenu\"\n  xPosition=\"before\"\n  style=\"padding: 0.5rem !important\"\n>\n  <div\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"$event.stopPropagation()\"\n    disabled=\"true\"\n  >\n    Estilos\n  </div>\n  <div\n    mat-menu-item\n    disableRipple=\"true\"\n    *ngFor=\"let constr of fieldConstrians\"\n    (click)=\"$event.stopPropagation()\"\n    [style]=\"{\n      display: 'flex',\n      'align-items': 'center',\n      'justify-items': 'center',\n      color: constr.constrain.style['color'],\n      'background-color': constr.constrain.style['background-color'],\n      'text-align': 'center'\n    }\"\n  >\n    <span style=\"flex-grow: 1; text-align: center\">{{\n      constr.constrainName\n    }}</span>\n    <button\n      mat-icon-button\n      matTooltip=\"remove\"\n      style=\"justify-self: flex-end; margin-left: 1rem\"\n      [matMenuTriggerFor]=\"constrainDeletionConfirm\"\n      [matMenuTriggerData]=\"{ data: constr }\"\n    >\n      <mat-icon style=\"margin: auto\">delete</mat-icon>\n    </button>\n    <button mat-icon-button style=\"justify-self: flex-end\">\n      <mat-icon style=\"margin: auto\" matTooltip=\"hide\">edit</mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      style=\"justify-self: flex-end\"\n      (click)=\"\n        constr.constrain.enable = !constr.constrain.enable; updateVisibility()\n      \"\n    >\n      <mat-icon style=\"margin: auto\" matTooltip=\"hide\">{{\n        constr.constrain.enable ? \"visibility\" : \"visibility_off\"\n      }}</mat-icon>\n    </button>\n  </div>\n\n  <!-- Constrain Creator -->\n  <div\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"$event.stopPropagation()\"\n  >\n    <litotable-constrain-creator\n      [columns]=\"displayedColumns.columns\"\n      (result-constrain)=\"addConstrain($event)\"\n      ><mat-icon style=\"margin: auto\"\n        >add_circle</mat-icon\n      ></litotable-constrain-creator\n    >\n  </div>\n</mat-menu>\n\n<mat-menu #constrainDeletionConfirm=\"matMenu\" xPosition=\"before\">\n  <ng-template matMenuContent let-constrain=\"data\">\n    <button\n      mat-menu-item\n      (click)=\"removeConstrain(constrain)\"\n      style=\"color: red; font-weight: 500\"\n    >\n      confirm remove\n    </button>\n  </ng-template>\n</mat-menu>\n\n<mat-menu #constrain=\"matMenu\" xPosition=\"before\">\n  <ng-template matMenuContent let-data=\"data\">\n    <mat-card\n      (click)=\"$event.stopPropagation()\"\n      (keypress)=\"$event.stopPropagation()\"\n    >\n      <mat-card-content\n        (click)=\"$event.stopPropagation()\"\n        (keypress)=\"$event.stopPropagation()\"\n        class=\"constrain-mat-content\"\n      >\n        <div\n          class=\"constrain-mat-content-dual\"\n          (click)=\"$event.stopPropagation()\"\n          (keypress)=\"$event.stopPropagation()\"\n        >\n          <app-lito-color-picker\n            [colors]=\"tableConfigurations?.rowStyleColors\"\n            (result)=\"\n              changeConstrainState($event, data.constrain, 'background-color')\n            \"\n            content=\"Background\"\n          ></app-lito-color-picker>\n          <app-lito-color-picker\n            [colors]=\"tableConfigurations?.rowStyleColors\"\n            (result)=\"changeConstrainState($event, data.constrain, 'color')\"\n            content=\"Foreground\"\n          ></app-lito-color-picker>\n        </div>\n        <div\n          [style]=\"{\n            color: data.constrain.style['color'],\n            'background-color': data.constrain.style['background-color'],\n            'margin-bottom': '1rem',\n            'text-align': 'center',\n            padding: '0.5rem 0',\n            width: '100%'\n          }\"\n        >\n          {{ data.constrain.values[0] }}\n        </div>\n        <mat-button-toggle-group\n          name=\"fontStyle\"\n          aria-label=\"Font Style\"\n          (click)=\"$event.stopPropagation()\"\n          value=\"{{ data.constrain.type }}\"\n          (change)=\"\n            changeConstrainState($event, data.constrain, 'number-type', false)\n          \"\n        >\n          <mat-button-toggle value=\"1\">=</mat-button-toggle>\n          <mat-button-toggle value=\"2\">{{ \"\\>\" }}</mat-button-toggle>\n          <mat-button-toggle value=\"3\">{{ \"\\<\" }}</mat-button-toggle>\n          <mat-button-toggle value=\"4\">{{ \"\\<\\>\" }}</mat-button-toggle>\n        </mat-button-toggle-group>\n        <div\n          *ngIf=\"data.constrain.type != numberConstrainType.BETWEEN\"\n          (click)=\"$event.stopPropagation()\"\n          (keydown)=\"$event.stopPropagation()\"\n          (keypress)=\"$event.stopPropagation()\"\n          style=\"display: flex; justify-content: space-between\"\n        >\n          <mat-form-field\n            style=\"width: 100%\"\n            appearance=\"fill\"\n            (click)=\"$event.stopPropagation()\"\n            (keypress)=\"$event.stopPropagation()\"\n            (keydown)=\"$event.stopPropagation()\"\n          >\n            <mat-label (click)=\"$event.stopPropagation()\">VALOR</mat-label>\n            <input\n              type=\"number\"\n              step=\"100\"\n              (keydown)=\"$event.stopPropagation()\"\n              (keypress)=\"$event.stopPropagation()\"\n              (click)=\"$event.stopPropagation()\"\n              (change)=\"\n                $event.stopPropagation();\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value',\n                  false\n                )\n              \"\n              (keyup)=\"\n                $event.stopPropagation();\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value',\n                  false\n                )\n              \"\n              matInput\n              placeholder=\"\"\n              value=\"{{ data.constrain.values[0] }}\"\n            />\n          </mat-form-field>\n        </div>\n        <!-- BETWEEN -->\n        <div\n          *ngIf=\"data.constrain.type == numberConstrainType.BETWEEN\"\n          (click)=\"$event.stopPropagation()\"\n          (keypress)=\"$event.stopPropagation()\"\n          (keydown)=\"$event.stopPropagation()\"\n          style=\"max-width: fit-content; display: flow-root\"\n        >\n          <mat-form-field\n            style=\"max-width: 45%; float: left\"\n            appearance=\"fill\"\n            (click)=\"$event.stopPropagation()\"\n            (keypress)=\"$event.stopPropagation()\"\n            (keydown)=\"$event.stopPropagation()\"\n          >\n            <mat-label (click)=\"$event.stopPropagation()\">DESDE</mat-label>\n            <input\n              type=\"number\"\n              (click)=\"$event.stopPropagation()\"\n              (keydown)=\"$event.stopPropagation()\"\n              (keypress)=\"$event.stopPropagation()\"\n              (change)=\"\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value1',\n                  false\n                )\n              \"\n              (keyup)=\"\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value1',\n                  false\n                )\n              \"\n              matInput\n              placeholder=\"\"\n              value=\"{{ data.constrain.values[0] }}\"\n            />\n          </mat-form-field>\n          <mat-form-field\n            style=\"max-width: 45%; float: right\"\n            appearance=\"fill\"\n            (click)=\"$event.stopPropagation()\"\n            (keypress)=\"$event.stopPropagation()\"\n            (keydown)=\"$event.stopPropagation()\"\n          >\n            <mat-label\n              (click)=\"$event.stopPropagation()\"\n              (keypress)=\"$event.stopPropagation()\"\n              >HASTA</mat-label\n            >\n            <input\n              type=\"number\"\n              step=\"100\"\n              (change)=\"\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value2',\n                  false\n                )\n              \"\n              (click)=\"$event.stopPropagation()\"\n              (keydown)=\"$event.stopPropagation()\"\n              (keypress)=\"$event.stopPropagation()\"\n              (keyup)=\"\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value2',\n                  false\n                )\n              \"\n              matInput\n              placeholder=\"\"\n              value=\"{{ data.constrain.values[1] }}\"\n            />\n          </mat-form-field>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </ng-template>\n</mat-menu>\n\n<!-- sidenav-menu -->\n<ng-template #sidenavMenu>\n  <div style=\"padding: 1rem\">\n    <h2>\n      <span *ngIf=\"_confirmation == 'single'\">\n        {{\n          rowConfirmation\n            ? rowConfirmation?.confirmationData?.title\n            : \"Confirmacion\"\n        }}\n      </span>\n      <span *ngIf=\"_confirmation == 'multiple'\">\n        {{\n          generalConfirmation\n            ? generalConfirmation?.confirmationData?.title\n            : \"Confirmacion\"\n        }}\n      </span>\n    </h2>\n    <p>\n      <span *ngIf=\"_confirmation == 'single'\">\n        {{ rowConfirmation?.confirmationData?.content }}\n      </span>\n      <span *ngIf=\"_confirmation == 'multiple'\">\n        {{ generalConfirmation?.confirmationData?.content }}\n      </span>\n    </p>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      style=\"margin-right: 0.5rem\"\n      (click)=\"\n        drawer.toggle();\n        _confirmation == 'single'\n          ? onRowActionClick(rowConfirmation?.row, rowConfirmation!.action)\n          : onGeneralActionClick(generalConfirmation!.action)\n      \"\n    >\n      accept\n    </button>\n    <button mat-raised-button color=\"warn\" (click)=\"drawer.toggle()\">\n      cancel\n    </button>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CuitPipe } from './pipes/cuit.pipe';\nimport { LitotableComponent } from './lito-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { PhonePipe } from './pipes/phone.pipe';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport {\n  LitoColorPickerComponent,\n  DialogColorPicker,\n} from './lito-color-picker/lito-color-picker.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {\n  ConstrainCreatorComponent,\n  ConstrainCreationForm,\n} from './constrain-creator/constrain-creator.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\n@NgModule({\n  declarations: [\n    CuitPipe,\n    PhonePipe,\n    LitotableComponent,\n    LitoColorPickerComponent,\n    DialogColorPicker,\n    ConstrainCreatorComponent,\n    ConstrainCreationForm,\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    FormsModule,\n    MatSliderModule,\n    MatSelectModule,\n    MatStepperModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatDividerModule,\n    DragDropModule,\n    MatSidenavModule,\n  ],\n  exports: [LitotableComponent],\n})\nexport class LitotableModule {}\n","/*\n * Public API Surface of lito-table\n */\nexport * from './lib/lito-table.component';\nexport * from './lib/lito-table.module';\nexport * from './lib/configurations/fieldConstrians.config';\nexport * from './lib/configurations/litotable.config';\nexport * from './lib/column';\nexport * from './lib/constrain-creator/constrain-creator.component';\nexport * from './lib/decorators/column.decorator';\nexport * from './lib/lito-color-picker/lito-color-picker.component';\nexport * from './lib/pipes/cuit.pipe';\nexport * from './lib/pipes/phone.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i4","i2","i3","i9.LitoColorPickerComponent","i11","i14","i1","i8","i10","i12","i13","i15","i16","i17.ConstrainCreatorComponent","i19.LitoColorPickerComponent","i20","i22","i23","i24","i26.CuitPipe","i27.PhonePipe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAKa,MAAM,CAAA;AAejB,IAAA,WAAA,CACE,WAAmB,EACnB,IAAY,EACZ,IAAgB,EAChB,KAAa,EAAA;AAEb,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;AACF;;ACJD;;AAEG;MACU,aAAa,CAAA;IAKxB,WACE,CAAA,IAA4B,EAC5B,MAAoB,EACpB,QAAgB,EAAE,EAClB,SAAkB,IAAI,EAAA;AAOxB,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,CAAO,KAAa;YAC7B,QAAQ,IAAI,CAAC,IAAI;AACf,gBAAA,KAAK,sBAAsB,CAAC,QAAQ,EAAE;AACpC,oBAAA,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAAE,wBAAA,OAAO,IAAI,CAAC;;AAC/B,wBAAA,OAAO,KAAK,CAAC;oBAClB,MAAM;AACP,iBAAA;AACD,gBAAA,KAAK,sBAAsB,CAAC,QAAQ,EAAE;AACpC,oBAAA,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAAE,wBAAA,OAAO,IAAI,CAAC;;AAC/B,wBAAA,OAAO,KAAK,CAAC;oBAClB,MAAM;AACP,iBAAA;AACD,gBAAA,KAAK,sBAAsB,CAAC,MAAM,EAAE;AAClC,oBAAA,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAAE,wBAAA,OAAO,IAAI,CAAC;;AAChC,wBAAA,OAAO,KAAK,CAAC;oBAClB,MAAM;AACP,iBAAA;AACD,gBAAA,KAAK,sBAAsB,CAAC,OAAO,EAAE;AACnC,oBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC;AACzB,wBAAA,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAAE,4BAAA,OAAO,IAAI,CAAC;;AACrD,4BAAA,OAAO,KAAK,CAAC;oBACpB,MAAM;AACP,iBAAA;AACD,gBAAA,KAAK,sBAAsB,CAAC,UAAU,EAAE;AACtC,oBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC;AACzB,wBAAA,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAAE,4BAAA,OAAO,IAAI,CAAC;;AACxD,4BAAA,OAAO,KAAK,CAAC;oBACpB,MAAM;AACP,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,KAAK,CAAC;AACf,SAAC,CAAC;AApCA,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAiCF,CAAA;AAED;;AAEG;MACU,eAAe,CAAA;IAK1B,WACE,CAAA,IAA4B,EAC5B,MAAwB,EACxB,QAAgB,EAAE,EAClB,SAAkB,IAAI,EAAA;AAOxB,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,CAAS,KAAa;YAC/B,QAAQ,IAAI,CAAC,IAAI;AACf,gBAAA,KAAK,sBAAsB,CAAC,QAAQ,EAAE;AACpC,oBAAA,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAAE,wBAAA,OAAO,IAAI,CAAC;;AAC/B,wBAAA,OAAO,KAAK,CAAC;oBAClB,MAAM;AACP,iBAAA;AACD,gBAAA,KAAK,sBAAsB,CAAC,QAAQ,EAAE;AACpC,oBAAA,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAAE,wBAAA,OAAO,IAAI,CAAC;;AAC/B,wBAAA,OAAO,KAAK,CAAC;oBAClB,MAAM;AACP,iBAAA;AACD,gBAAA,KAAK,sBAAsB,CAAC,MAAM,EAAE;AAClC,oBAAA,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAAE,wBAAA,OAAO,IAAI,CAAC;;AAChC,wBAAA,OAAO,KAAK,CAAC;oBAClB,MAAM;AACP,iBAAA;AACD,gBAAA,KAAK,sBAAsB,CAAC,OAAO,EAAE;AACnC,oBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC;AACzB,wBAAA,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAAE,4BAAA,OAAO,IAAI,CAAC;;AACrD,4BAAA,OAAO,KAAK,CAAC;oBACpB,MAAM;AACP,iBAAA;AACD,gBAAA,KAAK,sBAAsB,CAAC,UAAU,EAAE;AACtC,oBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC;AACzB,wBAAA,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAAE,4BAAA,OAAO,IAAI,CAAC;;AACxD,4BAAA,OAAO,KAAK,CAAC;oBACpB,MAAM;AACP,iBAAA;AACF,aAAA;AACD,YAAA,OAAO,KAAK,CAAC;AACf,SAAC,CAAC;AApCA,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;AAiCF,CAAA;AAED;;AAEG;MACU,eAAe,CAAA;AAK1B,IAAA,WAAA,CACE,QAAgB,EAAE,EAClB,SAAkB,IAAI,EACtB,YAAqB,IAAI,EAAA;QAL3B,IAAc,CAAA,cAAA,GAA4B,EAAE,CAAC;AAW7C,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,CAAS,KAAa;AAC/B,YAAA,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;YACjB,IAAI,MAAM,GAAG,IAAI,CAAC;AAClB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnD,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACnC,QAAQ,GAAG,CAAC,IAAI;AACd,oBAAA,KAAK,mBAAmB,CAAC,UAAU,EAAE;AACnC,wBAAA,IACE,EAAE,IAAI,CAAC,aAAa;8BAChB,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;AACzB,8BAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,CAAC;4BAEpE,MAAM,GAAG,KAAK,CAAC;wBACjB,MAAM;AACP,qBAAA;AACD,oBAAA,KAAK,mBAAmB,CAAC,OAAO,EAAE;AAChC,wBAAA,IACE,EAAE,IAAI,CAAC,aAAa;8BAChB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;AACvB,8BAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,CAAC;4BAElE,MAAM,GAAG,KAAK,CAAC;wBACjB,MAAM;AACP,qBAAA;AACD,oBAAA,KAAK,mBAAmB,CAAC,QAAQ,EAAE;AACjC,wBAAA,IACE,EAAE,IAAI,CAAC,aAAa;8BAChB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;AACvB,8BAAE,CAAC,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,CAAC;4BAElE,MAAM,GAAG,KAAK,CAAC;wBACjB,MAAM;AACP,qBAAA;AACF,iBAAA;AACD,gBAAA,IAAI,CAAC,MAAM;oBAAE,MAAM;AACpB,aAAA;AACD,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC;AAzCA,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;KAChC;AAuCD,IAAA,YAAY,CAAC,eAAsC,EAAA;AACjD,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KAC3C;IACD,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B;AACF,CAAA;IAEW,uBAMX;AAND,CAAA,UAAY,sBAAsB,EAAA;AAChC,IAAA,sBAAA,CAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACV,IAAA,sBAAA,CAAA,sBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAY,CAAA;AACZ,IAAA,sBAAA,CAAA,sBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAY,CAAA;AACZ,IAAA,sBAAA,CAAA,sBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAW,CAAA;AACX,IAAA,sBAAA,CAAA,sBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAc,CAAA;AAChB,CAAC,EANW,sBAAsB,KAAtB,sBAAsB,GAMjC,EAAA,CAAA,CAAA,CAAA;IAOW,oBAIX;AAJD,CAAA,UAAY,mBAAmB,EAAA;AAC7B,IAAA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAc,CAAA;AACd,IAAA,mBAAA,CAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAW,CAAA;AACX,IAAA,mBAAA,CAAA,mBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAY,CAAA;AACd,CAAC,EAJW,mBAAmB,KAAnB,mBAAmB,GAI9B,EAAA,CAAA,CAAA;;MC/JY,cAAc,CAAA;AAEzB,IAAA,WAAA,CACE,KAA2E,EAAA;AAE3E,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,QAAA,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAC5B,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACpB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;AACrB,gBAAA,IAAI,CAAC,KAAK,GAAG,OAAO,KAAK,CAAC,CAAC,CAAC,CAAA,EAAA,EAAK,KAAK,CAAC,CAAC,CAAC,CAAK,EAAA,EAAA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AAC3D,aAAA;AAAM,iBAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC5B,IAAI,CAAC,KAAK,GAAG,CAAO,IAAA,EAAA,KAAK,CAAC,CAAC,CAAC,CAAK,EAAA,EAAA,KAAK,CAAC,CAAC,CAAC,CAAK,EAAA,EAAA,KAAK,CAAC,CAAC,CAAC,CAAA,EAAA,EAAK,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,CAAC;AACxE,aAAA;AACF,SAAA;KACF;AACF,CAAA;IAaW,SAGX;AAHD,CAAA,UAAY,QAAQ,EAAA;AAClB,IAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACV,IAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACZ,CAAC,EAHW,QAAQ,KAAR,QAAQ,GAGnB,EAAA,CAAA,CAAA,CAAA;MAEY,kBAAkB,CAAA;IAG7B,WAAY,CAAA,OAA4B,EAAE,UAAA,GAAsB,KAAK,EAAA;AACnE,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;AACD,IAAA,sBAAsB,CAAC,GAAa,EAAA;QAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAI;YACzB,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAC3C,SAAC,CAAC,CAAC;KACJ;AACF,CAAA;IAEW,mBAGX;AAHD,CAAA,UAAY,kBAAkB,EAAA;AAC5B,IAAA,kBAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACV,IAAA,kBAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAY,CAAA;AACd,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB,GAG7B,EAAA,CAAA,CAAA,CAAA;IAEW,eAKX;AALD,CAAA,UAAY,cAAc,EAAA;AACxB,IAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACV,IAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACV,IAAA,cAAA,CAAA,cAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACV,IAAA,cAAA,CAAA,cAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAW,CAAA;AACb,CAAC,EALW,cAAc,KAAd,cAAc,GAKzB,EAAA,CAAA,CAAA;;AC5FK,SAAU,WAAW,CAAC,cAAmC,EAAA;AAC7D,IAAA,OAAO,CAAC,MAAc,EAAE,WAAmB,KAAI;QAC7C,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;AAChE,QAAA,MAAM,OAAO,GAAG;AACd,YAAA,WAAW,EAAE,WAAW;AACxB,YAAA,QAAQ,EAAE,cAAc;SACzB,CAAC;QACF,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,QAAQ,IAAI,SAAS,EAAE;AACzB,YAAA,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;AACxB,SAAA;AACD,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnB,OAAO,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAC1D,KAAC,CAAC;AACJ,CAAC;IAEW,WASX;AATD,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACV,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAW,CAAA;AACX,IAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAS,CAAA;AACT,IAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAQ,CAAA;AACR,IAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAY,CAAA;AACZ,IAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAQ,CAAA;AACR,IAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAS,CAAA;AACT,IAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAQ,CAAA;AACV,CAAC,EATW,UAAU,KAAV,UAAU,GASrB,EAAA,CAAA,CAAA,CAAA;IAEW,uBAIX;AAJD,CAAA,UAAY,sBAAsB,EAAA;AAChC,IAAA,sBAAA,CAAA,sBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAQ,CAAA;AACR,IAAA,sBAAA,CAAA,sBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;AACV,IAAA,sBAAA,CAAA,sBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAS,CAAA;AACX,CAAC,EAJW,sBAAsB,KAAtB,sBAAsB,GAIjC,EAAA,CAAA,CAAA;;MCzBY,wBAAwB,CAAA;AAQnC,IAAA,WAAA,CAAmB,MAAiB,EAAA;QAAjB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QANlB,IAAO,CAAA,OAAA,GAAW,OAAO,CAAC;AAC1B,QAAA,IAAA,CAAA,MAAM,GAAyB,IAAI,YAAY,EAAE,CAAC;AAC3C,QAAA,IAAA,CAAA,GAAG,GAC1B,IAAI,YAAY,EAAE,CAAC;KAGmB;AAExC,IAAA,QAAQ,MAAW;IAEnB,UAAU,GAAA;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE;AACpD,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE;AACtE,SAAA,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,KAAI;AAC3C,YAAA,IAAI,MAAM;AAAE,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,SAAC,CAAC,CAAC;KACJ;;sHArBU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,oKC1BrC,6EACA,EAAA,MAAA,EAAA,CAAA,wKAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDyBa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,uBAAuB;AACjC,oBAAA,WAAW,EAAE,oCAAoC;oBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;AACjD,iBAAA,CAAA;gGAEkB,MAAM,EAAA,CAAA;sBAAtB,KAAK;uBAAC,QAAQ,CAAA;gBACG,OAAO,EAAA,CAAA;sBAAxB,KAAK;uBAAC,SAAS,CAAA;gBACE,MAAM,EAAA,CAAA;sBAAvB,MAAM;uBAAC,QAAQ,CAAA;gBACS,GAAG,EAAA,CAAA;sBAA3B,MAAM;uBAAC,eAAe,CAAA;;MAyBZ,iBAAiB,CAAA;IAM5B,WACS,CAAA,SAA0C,EACjB,IAAqB,EAAA;QAD9C,IAAS,CAAA,SAAA,GAAT,SAAS,CAAiC;QACjB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAiB;QAPvD,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;QACnB,IAAE,CAAA,EAAA,GAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,IAAc,CAAA,cAAA,GAAG,oBAAoB,CAAC;QACtC,IAAG,CAAA,GAAA,GAAW,MAAM,CAAC;QACrB,IAAU,CAAA,UAAA,GAAqB,WAAW,CAAC;KAIvC;IAEJ,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;IAED,mBAAmB,CAAC,KAAa,EAAE,KAAU,EAAA;AAC3C,QAAA,QAAQ,KAAK;AACX,YAAA,KAAK,GAAG;AACN,gBAAA,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;gBACnB,MAAM;AACR,YAAA,KAAK,GAAG;AACN,gBAAA,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;gBACnB,MAAM;AACR,YAAA,KAAK,GAAG;AACN,gBAAA,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;gBACnB,MAAM;AACT,SAAA;QACD,IAAI,CAAC,cAAc,GAAG,CAAO,IAAA,EAAA,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAK,EAAA,EAAA,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAI,CAAA,EAAA,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,CAAC;QACxE,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;AAAE,YAAA,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;;AAC5D,YAAA,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC;KACxB;;AA9BU,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,8CAQlB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AARd,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,sEEvD9B,4nBAwBA,EAAA,MAAA,EAAA,CAAA,wKAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FF+Ba,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gCAAgC;AAC1C,oBAAA,WAAW,EAAE,0BAA0B;oBACvC,SAAS,EAAE,CAAC,mCAAmC,CAAC;AACjD,iBAAA,CAAA;;0BASI,MAAM;2BAAC,eAAe,CAAA;;AAyBd,MAAA,WAAW,GAAqB;IAC3C,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAE7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAE7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAE7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAE7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;IAC7B,IAAI,cAAc,CAAC,SAAS,CAA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"}
{"version":3,"file":"lito-table.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/lito-table/src/lib/column.ts","../../../projects/lito-table/src/lib/configurations/fieldConstrians.config.ts","../../../projects/lito-table/src/lib/configurations/litotable.config.ts","../../../projects/lito-table/src/lib/decorators/column.decorator.ts","../../../projects/lito-table/src/lib/lito-color-picker/lito-color-picker.component.ts","../../../projects/lito-table/src/lib/lito-color-picker/lito-color-picker.component.html","../../../projects/lito-table/src/lib/lito-color-picker/dialog-color-picker.html","../../../projects/lito-table/src/lib/constrain-creator/constrain-creator.component.ts","../../../projects/lito-table/src/lib/constrain-creator/constrain-creator.component.html","../../../projects/lito-table/src/lib/constrain-creator/constrain-form.component.html","../../../projects/lito-table/src/lib/pipes/cuit.pipe.ts","../../../projects/lito-table/src/lib/pipes/phone.pipe.ts","../../../projects/lito-table/src/lib/lito-table.component.ts","../../../projects/lito-table/src/lib/lito-table.component.html","../../../projects/lito-table/src/lib/lito-table.module.ts","../../../projects/lito-table/src/public-api.ts","../../../projects/lito-table/src/lito-table.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import {\r\n  ColumnContentAlignment,\r\n  ColumnType,\r\n} from './decorators/column.decorator';\r\n\r\nexport class Column {\r\n  propertyKey: string;\r\n  visible?: boolean;\r\n  order: number;\r\n  name: string;\r\n  type: ColumnType;\r\n  format?: string;\r\n  contentAlign?: ColumnContentAlignment;\r\n  mutable?: boolean;\r\n  mutableAction?: (object: any) => any;\r\n  constructor(\r\n    propertyKey: string,\r\n    name: string,\r\n    type: ColumnType,\r\n    order: number\r\n  ) {\r\n    this.propertyKey = propertyKey;\r\n    this.name = name;\r\n    this.type = type;\r\n    this.order = order;\r\n  }\r\n}\r\n","import { ColumnType } from '../decorators/column.decorator';\r\n\r\n/**\r\n * This interface is for configuration\r\n *\r\n */\r\nexport interface FieldConstrianStyle {\r\n  propertyKey: string;\r\n  constrainName: string;\r\n  type: ColumnType;\r\n  constrain: Constrain;\r\n  /* metadata: {\r\n    enable: boolean;\r\n    trigger: (e: any) => boolean;\r\n    style: Object;\r\n  }; */\r\n}\r\n\r\n/**\r\n * This interface is for every Constrain\r\n */\r\nexport interface Constrain {\r\n  style: any;\r\n  enable: boolean;\r\n  trigger: (e: any) => boolean;\r\n}\r\n\r\n/**\r\n * This class is for date constrains\r\n */\r\nexport class DateConstrain implements Constrain {\r\n  style: Object;\r\n  enable: boolean;\r\n  values: [Date, Date];\r\n  type: MesurableConstrainType;\r\n  constructor(\r\n    type: MesurableConstrainType,\r\n    values: [Date, Date],\r\n    style: Object = {},\r\n    enable: boolean = true\r\n  ) {\r\n    this.type = type;\r\n    this.values = values;\r\n    this.style = style;\r\n    this.enable = enable;\r\n  }\r\n  trigger = (e: Date): boolean => {\r\n    switch (this.type) {\r\n      case MesurableConstrainType.LESSTHAN: {\r\n        if (e < this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.MORETHAN: {\r\n        if (e > this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.EQUALS: {\r\n        if (e == this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.BETWEEN: {\r\n        if (this.values.length == 2)\r\n          if (e > this.values[0] && e < this.values[1]) return true;\r\n          else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.NOTBETWEEN: {\r\n        if (this.values.length == 2)\r\n          if (!(e > this.values[0] && e < this.values[1])) return true;\r\n          else return false;\r\n        break;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\n/**\r\n * This class is for numbers constrains (integer, float, decimal, etc..)\r\n */\r\nexport class NumberConstrain implements Constrain {\r\n  style: Object;\r\n  enable: boolean;\r\n  values: [number, number];\r\n  type: MesurableConstrainType;\r\n  constructor(\r\n    type: MesurableConstrainType,\r\n    values: [number, number],\r\n    style: Object = {},\r\n    enable: boolean = true\r\n  ) {\r\n    this.type = type;\r\n    this.values = values;\r\n    this.style = style;\r\n    this.enable = enable;\r\n  }\r\n  trigger = (e: number): boolean => {\r\n    switch (this.type) {\r\n      case MesurableConstrainType.LESSTHAN: {\r\n        if (e < this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.MORETHAN: {\r\n        if (e > this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.EQUALS: {\r\n        if (e == this.values[0]) return true;\r\n        else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.BETWEEN: {\r\n        if (this.values.length == 2)\r\n          if (e > this.values[0] && e < this.values[1]) return true;\r\n          else return false;\r\n        break;\r\n      }\r\n      case MesurableConstrainType.NOTBETWEEN: {\r\n        if (this.values.length == 2)\r\n          if (!(e > this.values[0] && e < this.values[1])) return true;\r\n          else return false;\r\n        break;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\n/**\r\n * This class is for string constrains\r\n */\r\nexport class StringConstrain implements Constrain {\r\n  style: Object;\r\n  enable: boolean;\r\n  constrainArray: StringConstrainObject[] = [];\r\n  caseSensitive: boolean;\r\n  constructor(\r\n    style: Object = {},\r\n    enable: boolean = true,\r\n    caseSense: boolean = true\r\n  ) {\r\n    this.style = style;\r\n    this.enable = enable;\r\n    this.caseSensitive = caseSense;\r\n  }\r\n  trigger = (e: string): boolean => {\r\n    e = e.toString();\r\n    let result = true;\r\n    for (let i = 0; i < this.constrainArray.length; i++) {\r\n      const con = this.constrainArray[i];\r\n      switch (con.type) {\r\n        case StringConstrainType.STARTSWITH: {\r\n          if (\r\n            !(this.caseSensitive\r\n              ? e.startsWith(con.value)\r\n              : e.toLocaleLowerCase().startsWith(con.value.toLocaleLowerCase()))\r\n          )\r\n            result = false;\r\n          break;\r\n        }\r\n        case StringConstrainType.ENDWITH: {\r\n          if (\r\n            !(this.caseSensitive\r\n              ? e.endsWith(con.value)\r\n              : e.toLocaleLowerCase().endsWith(con.value.toLocaleLowerCase()))\r\n          )\r\n            result = false;\r\n          break;\r\n        }\r\n        case StringConstrainType.CONTAINS: {\r\n          if (\r\n            !(this.caseSensitive\r\n              ? e.includes(con.value)\r\n              : e.toLocaleLowerCase().includes(con.value.toLocaleLowerCase()))\r\n          )\r\n            result = false;\r\n          break;\r\n        }\r\n      }\r\n      if (!result) break;\r\n    }\r\n    return result;\r\n  };\r\n  addConstrain(stringConstrain: StringConstrainObject) {\r\n    this.constrainArray.push(stringConstrain);\r\n  }\r\n  clearConstrains() {\r\n    this.constrainArray = [];\r\n  }\r\n}\r\n\r\nexport enum MesurableConstrainType {\r\n  EQUALS = 1,\r\n  MORETHAN = 2,\r\n  LESSTHAN = 3,\r\n  BETWEEN = 4,\r\n  NOTBETWEEN = 5,\r\n}\r\n\r\nexport interface StringConstrainObject {\r\n  type: StringConstrainType;\r\n  value: string;\r\n}\r\n\r\nexport enum StringConstrainType {\r\n  STARTSWITH = 1,\r\n  ENDWITH = 2,\r\n  CONTAINS = 3,\r\n}\r\n","import { Component, TemplateRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface LitoFooterAction {\r\n  icon?: string;\r\n  content?: string;\r\n  color?: string;\r\n  actionResult: {\r\n    willAddRow: boolean;\r\n    actionObservable?: Observable<any>;\r\n    nonObservableAction?: () => any;\r\n  };\r\n  template?: Component;\r\n}\r\n\r\nexport interface LitoGeneralAction {\r\n  name: string;\r\n  icon?: string;\r\n  content?: string;\r\n  color?: string;\r\n  mustLockRows: boolean;\r\n  template?: Component;\r\n  confirmation?: LitoGeneralActionConfirmation;\r\n  performable: { state: boolean; tooltip: string };\r\n  updatePerformable: (selectedRows: Set<any>) => {\r\n    state: boolean;\r\n    tooltip: string;\r\n  };\r\n}\r\n\r\nexport interface LitoRowAction {\r\n  name: string;\r\n  tooltip: string;\r\n  icon: string;\r\n  color: string;\r\n  actionResult: {\r\n    willUpdateRow?: boolean;\r\n    willDeleteRow?: boolean;\r\n    actionObservable?: Observable<any>;\r\n  };\r\n  confirmation?: LitoRowActionConfirmation;\r\n}\r\nexport interface LitoRowActionConfirmation {\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nexport interface LitoGeneralActionConfirmation {\r\n  title: string;\r\n  content: string;\r\n  items?: any[];\r\n  primaryKey: string;\r\n}\r\n\r\nexport class LitotableColor {\r\n  value: string;\r\n  constructor(\r\n    value: [number, number, number] | [number, number, number, number] | string\r\n  ) {\r\n    this.value = '';\r\n    if (typeof value == 'string') {\r\n      this.value = value;\r\n    } else {\r\n      if (value.length == 3) {\r\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\r\n      } else if (value.length == 4) {\r\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface TableConfigurations {\r\n  paginationSizes?: number[];\r\n  hoverStyle?: RowStyle;\r\n  selectionStyle?: RowStyle;\r\n  rowStyleColors?: LitotableColor[];\r\n  headerBorders?: boolean;\r\n  cellBorders?: boolean;\r\n  actionsColumn?: LitoRowAction[];\r\n  footerAction?: LitoFooterAction;\r\n}\r\n\r\nexport enum RowStyle {\r\n  BORDER = 1,\r\n  SHADOW = 2,\r\n}\r\n\r\nexport class TableActionsConfig {\r\n  actions: LitoGeneralAction[];\r\n  constructor(actions: LitoGeneralAction[]) {\r\n    this.actions = actions;\r\n  }\r\n  updatePermormableState(set: Set<any>) {\r\n    this.actions.forEach((a) => {\r\n      a.performable = a.updatePerformable(set);\r\n    });\r\n  }\r\n}\r\n\r\nexport enum GeneralActionScope {\r\n  SINGLE = 1,\r\n  MULTIPLE = 2,\r\n}\r\n\r\nexport enum TableOperation {\r\n  CREATE = 1,\r\n  UPDATE = 2,\r\n  DELETE = 3,\r\n  RESTORE = 4,\r\n}\r\n","import 'reflect-metadata';\r\nexport interface TableColumnMetadata {\r\n  visible?: boolean;\r\n  order: number;\r\n  columnName?: string;\r\n  type?: ColumnType;\r\n  format?: string;\r\n  contentAlign?: ColumnContentAlignment;\r\n  columnGroup?: ColumnGroup;\r\n}\r\n\r\nexport interface ColumnGroup {\r\n  name: string;\r\n}\r\n\r\nexport function TableColumn(columnMetadata: TableColumnMetadata) {\r\n  return (target: Object, propertyKey: string) => {\r\n    const prevData = Reflect.getMetadata('columnsMetadata', target);\r\n    const newData = {\r\n      propertyKey: propertyKey,\r\n      metadata: columnMetadata,\r\n    };\r\n    let data = [];\r\n    if (prevData != undefined) {\r\n      data.push(...prevData);\r\n    }\r\n    data.push(newData);\r\n    Reflect.defineMetadata('columnsMetadata', data, target);\r\n  };\r\n}\r\n\r\nexport enum ColumnType {\r\n  STRING = 0,\r\n  INTEGER = 1,\r\n  FLOAT = 2,\r\n  DATE = 3,\r\n  CURRENCY = 4,\r\n  CUIT = 5,\r\n  PHONE = 6,\r\n}\r\n\r\nexport enum ColumnContentAlignment {\r\n  LEFT = 1,\r\n  CENTER = 2,\r\n  RIGHT = 3,\r\n}\r\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { LitotableColor } from '../configurations/litotable.config';\n\nexport interface DialogColorData {\n  title: string;\n  value: string;\n  colors: LitotableColor[];\n}\n\n@Component({\n  selector: 'app-lito-color-picker',\n  templateUrl: './lito-color-picker.component.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class LitoColorPickerComponent implements OnInit {\n  @Input('colors') colors?: LitotableColor[];\n  @Input('content') content: string = 'color';\n  @Output('result') result: EventEmitter<string> = new EventEmitter();\n  @Output('newColorArray') arr: EventEmitter<LitotableColor[]> =\n    new EventEmitter();\n  value?: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogColorPicker, {\n      width: '380px',\n      data: { colors: this.colors, value: this.value, title: this.content },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-color-picker.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class DialogColorPicker {\n  value: string = '';\n  nc: [number, number, number] = [0, 0, 0];\n  newColorString = 'rgb(255, 255, 255)';\n  fgc: string = '#222';\n  mainColors: LitotableColor[] = MAIN_COLORS;\n  constructor(\n    public dialogRef: MatDialogRef<DialogColorPicker>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogColorData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  changeNewColorValue(color: string, value: any) {\n    switch (color) {\n      case 'r':\n        this.nc[0] = value;\n        break;\n      case 'g':\n        this.nc[1] = value;\n        break;\n      case 'b':\n        this.nc[2] = value;\n        break;\n    }\n    this.newColorString = `rgb(${this.nc[0]}, ${this.nc[1]},${this.nc[2]})`;\n    if (this.nc.reduce((a, c) => a + c) / 3 < 180) this.fgc = '#fff';\n    else this.fgc = '#222';\n  }\n}\n\nexport const MAIN_COLORS: LitotableColor[] = [\n  new LitotableColor('#000000'),\n  new LitotableColor('#434343'),\n  new LitotableColor('#666666'),\n  new LitotableColor('#999999'),\n  new LitotableColor('#b7b7b7'),\n  new LitotableColor('#cccccc'),\n  new LitotableColor('#d9d9d9'),\n  new LitotableColor('#efefef'),\n  new LitotableColor('#f3f3f3'),\n  new LitotableColor('#ffffff'),\n\n  new LitotableColor('#980000'),\n  new LitotableColor('#ff0000'),\n  new LitotableColor('#ff9900'),\n  new LitotableColor('#ffff00'),\n  new LitotableColor('#00ff00'),\n  new LitotableColor('#00ffff'),\n  new LitotableColor('#4a86e8'),\n  new LitotableColor('#0000ff'),\n  new LitotableColor('#9900ff'),\n  new LitotableColor('#ff00ff'),\n\n  new LitotableColor('#e6b8af'),\n  new LitotableColor('#f4cccc'),\n  new LitotableColor('#fce5cd'),\n  new LitotableColor('#fff2cc'),\n  new LitotableColor('#d9ead3'),\n  new LitotableColor('#d0e0e3'),\n  new LitotableColor('#c9daf8'),\n  new LitotableColor('#cfe2f3'),\n  new LitotableColor('#d9d2e9'),\n  new LitotableColor('#ead1dc'),\n\n  new LitotableColor('#dd7e6b'),\n  new LitotableColor('#ea9999'),\n  new LitotableColor('#f9cb9c'),\n  new LitotableColor('#ffe599'),\n  new LitotableColor('#b6d7a8'),\n  new LitotableColor('#a2c4c9'),\n  new LitotableColor('#a4c2f4'),\n  new LitotableColor('#9fc5e8'),\n  new LitotableColor('#b4a7d6'),\n  new LitotableColor('#d5a6bd'),\n\n  new LitotableColor('#cc4125'),\n  new LitotableColor('#e06666'),\n  new LitotableColor('#f6b26b'),\n  new LitotableColor('#ffd966'),\n  new LitotableColor('#93c47d'),\n  new LitotableColor('#76a5af'),\n  new LitotableColor('#6d9eeb'),\n  new LitotableColor('#6fa8dc'),\n  new LitotableColor('#8e7cc3'),\n  new LitotableColor('#c27ba0'),\n\n  new LitotableColor('#a61c00'),\n  new LitotableColor('#cc0000'),\n  new LitotableColor('#e69138'),\n  new LitotableColor('#f1c232'),\n  new LitotableColor('#6aa84f'),\n  new LitotableColor('#45818e'),\n  new LitotableColor('#3c78d8'),\n  new LitotableColor('#3d85c6'),\n  new LitotableColor('#674ea7'),\n  new LitotableColor('#a64d79'),\n\n  new LitotableColor('#85200c'),\n  new LitotableColor('#990000'),\n  new LitotableColor('#b45f06'),\n  new LitotableColor('#bf9000'),\n  new LitotableColor('#38761d'),\n  new LitotableColor('#134f5c'),\n  new LitotableColor('#1155cc'),\n  new LitotableColor('#0b5394'),\n  new LitotableColor('#351c75'),\n  new LitotableColor('#741b47'),\n\n  new LitotableColor('#5b0f00'),\n  new LitotableColor('#660000'),\n  new LitotableColor('#783f04'),\n  new LitotableColor('#7f6000'),\n  new LitotableColor('#274e13'),\n  new LitotableColor('#0c343d'),\n  new LitotableColor('#1c4587'),\n  new LitotableColor('#073763'),\n  new LitotableColor('#20124d'),\n  new LitotableColor('#4c1130'),\n];\n","<button mat-raised-button (click)=\"openDialog()\">{{ content }}</button>\n","<div mat-dialog-title>\r\n  <span>{{data.title?data.title:'Colors'}}</span>\r\n</div>\r\n<div mat-dialog-content>\r\n  <div class=\"colors-container\" style=\"margin-top: 1rem\">\r\n    <mat-icon\r\n      *ngFor=\"let c of mainColors\"\r\n      [mat-dialog-close]=\"c.value\"\r\n      [style]=\"{\r\n            color: c.value\r\n          }\"\r\n      >circle</mat-icon\r\n    >\r\n    <mat-icon\r\n      *ngFor=\"let c of data.colors\"\r\n      [mat-dialog-close]=\"c.value\"\r\n      matSuffix\r\n      [style]=\"{\r\n                color: c.value\r\n              }\"\r\n      >circle</mat-icon\r\n    >\r\n  </div>\r\n</div>\r\n","import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Column } from '../column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  NumberConstrain,\n  MesurableConstrainType,\n  DateConstrain,\n  StringConstrainType,\n  StringConstrain,\n  StringConstrainObject,\n} from '../configurations/fieldConstrians.config';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ColumnType } from '../decorators/column.decorator';\nimport { MatAccordion } from '@angular/material/expansion';\n\nexport class ConstrainCreationFormData {\n  columns: Column[] = [];\n}\n\n@Component({\n  selector: 'litotable-constrain-creator',\n  templateUrl: './constrain-creator.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreatorComponent implements OnInit {\n  @Input('columns') columns: Column[] = [];\n  @Output('result-constrain') result: EventEmitter<FieldConstrianStyle> =\n    new EventEmitter();\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConstrainCreationForm, {\n      data: { columns: this.columns },\n      maxHeight: '80vh',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'constrain-creation-form-dialog',\n  templateUrl: 'constrain-form.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreationForm {\n  fieldFormGroup!: FormGroup;\n  stringFormGroup!: FormGroup;\n  fieldConstrain: FieldConstrianStyle | any;\n  numberConstrainType = MesurableConstrainType;\n  stringConstrainType = StringConstrainType;\n  finalString: string = '';\n  valueType: string = '';\n  @ViewChild(MatAccordion) strAccordion!: MatAccordion;\n\n  dateRange = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialogRef: MatDialogRef<ConstrainCreationForm>,\n    @Inject(MAT_DIALOG_DATA) public data: ConstrainCreationFormData,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.fieldFormGroup = this._formBuilder.group({\n      field: ['', Validators.required],\n    });\n    this.stringFormGroup = this._formBuilder.group({\n      startWith: [''],\n      startWithToogle: [''],\n      includes: [''],\n      includesToogle: [''],\n      endsWith: [''],\n      endsWithToogle: [''],\n    });\n    this.resetValues();\n\n    this.getFinalText();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onFieldSelectorChange(selected: Column) {\n    this.resetValues();\n    if (selected) {\n      this.fieldConstrain.propertyKey = selected.propertyKey;\n      this.fieldConstrain.constrainName = selected.name;\n      this.fieldConstrain.type = selected.type;\n\n      switch (selected.type) {\n        case ColumnType.DATE:\n          this.fieldConstrain.constrain = new DateConstrain(\n            this.numberConstrainType.MORETHAN,\n            [new Date(), new Date()],\n            {\n              color: '#eee',\n              'background-color': '#888',\n            }\n          );\n          break;\n        case ColumnType.STRING:\n        case ColumnType.PHONE:\n        case ColumnType.CUIT:\n          this.fieldConstrain.constrain = new StringConstrain({\n            color: '#eee',\n            'background-color': '#888',\n          });\n          break;\n      }\n    }\n    this.getFinalText();\n  }\n\n  changeConstrainStyle(value: any, field: string) {\n    if (field && field != '') {\n      this.fieldConstrain.constrain.style[field] = value;\n    }\n  }\n\n  changeConstrainState(value: any, field: string) {\n    switch (field) {\n      case 'date-type':\n      case 'number-type':\n        this.fieldConstrain.constrain.type = parseFloat(value.value);\n        break;\n      case 'number-value':\n      case 'number-value1':\n        this.fieldConstrain.constrain.values[0] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'number-value2':\n        this.fieldConstrain.constrain.values[1] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'date-value':\n      case 'date-value1':\n        this.fieldConstrain.constrain.values[0] = new Date(value.value);\n        break;\n      case 'date-value2':\n        this.fieldConstrain.constrain.values[1] = new Date(value.value);\n        break;\n    }\n    this.getFinalText();\n  }\n\n  getFinalText() {\n    this.finalString = '';\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.FLOAT:\n        this.valueType = 'value';\n        this.finalString = `that is `;\n        break;\n      case ColumnType.DATE:\n        this.valueType = 'date';\n        break;\n      case ColumnType.STRING:\n      case ColumnType.PHONE:\n      case ColumnType.CUIT:\n        this.valueType = 'string';\n        this.finalString = `that `;\n        break;\n      default:\n        this.valueType = 'value';\n        break;\n    }\n\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.CURRENCY:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `more than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `less than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n        }\n        break;\n      case ColumnType.DATE:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `after ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `before ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n        }\n\n        break;\n      case ColumnType.STRING:\n      case ColumnType.CUIT:\n      case ColumnType.PHONE:\n        for (\n          let i = 0;\n          i < this.fieldConstrain.constrain.constrainArray.length;\n          i++\n        ) {\n          const strConstr: StringConstrainObject =\n            this.fieldConstrain.constrain.constrainArray[i];\n\n          switch (strConstr.type) {\n            case StringConstrainType.STARTSWITH:\n              this.finalString += `starts width ${strConstr.value}`;\n              break;\n            case StringConstrainType.CONTAINS:\n              this.finalString += `contains ${strConstr.value}`;\n              break;\n            case StringConstrainType.ENDWITH:\n              this.finalString += `ends width ${strConstr.value}`;\n              break;\n          }\n          if (this.fieldConstrain.constrain.constrainArray.length > 1) {\n            if (i < this.fieldConstrain.constrain.constrainArray.length - 2)\n              this.finalString += ', ';\n            if (i == this.fieldConstrain.constrain.constrainArray.length - 2)\n              this.finalString += ' and ';\n          }\n        }\n        break;\n    }\n  }\n\n  shortDate(str: string): string {\n    return new Date(str).toLocaleDateString('en-US', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    });\n  }\n\n  resetValues() {\n    this.stringFormGroup.reset();\n    this.fieldConstrain = {\n      propertyKey: this.data.columns[0].propertyKey,\n      constrainName: 'New Constrain',\n      type: ColumnType.INTEGER,\n      constrain: new NumberConstrain(\n        this.numberConstrainType.MORETHAN,\n        [0, 0],\n        {\n          color: '#eee',\n          'background-color': '#888',\n        }\n      ),\n      metadata: {\n        enable: true,\n        trigger: (e: any) => false,\n        style: {},\n      },\n    };\n    if (this.strAccordion) this.strAccordion.closeAll();\n  }\n\n  updateStringConstrain() {\n    let values: {\n      startWith: any;\n      startWithToogle: any;\n      includes: any;\n      includesToogle: any;\n      endsWith: any;\n      endsWithToogle: any;\n    } = this.stringFormGroup.value;\n\n    this.fieldConstrain.constrain.clearConstrains();\n    if (values.startWithToogle && values.startWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.STARTSWITH,\n        value: values.startWith,\n      });\n    if (values.includesToogle && values.includes)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.CONTAINS,\n        value: values.includes,\n      });\n    if (values.endsWithToogle && values.endsWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.ENDWITH,\n        value: values.endsWith,\n      });\n    this.getFinalText();\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.fieldConstrain);\n    console.log(this.fieldConstrain.constrain);\n  }\n}\n","<div (click)=\"openDialog()\">\n  <ng-content></ng-content>\n</div>\n","<div mat-dialog-content>\r\n  <mat-stepper [linear]=\"true\" #stepper orientation=\"vertical\">\r\n    <!-- Field step -->\r\n    <mat-step [stepControl]=\"fieldFormGroup\">\r\n      <div style=\"margin-top: 1rem\"></div>\r\n      <ng-template matStepLabel>Select a field</ng-template>\r\n      <ng-container *ngTemplateOutlet=\"constrainNameSelector\"></ng-container>\r\n      <div>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </mat-step>\r\n    <!-- Style step -->\r\n    <mat-step>\r\n      <div style=\"margin-top: 1rem\"></div>\r\n      <ng-template matStepLabel>Aply style</ng-template>\r\n      <ng-container *ngTemplateOutlet=\"constrainCreationStyle\"></ng-container>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </mat-step>\r\n    <!-- Constrain step -->\r\n    <mat-step>\r\n      <div style=\"margin-top: 1rem\"></div>\r\n      <ng-template matStepLabel>Set constrain</ng-template>\r\n      <ng-container [ngSwitch]=\"fieldConstrain.type\">\r\n        <!-- Numericos -->\r\n        <ng-container\r\n          *ngSwitchCase=\"1\"\r\n          [ngTemplateOutlet]=\"numberConstrainSelector\"\r\n        ></ng-container>\r\n        <ng-container\r\n          *ngSwitchCase=\"2\"\r\n          [ngTemplateOutlet]=\"numberConstrainSelector\"\r\n        ></ng-container>\r\n        <ng-container\r\n          *ngSwitchCase=\"4\"\r\n          [ngTemplateOutlet]=\"numberConstrainSelector\"\r\n        ></ng-container>\r\n\r\n        <!-- Date -->\r\n        <ng-container\r\n          *ngSwitchCase=\"3\"\r\n          [ngTemplateOutlet]=\"dateConstrainSelector\"\r\n        ></ng-container>\r\n        <!-- String -->\r\n        <ng-container\r\n          *ngSwitchCase=\"0\"\r\n          [ngTemplateOutlet]=\"stringConstrainSelector\"\r\n        ></ng-container>\r\n        <ng-container\r\n          *ngSwitchCase=\"5\"\r\n          [ngTemplateOutlet]=\"stringConstrainSelector\"\r\n        ></ng-container>\r\n        <ng-container\r\n          *ngSwitchCase=\"6\"\r\n          [ngTemplateOutlet]=\"stringConstrainSelector\"\r\n        ></ng-container>\r\n      </ng-container>\r\n\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button matStepperNext>Next</button>\r\n      </div>\r\n    </mat-step>\r\n    <!-- Final step -->\r\n    <mat-step>\r\n      <ng-template matStepLabel>Done</ng-template>\r\n      <div style=\"width: 350px\">\r\n        <p\r\n          class=\"mat-elevation-z4\"\r\n          [style]=\"{\r\n            color: fieldConstrain.constrain.style['color'],\r\n            'background-color':\r\n              fieldConstrain.constrain.style['background-color'],\r\n            padding: '1rem',\r\n            'border-radius': '4px'\r\n          }\"\r\n        >\r\n          Every {{ valueType }} from column\r\n          <strong>{{ fieldConstrain.constrainName }}</strong>\r\n          {{ finalString }}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button (click)=\"stepper.reset(); resetValues()\">\r\n          Reset\r\n        </button>\r\n        <button mat-button (click)=\"closeDialog()\">Create</button>\r\n      </div>\r\n    </mat-step>\r\n  </mat-stepper>\r\n</div>\r\n\r\n<ng-template #constrainNameSelector>\r\n  <form [formGroup]=\"fieldFormGroup\">\r\n    <mat-form-field appearance=\"fill\">\r\n      <mat-label>Field</mat-label>\r\n      <mat-select\r\n        formControlName=\"field\"\r\n        required\r\n        (ngModelChange)=\"onFieldSelectorChange($event)\"\r\n      >\r\n        <mat-option>None</mat-option>\r\n        <mat-option *ngFor=\"let column of data.columns\" [value]=\"column\">{{\r\n          column.name\r\n        }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #constrainCreationStyle>\r\n  <mat-expansion-panel\r\n    hideToggle\r\n    [style]=\"{\r\n      'background-color': fieldConstrain.constrain.style['background-color'],\r\n      'margin-bottom': '1rem'\r\n    }\"\r\n  >\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title\r\n        [style]=\"{\r\n          color: fieldConstrain.constrain.style['color'],\r\n          'justify-content': 'center'\r\n        }\"\r\n        >{{ fieldConstrain.constrainName }}</mat-panel-title\r\n      >\r\n    </mat-expansion-panel-header>\r\n    <div class=\"flex-center\">\r\n      <app-lito-color-picker\r\n        (result)=\"changeConstrainStyle($event, 'background-color')\"\r\n        content=\"Background\"\r\n      ></app-lito-color-picker>\r\n      <app-lito-color-picker\r\n        style=\"margin-left: 1rem\"\r\n        (result)=\"changeConstrainStyle($event, 'color')\"\r\n        content=\"Foreground\"\r\n      ></app-lito-color-picker>\r\n    </div>\r\n  </mat-expansion-panel>\r\n</ng-template>\r\n\r\n<ng-template #numberConstrainSelector>\r\n  <mat-button-toggle-group\r\n    class=\"number-constrain-selector\"\r\n    name=\"constrainSelect\"\r\n    aria-label=\"Constrain select\"\r\n    value=\"{{ fieldConstrain.constrain.type }}\"\r\n    (change)=\"changeConstrainState($event, 'number-type')\"\r\n  >\r\n    <mat-button-toggle value=\"1\" matTooltip=\"EQUALS\">\r\n      <mat-icon>drag_handle</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"2\" matTooltip=\"MORE THAN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">expand_less</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"3\" matTooltip=\"LESS THAN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">expand_more</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"4\" matTooltip=\"BETWEEN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">unfold_less</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"5\" matTooltip=\"NOT BETWEEN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">unfold_more</mat-icon>\r\n    </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n  <div\r\n    *ngIf=\"\r\n      fieldConstrain.constrain.type != numberConstrainType.BETWEEN &&\r\n      fieldConstrain.constrain.type != numberConstrainType.NOTBETWEEN\r\n    \"\r\n    style=\"display: flex; justify-content: space-between\"\r\n  >\r\n    <mat-form-field style=\"width: 100%\" appearance=\"fill\">\r\n      <mat-label\r\n        (click)=\"$event.stopPropagation()\"\r\n        [ngSwitch]=\"fieldConstrain.constrain.type\"\r\n      >\r\n        <span *ngSwitchCase=\"numberConstrainType.EQUALS\">EQUALS</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.LESSTHAN\">LESS THAN</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.MORETHAN\">MORE THAN</span>\r\n      </mat-label>\r\n      <input\r\n        type=\"number\"\r\n        step=\"0.1\"\r\n        (change)=\"\r\n          $event.stopPropagation(); changeConstrainState($event, 'number-value')\r\n        \"\r\n        (keyup)=\"\r\n          $event.stopPropagation(); changeConstrainState($event, 'number-value')\r\n        \"\r\n        matInput\r\n        placeholder=\"\"\r\n        value=\"{{ fieldConstrain.constrain.values[0] }}\"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n  <!-- BETWEEN -->\r\n  <div\r\n    *ngIf=\"\r\n      fieldConstrain.constrain.type == numberConstrainType.BETWEEN ||\r\n      fieldConstrain.constrain.type == numberConstrainType.NOTBETWEEN\r\n    \"\r\n    style=\"max-width: fit-content; display: flow-root\"\r\n  >\r\n    <mat-form-field style=\"max-width: 45%; float: left\" appearance=\"fill\">\r\n      <mat-label (click)=\"$event.stopPropagation()\">{{\r\n        fieldConstrain.constrain.type == numberConstrainType.BETWEEN\r\n          ? \"MORE THAN\"\r\n          : \"LESS THAN\"\r\n      }}</mat-label>\r\n      <input\r\n        type=\"number\"\r\n        step=\"100\"\r\n        (change)=\"changeConstrainState($event, 'number-value1')\"\r\n        (keyup)=\"changeConstrainState($event, 'number-value1')\"\r\n        matInput\r\n        placeholder=\"\"\r\n        [max]=\"fieldConstrain.constrain.values[1]\"\r\n        value=\"{{ fieldConstrain.constrain.values[0] }}\"\r\n      />\r\n    </mat-form-field>\r\n    <mat-form-field\r\n      style=\"max-width: 45%; float: right\"\r\n      appearance=\"fill\"\r\n      (click)=\"$event.stopPropagation()\"\r\n      (keypress)=\"$event.stopPropagation()\"\r\n      (keydown)=\"$event.stopPropagation()\"\r\n    >\r\n      <mat-label\r\n        (click)=\"$event.stopPropagation()\"\r\n        (keypress)=\"$event.stopPropagation()\"\r\n      >\r\n        {{\r\n          fieldConstrain.constrain.type == numberConstrainType.BETWEEN\r\n            ? \"LESS THAN\"\r\n            : \"MORE THAN\"\r\n        }}\r\n      </mat-label>\r\n      <input\r\n        type=\"number\"\r\n        step=\"100\"\r\n        (change)=\"changeConstrainState($event, 'number-value2')\"\r\n        (click)=\"$event.stopPropagation()\"\r\n        (keydown)=\"$event.stopPropagation()\"\r\n        (keypress)=\"$event.stopPropagation()\"\r\n        (keyup)=\"changeConstrainState($event, 'number-value2')\"\r\n        matInput\r\n        placeholder=\"\"\r\n        [min]=\"fieldConstrain.constrain.values[0]\"\r\n        value=\"{{ fieldConstrain.constrain.values[1] }}\"\r\n      />\r\n    </mat-form-field>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #dateConstrainSelector>\r\n  <mat-button-toggle-group\r\n    class=\"number-constrain-selector\"\r\n    name=\"constrainSelect\"\r\n    aria-label=\"Constrain select\"\r\n    value=\"{{ fieldConstrain.constrain.type }}\"\r\n    (change)=\"changeConstrainState($event, 'date-type')\"\r\n  >\r\n    <!-- <mat-button-toggle value=\"1\" matTooltip=\"EQUALS\">\r\n      <mat-icon>drag_handle</mat-icon>\r\n    </mat-button-toggle> -->\r\n    <mat-button-toggle value=\"2\" matTooltip=\"AFTER\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">expand_less</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"3\" matTooltip=\"BEFORE\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">expand_more</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"4\" matTooltip=\"BETWEEN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">unfold_less</mat-icon>\r\n    </mat-button-toggle>\r\n    <mat-button-toggle value=\"5\" matTooltip=\"NOT BETWEEN\">\r\n      <mat-icon style=\"transform: rotate(90deg)\">unfold_more</mat-icon>\r\n    </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n  <div style=\"display: flex; justify-content: space-between\">\r\n    <!-- EQUALS, LESSTHAN, MORETHAN -->\r\n    <mat-form-field\r\n      style=\"width: 100%\"\r\n      appearance=\"fill\"\r\n      *ngIf=\"\r\n        fieldConstrain.constrain.type == numberConstrainType.EQUALS ||\r\n        fieldConstrain.constrain.type == numberConstrainType.LESSTHAN ||\r\n        fieldConstrain.constrain.type == numberConstrainType.MORETHAN\r\n      \"\r\n    >\r\n      <mat-label [ngSwitch]=\"fieldConstrain.constrain.type\">\r\n        <span *ngSwitchCase=\"numberConstrainType.EQUALS\">EQUALS</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.LESSTHAN\">Choose a date</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.MORETHAN\">Choose a date</span>\r\n        <span *ngSwitchCase=\"numberConstrainType.BETWEEN\"\r\n          >Choose a date range</span\r\n        >\r\n        <span *ngSwitchCase=\"numberConstrainType.NOTBETWEEN\"\r\n          >Choose a date range</span\r\n        >\r\n      </mat-label>\r\n\r\n      <input\r\n        matInput\r\n        [matDatepicker]=\"picker\"\r\n        (dateChange)=\"changeConstrainState($event, 'date-value')\"\r\n      />\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n\r\n    <!-- BETWEEN, NOTBETWEEN -->\r\n    <mat-form-field\r\n      style=\"width: 100%\"\r\n      appearance=\"fill\"\r\n      *ngIf=\"\r\n        fieldConstrain.constrain.type == numberConstrainType.BETWEEN ||\r\n        fieldConstrain.constrain.type == numberConstrainType.NOTBETWEEN\r\n      \"\r\n    >\r\n      <mat-date-range-input [formGroup]=\"dateRange\" [rangePicker]=\"rangePicker\">\r\n        <input\r\n          matStartDate\r\n          formControlName=\"start\"\r\n          placeholder=\"{{ numberConstrainType.BETWEEN ? 'After' : 'Bafore' }}\"\r\n          (dateChange)=\"changeConstrainState($event, 'date-value1')\"\r\n        />\r\n        <input\r\n          matEndDate\r\n          formControlName=\"end\"\r\n          placeholder=\"{{ numberConstrainType.BETWEEN ? 'Before' : 'After' }}\"\r\n          (dateChange)=\"changeConstrainState($event, 'date-value2')\"\r\n        />\r\n      </mat-date-range-input>\r\n      <mat-datepicker-toggle\r\n        matSuffix\r\n        [for]=\"rangePicker\"\r\n      ></mat-datepicker-toggle>\r\n      <mat-date-range-picker #rangePicker></mat-date-range-picker>\r\n    </mat-form-field>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #stringConstrainSelector>\r\n  <mat-accordion>\r\n    <mat-expansion-panel hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"swEnable.checked\" color=\"accent\">\r\n            radio_button_checked\r\n          </mat-icon>\r\n          <mat-icon *ngIf=\"!swEnable.checked\" style=\"color: gray\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <span class=\"flex-center\">&nbsp;Starts with</span>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <span class=\"flex-center\">{{ swInput.value }}</span>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <form [formGroup]=\"stringFormGroup\" (change)=\"updateStringConstrain()\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Value</mat-label>\r\n          <input\r\n            matInput\r\n            autocomplete=\"off\"\r\n            #swInput\r\n            formControlName=\"startWith\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-slide-toggle\r\n          (change)=\"updateStringConstrain()\"\r\n          #swEnable\r\n          style=\"margin-left: 1rem\"\r\n          formControlName=\"startWithToogle\"\r\n        ></mat-slide-toggle>\r\n      </form>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"siEnable.checked\" color=\"accent\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <mat-icon *ngIf=\"!siEnable.checked\" style=\"color: gray\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <span class=\"flex-center\">&nbsp;Includes</span>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <span class=\"flex-center\">{{ siInput.value }}</span>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <form [formGroup]=\"stringFormGroup\" (change)=\"updateStringConstrain()\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Value</mat-label>\r\n          <input\r\n            matInput\r\n            autocomplete=\"off\"\r\n            #siInput\r\n            formControlName=\"includes\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-slide-toggle\r\n          (change)=\"updateStringConstrain()\"\r\n          #siEnable\r\n          style=\"margin-left: 1rem\"\r\n          formControlName=\"includesToogle\"\r\n        ></mat-slide-toggle>\r\n      </form>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel hideToggle style=\"margin-bottom: 1rem\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <mat-icon *ngIf=\"ewEnable.checked\" color=\"accent\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <mat-icon *ngIf=\"!ewEnable.checked\" style=\"color: gray\"\r\n            >radio_button_checked</mat-icon\r\n          >\r\n          <span class=\"flex-center\">&nbsp;Ends with</span>\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n          <span class=\"flex-center\">{{ ewInput.value }}</span>\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <form [formGroup]=\"stringFormGroup\" (change)=\"updateStringConstrain()\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Value</mat-label>\r\n          <input\r\n            matInput\r\n            autocomplete=\"off\"\r\n            #ewInput\r\n            formControlName=\"endsWith\"\r\n          />\r\n        </mat-form-field>\r\n        <mat-slide-toggle\r\n          (change)=\"updateStringConstrain()\"\r\n          #ewEnable\r\n          style=\"margin-left: 1rem\"\r\n          formControlName=\"endsWithToogle\"\r\n        ></mat-slide-toggle>\r\n      </form>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</ng-template>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'cuit' })\r\nexport class CuitPipe implements PipeTransform {\r\n  transform(value: number, separador: string = '.'): string {\r\n    let result = value.toString().split('');\r\n    result = [\r\n      ...result.slice(0, 2),\r\n      separador,\r\n      ...result.slice(2, 10),\r\n      separador,\r\n      ...result.slice(10),\r\n    ];\r\n    return result.join('');\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'phone' })\r\nexport class PhonePipe implements PipeTransform {\r\n  transform(value: number, format?: string): string {\r\n    // format style: \"(###) ####-####\"\r\n    if (format) {\r\n      let result = value.toString().split('');\r\n      let _format = Array.from(format);\r\n      for (let i = _format.length - 1; i >= 0; i--) {\r\n        if (_format[i] == '#') {\r\n          const temp = result.pop();\r\n          if (temp) {\r\n            _format[i] = temp;\r\n          } else {\r\n            _format[i] = '0';\r\n          }\r\n        }\r\n      }\r\n      result = _format;\r\n      return result.join('');\r\n    }\r\n    return value.toString();\r\n  }\r\n}\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstrians.config';\nimport {\n  LitoGeneralAction,\n  LitoGeneralActionConfirmation,\n  LitoRowAction,\n  LitoRowActionConfirmation,\n  TableActionsConfig,\n  TableConfigurations,\n  TableOperation,\n} from './configurations/litotable.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { MatDrawer } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './lito-table.component.html',\n  styleUrls: ['./lito-table.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  /* Enums */\n  columnTypes = ColumnType;\n  operationTypes = TableOperation;\n\n  columns: Column[] = [];\n  numberConstrainType = MesurableConstrainType;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n  rowConfirmation?: {\n    confirmationData: LitoRowActionConfirmation;\n    row: any;\n    action: LitoRowAction;\n  };\n  generalConfirmation?: {\n    confirmationData: LitoGeneralActionConfirmation;\n    action: LitoGeneralAction;\n  };\n  _confirmation: string = 'multiple';\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable<any[]>;\n  @Input('type') dataType!: Object;\n  @Input('tableActionsConfig') tableActionsConfig?: TableActionsConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatDrawer) drawer!: MatDrawer;\n  @Output('multipleActionOutput') multipleActionOutput: EventEmitter<{\n    operation: LitoGeneralAction;\n    data: Set<any>;\n  }> = new EventEmitter();\n  @Output('singleActionOutput') singleActionOutput: EventEmitter<{\n    operation: LitoRowAction;\n    data: any;\n  }> = new EventEmitter();\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n        this.tableActionsConfig?.updatePermormableState(this.selectedRows);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(x.propertyKey, x.constrain);\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(\n      this.columns,\n      this.selection,\n      this.tableConfigurations?.actionsColumn != undefined\n    );\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n    if (this.tableActionsConfig?.actions) {\n      this.tableActionsConfig.updatePermormableState(this.selectedRows);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  tableDrop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(\n      this.displayedColumns.columnNames,\n      event.previousIndex + 1,\n      event.currentIndex + 1\n    );\n  }\n\n  onRowActionClick(row: any, action: LitoRowAction) {\n    if (\n      action.actionResult.willUpdateRow ||\n      action.actionResult.willDeleteRow\n    ) {\n      row.processing = true;\n      this.singleActionOutput.emit({\n        operation: action,\n        data: row,\n      });\n    }\n  }\n\n  updateRow(row: any, newRow: any) {\n    let indx = this.dataSource.data.indexOf(row);\n    if (newRow) {\n      this.dataSource.data[indx] = newRow;\n      (this.dataSource.data[indx] as any).processing = false;\n      this.selectedRows.delete(this.dataSource.data[indx]);\n    } else {\n      this.dataSource.data.splice(indx, 1);\n      row.processing = false;\n    }\n    this.selectedRows.delete(row);\n\n    this.dataSource._updateChangeSubscription();\n    this.updateVisibility();\n  }\n\n  performFooterAction() {\n    if (\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction\n    ) {\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction();\n    }\n  }\n\n  performRowActionConfirmation(\n    action: LitoRowAction,\n    row: any,\n    confirmation: LitoRowActionConfirmation\n  ) {\n    this._confirmation = 'single';\n    this.rowConfirmation = {\n      confirmationData: confirmation,\n      row: row,\n      action: action,\n    };\n    if (this.drawer) {\n      this.drawer.open();\n    }\n  }\n\n  onGeneralActionClick(operation: LitoGeneralAction) {\n    this.performGeneralAction(operation);\n  }\n\n  performGeneralAction(operation: LitoGeneralAction) {\n    this.multipleActionOutput.emit({\n      operation: operation,\n      data: this.selectedRows,\n    });\n    if (operation.mustLockRows) {\n      this.lockSelectedRows(this.selectedRows);\n    }\n  }\n\n  unLockRow(row: any) {\n    row.processing = false;\n  }\n  lockSelectedRows(rows: Set<any>) {\n    rows.forEach((row) => {\n      row.processing = true;\n    });\n  }\n  unLockSelectedRows(rows: Set<any>) {\n    rows.forEach((row) => {\n      row.processing = false;\n    });\n  }\n\n  performGeneralActionConfirmation(operation: LitoGeneralAction) {\n    this._confirmation = 'multiple';\n    this.generalConfirmation = {\n      confirmationData: operation.confirmation!,\n      action: operation,\n    };\n\n    if (this.drawer) {\n      this.drawer.open();\n    }\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  actionColumn: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(\n    columns: Column[] = [],\n    selectable: boolean = false,\n    actionsColumn: boolean = false\n  ) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    this.actionColumn = actionsColumn;\n    if (selectable) this.columnNames.unshift('selection');\n    if (actionsColumn) this.columnNames.push('actions');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateVisivility() {\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  checked: boolean;\n  constructor(name: string) {\n    this.name = name;\n    this.checked = this.checkState();\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order);\n    this.colspan = groupData.length;\n    if (groupData.length != 0) this.start = groupData[0].order;\n    this.checked = this.checkState();\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n  toogleVisibbility(state: boolean) {\n    for (const c of this.columns) {\n      c.visible = state;\n    }\n  }\n  checkState() {\n    return this.columns.some((x) => x.visible);\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    this.groupColumns.forEach((e) => e.updateColspan());\n    let deletion = 0;\n    for (let i = 0; i < this.groupColumns.length; i++) {\n      const element = this.groupColumns[i];\n      const firstVisible = element.columns.filter((y) => y.visible)[0];\n\n      if (element.colspan != 0) {\n        let index = visibleColumns.findIndex(\n          (x) => x.propertyKey == firstVisible.propertyKey\n        );\n        this.displayNames.splice(\n          1 + index - deletion,\n          element.colspan,\n          element.name\n        );\n        deletion += element.colspan - 1;\n      }\n    }\n    /* \n    this.displayNames = visibleColumns\n      .reduce(\n        (a, c) => {\n          const includes = this.groupColumns.some((x) => x.columns.includes(c));\n          let str = '';\n          this.groupColumns.forEach((gc) => {\n            if (gc.columns.includes(c)) {\n              str = gc.name;\n            }\n          });\n          a.push(includes ? str : 'empty-group');\n          return a;\n        },\n        ['empty-group']\n      )\n      .reduce(\n        (a, c) => {\n          if (c == 'empty-group' || !a.includes(c)) {\n            a.push(c);\n          }\n          return a;\n        },\n        ['empty-group']\n      );\n    */\n    this.displayNames.unshift();\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  _constrain: Constrain;\n  constructor(name: string, _constrain: Constrain) {\n    this.name = name;\n    this._constrain = _constrain;\n  }\n}\n","<!-- Operations -->\n<mat-accordion class=\"table-operations\">\n  <mat-expansion-panel hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title style=\"align-items: center\">\n        Operaciones\n      </mat-panel-title>\n      <div class=\"table-top-container\">\n        <button\n          mat-icon-button\n          [matMenuTriggerFor]=\"export\"\n          aria-label=\"Exportar\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <mat-icon>download</mat-icon>\n        </button>\n\n        <button\n          mat-icon-button\n          [matMenuTriggerFor]=\"columns\"\n          aria-label=\"Columnas\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <mat-icon>view_column</mat-icon>\n        </button>\n\n        <button\n          mat-icon-button\n          [matMenuTriggerFor]=\"constrains\"\n          aria-label=\"Constrains\"\n          (click)=\"$event.stopPropagation()\"\n        >\n          <mat-icon>brush</mat-icon>\n        </button>\n      </div>\n    </mat-expansion-panel-header>\n    <div class=\"operation-buttons-container\" *ngIf=\"tableActionsConfig\">\n      <div *ngFor=\"let operation of tableActionsConfig.actions\">\n        <div class=\"table-bottom-container\">\n          <!-- (selectedRows.size == 0 && operation.mustHaveOneSelected) ||\n              (selectedRows.size != 1 && operation.scope == 1) -->\n          <div\n            [matTooltipDisabled]=\"operation.performable.state\"\n            matTooltip=\"{{ operation.performable.tooltip }}\"\n          >\n            <button\n              [disabled]=\"!operation.performable.state\"\n              mat-stroked-button\n              class=\"general-action\"\n              (click)=\"\n                operation.confirmation\n                  ? performGeneralActionConfirmation(operation)\n                  : performGeneralAction(operation)\n              \"\n            >\n              <mat-icon\n                *ngIf=\"operation?.icon\"\n                [ngStyle]=\"{\n                  color:\n                    (!operation.performable.state\n                      ? 'gray'\n                      : operation?.color) || 'currentColor'\n                }\"\n                >{{ operation.icon }}</mat-icon\n              >\n              {{ operation.content }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>\n\n<!-- Table -->\n<div class=\"litotable-main-container\">\n  <div class=\"litotable-container mat-elevation-z4\">\n    <div class=\"table-container\">\n      <mat-drawer-container class=\"example-container\" [hasBackdrop]=\"true\">\n        <mat-drawer #drawer mode=\"over\" position=\"end\">\n          <ng-container *ngTemplateOutlet=\"sidenavMenu\"></ng-container>\n        </mat-drawer>\n        <mat-drawer-content>\n          <div *ngIf=\"dataSource\" class=\"table-responsive\">\n            <table\n              mat-table\n              [dataSource]=\"dataSource\"\n              matSort\n              (matSortChange)=\"announceSortChange($event)\"\n            >\n              <!-- Columna de seleccion -->\n              <ng-container matColumnDef=\"selection\">\n                <th mat-header-cell *matHeaderCellDef>\n                  <mat-checkbox\n                    (change)=\"masterToggle()\"\n                    [indeterminate]=\"\n                      this.selectedRows.size != 0 && !isAllSelected()\n                    \"\n                    [checked]=\"isAllSelected()\"\n                  >\n                  </mat-checkbox>\n                </th>\n                <td\n                  mat-cell\n                  *matCellDef=\"let row\"\n                  style=\"background-color: rgba(255, 255, 255, 1)\"\n                >\n                  <mat-checkbox\n                    (click)=\"$event.stopPropagation()\"\n                    (change)=\"selectionToogle($event.checked, row)\"\n                    [checked]=\"selectedRows.has(row)\"\n                    [disabled]=\"row.processing\"\n                  >\n                  </mat-checkbox>\n                </td>\n              </ng-container>\n\n              <!-- Resto de columnas -->\n              <ng-container\n                *ngFor=\"let column of displayedColumns.columns\"\n                matColumnDef=\"{{ column.name }}\"\n              >\n                <!-- Column Header -->\n                <th\n                  mat-header-cell\n                  *matHeaderCellDef\n                  mat-sort-header=\"{{ column.propertyKey }}\"\n                  sortActionDescription=\"Sort by {{ column.propertyKey }}\"\n                  [class.header-borders]=\"tableConfigurations?.headerBorders\"\n                >\n                  {{ column.name }}\n                </th>\n                <!-- Column Data -->\n                <td\n                  mat-cell\n                  *matCellDef=\"let element\"\n                  #litotableTd\n                  [class.cell-borders]=\"tableConfigurations?.headerBorders\"\n                >\n                  <div\n                    #content\n                    style=\"transition: 0.3s all\"\n                    [ngStyle]=\"\n                      litotableTd.parentElement?.style?.color\n                        ? { color: litotableTd.parentElement?.style?.color }\n                        : {}\n                    \"\n                  >\n                    <div *ngIf=\"column.type == columnTypes.STRING\">\n                      {{ element[column.propertyKey] }}\n                    </div>\n                    <div *ngIf=\"column.type == columnTypes.INTEGER\">\n                      {{ element[column.propertyKey] | number: \"1.0-0\" }}\n                    </div>\n                    <div *ngIf=\"column.type == columnTypes.FLOAT\">\n                      {{ element[column.propertyKey] | number: \"1.2-4\" }}\n                    </div>\n                    <div *ngIf=\"column.type == columnTypes.DATE\">\n                      {{\n                        element[column.propertyKey]\n                          | date: (column.format ? column.format : \"short\")\n                      }}\n                    </div>\n                    <div *ngIf=\"column.type == columnTypes.CURRENCY\">\n                      {{ element[column.propertyKey] | currency }}\n                    </div>\n                    <div *ngIf=\"column.type == columnTypes.CUIT\">\n                      {{ element[column.propertyKey] | cuit: \"-\" }}\n                    </div>\n                    <div *ngIf=\"column.type == columnTypes.PHONE\">\n                      {{\n                        element[column.propertyKey]\n                          | phone: (column.format ? column.format : undefined)\n                      }}\n                    </div>\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Columna de Acciones -->\n              <ng-container\n                *ngIf=\"tableConfigurations?.actionsColumn\"\n                matColumnDef=\"actions\"\n              >\n                <th\n                  mat-header-cell\n                  *matHeaderCellDef\n                  [class.header-borders]=\"tableConfigurations?.headerBorders\"\n                  class=\"actions-th\"\n                >\n                  Acciones\n                </th>\n                <td\n                  mat-cell\n                  *matCellDef=\"let row\"\n                  [class.cell-borders]=\"tableConfigurations?.headerBorders\"\n                  style=\"padding: 0\"\n                  class=\"actions-td\"\n                >\n                  <div>\n                    <div\n                      *ngFor=\"let action of tableConfigurations?.actionsColumn\"\n                    >\n                      <button\n                        [disabled]=\"row.processing\"\n                        *ngIf=\"action.confirmation\"\n                        mat-icon-button\n                        matTooltip=\"{{ action.tooltip }}\"\n                        (click)=\"\n                          performRowActionConfirmation(\n                            action,\n                            row,\n                            action.confirmation\n                          )\n                        \"\n                      >\n                        <mat-icon\n                          [style]=\"{\n                            color: row.processing ? 'lightgray' : action.color\n                          }\"\n                          >{{ action.icon }}</mat-icon\n                        >\n                      </button>\n                      <button\n                        [disabled]=\"row.processing\"\n                        *ngIf=\"!action.confirmation\"\n                        mat-icon-button\n                        matTooltip=\"{{ action.tooltip }}\"\n                        (click)=\"onRowActionClick(row, action)\"\n                      >\n                        <mat-icon\n                          [style]=\"{\n                            color: row.processing ? 'lightgray' : action.color\n                          }\"\n                          >{{ action.icon }}</mat-icon\n                        >\n                      </button>\n                    </div>\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Columnas de agrupacion -->\n              <ng-container matColumnDef=\"empty-group\">\n                <th *matHeaderCellDef class=\"group-header-empty\"></th>\n              </ng-container>\n              <ng-container\n                *ngFor=\"let col of displayedColumns.columnGroups.groupColumns\"\n                matColumnDef=\"{{ col.name }}\"\n              >\n                <th\n                  mat-header-cell\n                  *matHeaderCellDef\n                  [attr.colspan]=\"col.colspan\"\n                >\n                  {{ col.name }}\n                </th>\n              </ng-container>\n              <tr\n                class=\"group-header\"\n                mat-header-row\n                *matHeaderRowDef=\"displayedColumns.columnGroups.displayNames\"\n              ></tr>\n\n              <!-- Encabezados de columnas -->\n              <tr\n                mat-header-row\n                *matHeaderRowDef=\"displayedColumns.columnNames\"\n              ></tr>\n\n              <!-- Formato condicional de filas -->\n              <tr\n                mat-row\n                [class.mat-row-selected]=\"selectedRows.has(row)\"\n                [class.mat-row-selected-borders]=\"\n                  selectedRows.has(row) &&\n                  tableConfigurations?.selectionStyle == 1\n                \"\n                [class.mat-row-selected-shadow]=\"\n                  selectedRows.has(row) &&\n                  tableConfigurations?.selectionStyle == 2\n                \"\n                [class.mat-row-borders]=\"tableConfigurations?.hoverStyle == 1\"\n                [class.mat-row-shadow]=\"tableConfigurations?.hoverStyle == 2\"\n                style=\"transition: 0.3s all\"\n                [ngStyle]=\"constrainedRows.has(row) ? row.rowStyle.style : ''\"\n                *matRowDef=\"let row; columns: displayedColumns.columnNames\"\n                [class.mat-row-processing]=\"row.processing\"\n              ></tr>\n\n              <!-- Mensaje por defecto en caso de no haber datos o se este fetcheando -->\n              <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell\" colspan=\"4\">\n                  {{ fetching ? \"fetching data\" : \"No data found\" }}\n                </td>\n              </tr>\n            </table>\n          </div>\n        </mat-drawer-content>\n      </mat-drawer-container>\n\n      <!-- Footer action button -->\n      <div class=\"table-bottom-container\">\n        <button\n          mat-stroked-button\n          class=\"footercell\"\n          (click)=\"performFooterAction()\"\n        >\n          <mat-icon\n            *ngIf=\"tableConfigurations?.footerAction?.icon\"\n            [ngStyle]=\"{\n              color: tableConfigurations?.footerAction?.color || 'currentColor'\n            }\"\n            >{{ tableConfigurations?.footerAction?.icon }}</mat-icon\n          >\n          {{ tableConfigurations?.footerAction?.content }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Paginator -->\n    <div class=\"table-bottom-container\">\n      <mat-paginator\n        [pageSizeOptions]=\"tableConfigurations?.paginationSizes || [5, 10, 20]\"\n        showFirstLastButtons\n        aria-label=\"Select page\"\n      >\n      </mat-paginator>\n    </div>\n\n    <!-- Progressbar -->\n    <mat-progress-bar\n      [mode]=\"fetching ? 'indeterminate' : 'determinate'\"\n    ></mat-progress-bar>\n  </div>\n</div>\n\n<!-- Export Menu -->\n<mat-menu #export=\"matMenu\" xPosition=\"before\">\n  <div\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"$event.stopPropagation()\"\n    disabled=\"true\"\n  >\n    Exportar\n  </div>\n</mat-menu>\n\n<!-- Columns Selector Menu -->\n<mat-menu #columns=\"matMenu\" xPosition=\"before\">\n  <div\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"$event.stopPropagation()\"\n    disabled=\"true\"\n  >\n    Columnas\n  </div>\n  <mat-divider></mat-divider>\n\n  <div\n    *ngFor=\"let column of displayedColumns.columns\"\n    mat-menu-item\n    (click)=\"$event.stopPropagation()\"\n  >\n    <mat-slide-toggle\n      color=\"primary\"\n      (click)=\"$event.stopPropagation()\"\n      (change)=\"displayedColumns.changeColumnVisivility(column)\"\n      [checked]=\"column.visible\"\n    >\n      {{ column.name }}\n    </mat-slide-toggle>\n  </div>\n  <mat-divider></mat-divider>\n  <div\n    *ngFor=\"let group of displayedColumns.columnGroups.groupColumns\"\n    mat-menu-item\n    (click)=\"$event.stopPropagation()\"\n  >\n    <mat-slide-toggle\n      color=\"accent\"\n      (click)=\"$event.stopPropagation()\"\n      (change)=\"\n        group.toogleVisibbility($event.checked);\n        displayedColumns.updateVisivility()\n      \"\n      [checked]=\"group.checked\"\n    >\n      {{ group.name }}\n    </mat-slide-toggle>\n  </div>\n  <button\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"displayedColumns.allVisible(); $event.stopPropagation()\"\n  >\n    Todas\n  </button>\n</mat-menu>\n\n<!-- Constrains Menu -->\n<mat-menu\n  #constrains=\"matMenu\"\n  xPosition=\"before\"\n  style=\"padding: 0.5rem !important\"\n>\n  <div\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"$event.stopPropagation()\"\n    disabled=\"true\"\n  >\n    Estilos\n  </div>\n  <div\n    mat-menu-item\n    disableRipple=\"true\"\n    *ngFor=\"let constr of fieldConstrians\"\n    (click)=\"$event.stopPropagation()\"\n    [style]=\"{\n      display: 'flex',\n      'align-items': 'center',\n      'justify-items': 'center',\n      color: constr.constrain.style['color'],\n      'background-color': constr.constrain.style['background-color'],\n      'text-align': 'center'\n    }\"\n  >\n    <span style=\"flex-grow: 1; text-align: center\">{{\n      constr.constrainName\n    }}</span>\n    <button\n      mat-icon-button\n      matTooltip=\"remove\"\n      style=\"justify-self: flex-end; margin-left: 1rem\"\n      [matMenuTriggerFor]=\"constrainDeletionConfirm\"\n      [matMenuTriggerData]=\"{ data: constr }\"\n    >\n      <mat-icon style=\"margin: auto\">delete</mat-icon>\n    </button>\n    <button mat-icon-button style=\"justify-self: flex-end\">\n      <mat-icon style=\"margin: auto\" matTooltip=\"hide\">edit</mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      style=\"justify-self: flex-end\"\n      (click)=\"\n        constr.constrain.enable = !constr.constrain.enable; updateVisibility()\n      \"\n    >\n      <mat-icon style=\"margin: auto\" matTooltip=\"hide\">{{\n        constr.constrain.enable ? \"visibility\" : \"visibility_off\"\n      }}</mat-icon>\n    </button>\n  </div>\n\n  <!-- Constrain Creator -->\n  <div\n    mat-menu-item\n    style=\"text-align: center\"\n    (click)=\"$event.stopPropagation()\"\n  >\n    <litotable-constrain-creator\n      [columns]=\"displayedColumns.columns\"\n      (result-constrain)=\"addConstrain($event)\"\n      ><mat-icon style=\"margin: auto\"\n        >add_circle</mat-icon\n      ></litotable-constrain-creator\n    >\n  </div>\n</mat-menu>\n\n<mat-menu #constrainDeletionConfirm=\"matMenu\" xPosition=\"before\">\n  <ng-template matMenuContent let-constrain=\"data\">\n    <button\n      mat-menu-item\n      (click)=\"removeConstrain(constrain)\"\n      style=\"color: red; font-weight: 500\"\n    >\n      confirm remove\n    </button>\n  </ng-template>\n</mat-menu>\n\n<mat-menu #constrain=\"matMenu\" xPosition=\"before\">\n  <ng-template matMenuContent let-data=\"data\">\n    <mat-card\n      (click)=\"$event.stopPropagation()\"\n      (keypress)=\"$event.stopPropagation()\"\n    >\n      <mat-card-content\n        (click)=\"$event.stopPropagation()\"\n        (keypress)=\"$event.stopPropagation()\"\n        class=\"constrain-mat-content\"\n      >\n        <div\n          class=\"constrain-mat-content-dual\"\n          (click)=\"$event.stopPropagation()\"\n          (keypress)=\"$event.stopPropagation()\"\n        >\n          <app-lito-color-picker\n            [colors]=\"tableConfigurations?.rowStyleColors\"\n            (result)=\"\n              changeConstrainState($event, data.constrain, 'background-color')\n            \"\n            content=\"Background\"\n          ></app-lito-color-picker>\n          <app-lito-color-picker\n            [colors]=\"tableConfigurations?.rowStyleColors\"\n            (result)=\"changeConstrainState($event, data.constrain, 'color')\"\n            content=\"Foreground\"\n          ></app-lito-color-picker>\n        </div>\n        <div\n          [style]=\"{\n            color: data.constrain.style['color'],\n            'background-color': data.constrain.style['background-color'],\n            'margin-bottom': '1rem',\n            'text-align': 'center',\n            padding: '0.5rem 0',\n            width: '100%'\n          }\"\n        >\n          {{ data.constrain.values[0] }}\n        </div>\n        <mat-button-toggle-group\n          name=\"fontStyle\"\n          aria-label=\"Font Style\"\n          (click)=\"$event.stopPropagation()\"\n          value=\"{{ data.constrain.type }}\"\n          (change)=\"\n            changeConstrainState($event, data.constrain, 'number-type', false)\n          \"\n        >\n          <mat-button-toggle value=\"1\">=</mat-button-toggle>\n          <mat-button-toggle value=\"2\">{{ \"\\>\" }}</mat-button-toggle>\n          <mat-button-toggle value=\"3\">{{ \"\\<\" }}</mat-button-toggle>\n          <mat-button-toggle value=\"4\">{{ \"\\<\\>\" }}</mat-button-toggle>\n        </mat-button-toggle-group>\n        <div\n          *ngIf=\"data.constrain.type != numberConstrainType.BETWEEN\"\n          (click)=\"$event.stopPropagation()\"\n          (keydown)=\"$event.stopPropagation()\"\n          (keypress)=\"$event.stopPropagation()\"\n          style=\"display: flex; justify-content: space-between\"\n        >\n          <mat-form-field\n            style=\"width: 100%\"\n            appearance=\"fill\"\n            (click)=\"$event.stopPropagation()\"\n            (keypress)=\"$event.stopPropagation()\"\n            (keydown)=\"$event.stopPropagation()\"\n          >\n            <mat-label (click)=\"$event.stopPropagation()\">VALOR</mat-label>\n            <input\n              type=\"number\"\n              step=\"100\"\n              (keydown)=\"$event.stopPropagation()\"\n              (keypress)=\"$event.stopPropagation()\"\n              (click)=\"$event.stopPropagation()\"\n              (change)=\"\n                $event.stopPropagation();\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value',\n                  false\n                )\n              \"\n              (keyup)=\"\n                $event.stopPropagation();\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value',\n                  false\n                )\n              \"\n              matInput\n              placeholder=\"\"\n              value=\"{{ data.constrain.values[0] }}\"\n            />\n          </mat-form-field>\n        </div>\n        <!-- BETWEEN -->\n        <div\n          *ngIf=\"data.constrain.type == numberConstrainType.BETWEEN\"\n          (click)=\"$event.stopPropagation()\"\n          (keypress)=\"$event.stopPropagation()\"\n          (keydown)=\"$event.stopPropagation()\"\n          style=\"max-width: fit-content; display: flow-root\"\n        >\n          <mat-form-field\n            style=\"max-width: 45%; float: left\"\n            appearance=\"fill\"\n            (click)=\"$event.stopPropagation()\"\n            (keypress)=\"$event.stopPropagation()\"\n            (keydown)=\"$event.stopPropagation()\"\n          >\n            <mat-label (click)=\"$event.stopPropagation()\">DESDE</mat-label>\n            <input\n              type=\"number\"\n              (click)=\"$event.stopPropagation()\"\n              (keydown)=\"$event.stopPropagation()\"\n              (keypress)=\"$event.stopPropagation()\"\n              (change)=\"\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value1',\n                  false\n                )\n              \"\n              (keyup)=\"\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value1',\n                  false\n                )\n              \"\n              matInput\n              placeholder=\"\"\n              value=\"{{ data.constrain.values[0] }}\"\n            />\n          </mat-form-field>\n          <mat-form-field\n            style=\"max-width: 45%; float: right\"\n            appearance=\"fill\"\n            (click)=\"$event.stopPropagation()\"\n            (keypress)=\"$event.stopPropagation()\"\n            (keydown)=\"$event.stopPropagation()\"\n          >\n            <mat-label\n              (click)=\"$event.stopPropagation()\"\n              (keypress)=\"$event.stopPropagation()\"\n              >HASTA</mat-label\n            >\n            <input\n              type=\"number\"\n              step=\"100\"\n              (change)=\"\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value2',\n                  false\n                )\n              \"\n              (click)=\"$event.stopPropagation()\"\n              (keydown)=\"$event.stopPropagation()\"\n              (keypress)=\"$event.stopPropagation()\"\n              (keyup)=\"\n                changeConstrainState(\n                  $event,\n                  data.constrain,\n                  'number-value2',\n                  false\n                )\n              \"\n              matInput\n              placeholder=\"\"\n              value=\"{{ data.constrain.values[1] }}\"\n            />\n          </mat-form-field>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </ng-template>\n</mat-menu>\n\n<!-- sidenav-menu -->\n<ng-template #sidenavMenu>\n  <div style=\"padding: 1rem\">\n    <h2>\n      <span *ngIf=\"_confirmation == 'single'\">\n        {{\n          rowConfirmation\n            ? rowConfirmation?.confirmationData?.title\n            : \"Confirmacion\"\n        }}\n      </span>\n      <span *ngIf=\"_confirmation == 'multiple'\">\n        {{\n          generalConfirmation\n            ? generalConfirmation?.confirmationData?.title\n            : \"Confirmacion\"\n        }}\n      </span>\n    </h2>\n    <p>\n      <span *ngIf=\"_confirmation == 'single'\">\n        {{ rowConfirmation?.confirmationData?.content }}\n      </span>\n      <span *ngIf=\"_confirmation == 'multiple'\">\n        {{ generalConfirmation?.confirmationData?.content }}\n      </span>\n    </p>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      style=\"margin-right: 0.5rem\"\n      (click)=\"\n        drawer.toggle();\n        _confirmation == 'single'\n          ? onRowActionClick(rowConfirmation?.row, rowConfirmation!.action)\n          : onGeneralActionClick(generalConfirmation!.action)\n      \"\n    >\n      accept\n    </button>\n    <button mat-raised-button color=\"warn\" (click)=\"drawer.toggle()\">\n      cancel\n    </button>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CuitPipe } from './pipes/cuit.pipe';\nimport { LitotableComponent } from './lito-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { PhonePipe } from './pipes/phone.pipe';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport {\n  LitoColorPickerComponent,\n  DialogColorPicker,\n} from './lito-color-picker/lito-color-picker.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {\n  ConstrainCreatorComponent,\n  ConstrainCreationForm,\n} from './constrain-creator/constrain-creator.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\n@NgModule({\n  declarations: [\n    CuitPipe,\n    PhonePipe,\n    LitotableComponent,\n    LitoColorPickerComponent,\n    DialogColorPicker,\n    ConstrainCreatorComponent,\n    ConstrainCreationForm,\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    FormsModule,\n    MatSliderModule,\n    MatSelectModule,\n    MatStepperModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatDividerModule,\n    DragDropModule,\n    MatSidenavModule,\n  ],\n  exports: [LitotableComponent],\n})\nexport class LitotableModule {}\n","/*\n * Public API Surface of lito-table\n */\nexport * from './lib/lito-table.component';\nexport * from './lib/lito-table.module';\nexport * from './lib/configurations/fieldConstrians.config';\nexport * from './lib/configurations/litotable.config';\nexport * from './lib/column';\nexport * from './lib/constrain-creator/constrain-creator.component';\nexport * from './lib/decorators/column.decorator';\nexport * from './lib/lito-color-picker/lito-color-picker.component';\nexport * from './lib/pipes/cuit.pipe';\nexport * from './lib/pipes/phone.pipe';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["MesurableConstrainType","StringConstrainType","RowStyle","GeneralActionScope","TableOperation","ColumnType","ColumnContentAlignment","EventEmitter","i1","i0","i2","Component","Input","Output","MAT_DIALOG_DATA","i3","i4","i5","Inject","FormGroup","FormControl","Validators","MatAccordion","i6","i7","i8","i9.LitoColorPickerComponent","i10","i11","i12","i13","i14","i15","i16","ViewChild","Pipe","MatTableDataSource","moveItemInArray","MatPaginator","MatSort","MatDrawer","i9","i14.ConstrainCreatorComponent","i16.LitoColorPickerComponent","i17","i18","i19","i20","i21","i22.CuitPipe","i23.PhonePipe","CommonModule","MatTableModule","MatPaginatorModule","MatProgressBarModule","MatSortModule","MatCheckboxModule","MatSlideToggleModule","MatMenuModule","MatButtonModule","MatIconModule","MatCardModule","MatInputModule","MatRadioModule","MatExpansionModule","MatButtonToggleModule","MatDialogModule","MatTabsModule","FormsModule","MatSliderModule","MatSelectModule","MatStepperModule","ReactiveFormsModule","MatTooltipModule","MatDatepickerModule","MatNativeDateModule","MatDividerModule","DragDropModule","MatSidenavModule","NgModule"],"mappings":"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AAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAE7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAE7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAE7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAE7B,IAAI,cAAc,CAAC,SAAS,CAAC;QAC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"}
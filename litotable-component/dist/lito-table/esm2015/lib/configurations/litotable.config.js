export class LitotableColor {
    constructor(value) {
        this.value = '';
        if (typeof value == 'string') {
            this.value = value;
        }
        else {
            if (value.length == 3) {
                this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;
            }
            else if (value.length == 4) {
                this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;
            }
        }
    }
}
export var RowStyle;
(function (RowStyle) {
    RowStyle[RowStyle["BORDER"] = 1] = "BORDER";
    RowStyle[RowStyle["SHADOW"] = 2] = "SHADOW";
})(RowStyle || (RowStyle = {}));
export class TableActionsConfig {
    constructor(actions, expandable = false) {
        this.actions = actions;
        this.expandable = expandable;
    }
    updatePermormableState(set) {
        this.actions.forEach((a) => {
            a.performable = a.updatePerformable(set);
        });
    }
}
export var GeneralActionScope;
(function (GeneralActionScope) {
    GeneralActionScope[GeneralActionScope["SINGLE"] = 1] = "SINGLE";
    GeneralActionScope[GeneralActionScope["MULTIPLE"] = 2] = "MULTIPLE";
})(GeneralActionScope || (GeneralActionScope = {}));
export var TableOperation;
(function (TableOperation) {
    TableOperation[TableOperation["CREATE"] = 1] = "CREATE";
    TableOperation[TableOperation["UPDATE"] = 2] = "UPDATE";
    TableOperation[TableOperation["DELETE"] = 3] = "DELETE";
    TableOperation[TableOperation["RESTORE"] = 4] = "RESTORE";
})(TableOperation || (TableOperation = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl0b3RhYmxlLmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2xpdG8tdGFibGUvc3JjL2xpYi9jb25maWd1cmF0aW9ucy9saXRvdGFibGUuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNEQSxNQUFNLE9BQU8sY0FBYztJQUV6QixZQUNFLEtBQTJFO1FBRTNFLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLElBQUksT0FBTyxLQUFLLElBQUksUUFBUSxFQUFFO1lBQzVCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1NBQ3BCO2FBQU07WUFDTCxJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUNyQixJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQzthQUMzRDtpQkFBTSxJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUM1QixJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7YUFDeEU7U0FDRjtJQUNILENBQUM7Q0FDRjtBQWFELE1BQU0sQ0FBTixJQUFZLFFBR1g7QUFIRCxXQUFZLFFBQVE7SUFDbEIsMkNBQVUsQ0FBQTtJQUNWLDJDQUFVLENBQUE7QUFDWixDQUFDLEVBSFcsUUFBUSxLQUFSLFFBQVEsUUFHbkI7QUFFRCxNQUFNLE9BQU8sa0JBQWtCO0lBRzdCLFlBQVksT0FBNEIsRUFBRSxhQUFzQixLQUFLO1FBQ25FLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQy9CLENBQUM7SUFDRCxzQkFBc0IsQ0FBQyxHQUFhO1FBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDekIsQ0FBQyxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDM0MsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLENBQU4sSUFBWSxrQkFHWDtBQUhELFdBQVksa0JBQWtCO0lBQzVCLCtEQUFVLENBQUE7SUFDVixtRUFBWSxDQUFBO0FBQ2QsQ0FBQyxFQUhXLGtCQUFrQixLQUFsQixrQkFBa0IsUUFHN0I7QUFFRCxNQUFNLENBQU4sSUFBWSxjQUtYO0FBTEQsV0FBWSxjQUFjO0lBQ3hCLHVEQUFVLENBQUE7SUFDVix1REFBVSxDQUFBO0lBQ1YsdURBQVUsQ0FBQTtJQUNWLHlEQUFXLENBQUE7QUFDYixDQUFDLEVBTFcsY0FBYyxLQUFkLGNBQWMsUUFLekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGl0b0Zvb3RlckFjdGlvbiB7XHJcbiAgaWNvbj86IHN0cmluZztcclxuICBjb250ZW50Pzogc3RyaW5nO1xyXG4gIGNvbG9yPzogc3RyaW5nO1xyXG4gIGFjdGlvblJlc3VsdDoge1xyXG4gICAgd2lsbEFkZFJvdzogYm9vbGVhbjtcclxuICAgIGFjdGlvbk9ic2VydmFibGU/OiBPYnNlcnZhYmxlPGFueT47XHJcbiAgICBub25PYnNlcnZhYmxlQWN0aW9uPzogKCkgPT4gYW55O1xyXG4gIH07XHJcbiAgdGVtcGxhdGU/OiBDb21wb25lbnQ7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGl0b0dlbmVyYWxBY3Rpb24ge1xyXG4gIG5hbWU6IHN0cmluZztcclxuICBpY29uPzogc3RyaW5nO1xyXG4gIGNvbnRlbnQ/OiBzdHJpbmc7XHJcbiAgY29sb3I/OiBzdHJpbmc7XHJcbiAgbXVzdExvY2tSb3dzOiBib29sZWFuO1xyXG4gIHRlbXBsYXRlPzogQ29tcG9uZW50O1xyXG4gIGNvbmZpcm1hdGlvbj86IExpdG9HZW5lcmFsQWN0aW9uQ29uZmlybWF0aW9uO1xyXG4gIHBlcmZvcm1hYmxlOiB7IHN0YXRlOiBib29sZWFuOyB0b29sdGlwOiBzdHJpbmcgfTtcclxuICB1cGRhdGVQZXJmb3JtYWJsZTogKHNlbGVjdGVkUm93czogU2V0PGFueT4pID0+IHtcclxuICAgIHN0YXRlOiBib29sZWFuO1xyXG4gICAgdG9vbHRpcDogc3RyaW5nO1xyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGl0b1Jvd0FjdGlvbiB7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIHRvb2x0aXA6IHN0cmluZztcclxuICBpY29uOiBzdHJpbmc7XHJcbiAgY29sb3I6IHN0cmluZztcclxuICBhY3Rpb25SZXN1bHQ6IHtcclxuICAgIHdpbGxVcGRhdGVSb3c/OiBib29sZWFuO1xyXG4gICAgd2lsbERlbGV0ZVJvdz86IGJvb2xlYW47XHJcbiAgICBhY3Rpb25PYnNlcnZhYmxlPzogT2JzZXJ2YWJsZTxhbnk+O1xyXG4gIH07XHJcbiAgY29uZmlybWF0aW9uPzogTGl0b1Jvd0FjdGlvbkNvbmZpcm1hdGlvbjtcclxufVxyXG5leHBvcnQgaW50ZXJmYWNlIExpdG9Sb3dBY3Rpb25Db25maXJtYXRpb24ge1xyXG4gIHRpdGxlOiBzdHJpbmc7XHJcbiAgY29udGVudDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIExpdG9HZW5lcmFsQWN0aW9uQ29uZmlybWF0aW9uIHtcclxuICB0aXRsZTogc3RyaW5nO1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxuICBpdGVtcz86IGFueVtdO1xyXG4gIHByaW1hcnlLZXk6IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIExpdG90YWJsZUNvbG9yIHtcclxuICB2YWx1ZTogc3RyaW5nO1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgdmFsdWU6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyXSB8IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdIHwgc3RyaW5nXHJcbiAgKSB7XHJcbiAgICB0aGlzLnZhbHVlID0gJyc7XHJcbiAgICBpZiAodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT0gMykge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSBgcmdiKCR7dmFsdWVbMF19LCAke3ZhbHVlWzFdfSwgJHt2YWx1ZVsyXX0pYDtcclxuICAgICAgfSBlbHNlIGlmICh2YWx1ZS5sZW5ndGggPT0gNCkge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSBgcmdiKCR7dmFsdWVbMF19LCAke3ZhbHVlWzFdfSwgJHt2YWx1ZVsyXX0sICR7dmFsdWVbM119KWA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVGFibGVDb25maWd1cmF0aW9ucyB7XHJcbiAgcGFnaW5hdGlvblNpemVzPzogbnVtYmVyW107XHJcbiAgaG92ZXJTdHlsZT86IFJvd1N0eWxlO1xyXG4gIHNlbGVjdGlvblN0eWxlPzogUm93U3R5bGU7XHJcbiAgcm93U3R5bGVDb2xvcnM/OiBMaXRvdGFibGVDb2xvcltdO1xyXG4gIGhlYWRlckJvcmRlcnM/OiBib29sZWFuO1xyXG4gIGNlbGxCb3JkZXJzPzogYm9vbGVhbjtcclxuICBhY3Rpb25zQ29sdW1uPzogTGl0b1Jvd0FjdGlvbltdO1xyXG4gIGZvb3RlckFjdGlvbj86IExpdG9Gb290ZXJBY3Rpb247XHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFJvd1N0eWxlIHtcclxuICBCT1JERVIgPSAxLFxyXG4gIFNIQURPVyA9IDIsXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBUYWJsZUFjdGlvbnNDb25maWcge1xyXG4gIGFjdGlvbnM6IExpdG9HZW5lcmFsQWN0aW9uW107XHJcbiAgZXhwYW5kYWJsZTogYm9vbGVhbjtcclxuICBjb25zdHJ1Y3RvcihhY3Rpb25zOiBMaXRvR2VuZXJhbEFjdGlvbltdLCBleHBhbmRhYmxlOiBib29sZWFuID0gZmFsc2UpIHtcclxuICAgIHRoaXMuYWN0aW9ucyA9IGFjdGlvbnM7XHJcbiAgICB0aGlzLmV4cGFuZGFibGUgPSBleHBhbmRhYmxlO1xyXG4gIH1cclxuICB1cGRhdGVQZXJtb3JtYWJsZVN0YXRlKHNldDogU2V0PGFueT4pIHtcclxuICAgIHRoaXMuYWN0aW9ucy5mb3JFYWNoKChhKSA9PiB7XHJcbiAgICAgIGEucGVyZm9ybWFibGUgPSBhLnVwZGF0ZVBlcmZvcm1hYmxlKHNldCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIEdlbmVyYWxBY3Rpb25TY29wZSB7XHJcbiAgU0lOR0xFID0gMSxcclxuICBNVUxUSVBMRSA9IDIsXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFRhYmxlT3BlcmF0aW9uIHtcclxuICBDUkVBVEUgPSAxLFxyXG4gIFVQREFURSA9IDIsXHJcbiAgREVMRVRFID0gMyxcclxuICBSRVNUT1JFID0gNCxcclxufVxyXG4iXX0=
var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Column.html",[0,0.103,1,1.32]],["body/classes/Column.html",[0,0.13,1,2.098,2,1.163,3,0.328,4,0.328,5,0.285,6,3.528,7,0.285,8,0.469,9,1.049,10,4.258,11,3.809,12,1.153,13,4.772,14,1.419,15,0.394,16,4.258,17,0.716,18,4.19,19,0.526,20,1.033,21,1.39,22,1.249,23,5.273,24,0.865,25,0.028,26,3.809,27,4.19,28,4.19,29,4.19,30,4.19,31,4.19,32,1.688,33,4.19,34,0.419,35,0.865,36,0.328,37,4.19,38,2.506,39,1.442,40,4.19,41,0.022,42,0.022]],["title/interfaces/ColumnGroup.html",[43,0.332,44,2.19]],["body/interfaces/ColumnGroup.html",[3,0.334,4,0.334,5,0.29,7,0.29,8,0.475,10,3.149,11,2.817,12,1.074,13,3.149,14,1.296,15,0.31,16,3.149,19,0.509,20,0.865,21,0.95,25,0.029,26,3.521,32,1.366,34,0.427,36,0.492,41,0.022,42,0.022,43,0.534,44,4.023,45,1.83,46,2.552,47,2.331,48,1.188,49,2.288,50,3.593,51,2.552,52,3.149,53,1.272,54,4.899,55,1.468,56,1.708,57,4.491,58,3.593,59,3.593,60,3.149,61,1.835,62,2.331,63,3.593,64,3.593,65,3.593,66,2.288,67,0.815,68,2.817,69,1.101,70,2.817,71,1.188,72,1.101,73,1.708,74,3.149,75,1.698,76,2.817,77,2.817,78,2.817,79,3.149,80,3.149,81,2.142,82,3.149]],["title/classes/ColumnGroups.html",[0,0.103,83,1.813]],["body/classes/ColumnGroups.html",[0,0.137,1,2.316,2,0.48,3,0.136,4,0.218,5,0.118,7,0.118,8,0.248,9,0.452,12,0.868,14,0.386,15,0.286,17,0.378,19,0.434,20,0.566,21,1.258,22,0.895,24,0.575,25,0.029,32,1.886,34,0.574,35,0.357,36,0.344,38,1.666,41,0.011,42,0.011,47,0.946,48,0.62,49,1.195,53,1.468,55,1.202,56,1.577,61,0.596,62,2.396,67,1.009,69,0.721,72,0.447,83,2.691,84,1.036,85,2.306,86,2.306,87,2.306,88,2.306,89,1.108,90,2.785,91,1.839,92,2.785,93,1.732,94,1.377,95,1.079,96,1.737,97,1.732,98,1.732,99,1.909,100,1.732,101,1.839,102,1.732,103,1.732,104,0.689,105,1.03,106,1.839,107,1.143,108,1.143,109,1.143,110,1.839,111,0.773,112,0.689,113,1.108,114,0.869,115,0.516,116,1.839,117,1.036,118,1.839,119,2.306,120,1.036,121,1.839,122,1.036,123,1.839,124,1.036,125,1.141,126,1.111,127,0.83,128,0.869,129,1.619,130,0.869,131,1.108,132,1.03,133,1.143,134,0.689,135,0.689,136,0.743,137,0.689,138,1.143,139,0.689,140,1.143,141,0.64,142,0.386,143,1.881,144,1.839,145,0.869,146,1.143,147,2.187,148,2.026,149,1.143,150,1.909,151,1.143,152,1.143,153,1.143,154,2.089,155,1.143,156,1.143,157,1.143,158,1.143,159,1.143,160,1.143,161,1.143,162,1.143,163,1.143,164,1.143,165,0.743,166,1.143,167,1.143,168,1.143,169,1.143,170,1.143,171,1.143,172,1.143,173,1.143,174,0.689,175,1.143,176,1.143,177,1.839,178,2.248,179,1.143,180,1.839,181,1.143,182,2.306,183,2.306,184,1.143,185,1.143,186,1.143,187,2.01,188,1.143,189,1.143,190,1.143,191,1.143,192,1.143,193,1.143,194,1.143,195,1.143,196,1.143,197,1.143,198,1.143,199,1.839,200,1.143,201,1.143,202,1.143,203,1.143,204,1.143,205,1.143,206,1.143,207,1.143,208,2.306,209,1.839,210,1.839,211,1.839,212,1.839,213,1.839,214,2.642,215,1.839,216,1.398,217,1.839,218,1.839,219,1.307,220,2.642,221,1.839,222,2.642,223,1.839,224,1.143,225,1.143,226,1.143,227,1.143,228,0.62,229,1.143,230,1.143,231,2.306,232,1.143,233,1.143,234,1.143,235,2.202,236,1.143,237,2.306,238,1.398,239,1.143,240,1.839,241,1.839,242,1.036,243,1.143,244,1.143,245,1.143,246,1.143,247,1.143,248,1.143,249,1.143,250,1.666,251,1.143,252,1.143,253,2.895,254,1.143,255,1.143,256,1.143,257,1.143,258,1.143,259,1.143,260,1.839,261,1.143,262,1.143,263,1.143,264,1.398,265,1.839,266,1.839,267,1.143,268,1.143,269,1.143,270,1.143,271,1.143,272,1.143,273,1.839,274,1.143,275,2.306,276,1.143,277,1.143,278,1.143,279,1.143,280,1.143,281,1.839,282,1.143,283,0.946,284,1.143,285,1.143,286,1.143,287,1.036,288,2.01,289,2.306,290,1.143,291,0.447,292,1.033,293,1.143,294,0.869,295,0.902,296,0.869,297,1.143,298,1.398,299,0.869,300,1.143,301,2.306,302,1.143,303,1.143,304,1.143,305,1.143,306,1.143,307,1.143,308,1.143,309,1.143,310,1.839,311,1.143,312,2.642,313,1.143,314,2.306,315,2.306,316,2.895,317,2.306,318,1.143,319,1.143,320,1.143,321,2.306,322,2.306,323,1.143,324,1.143,325,1.143,326,1.839,327,1.143,328,1.143,329,1.143,330,1.143,331,1.143,332,1.143,333,1.143,334,1.398,335,1.143,336,1.143,337,1.143,338,1.143,339,1.143,340,1.143,341,1.143,342,1.143,343,1.839,344,1.839,345,1.143,346,0.869,347,1.143,348,1.143,349,1.143,350,1.143,351,1.143,352,1.143,353,1.143,354,1.143,355,1.839,356,1.143,357,1.839,358,1.143,359,1.143,360,1.143,361,1.143,362,1.143,363,1.108,364,1.39,365,2.306,366,0.689,367,0.689,368,1.143,369,1.143]],["title/interfaces/Constrain.html",[43,0.332,125,0.739]],["body/interfaces/Constrain.html",[0,0.15,3,0.285,4,0.285,5,0.247,7,0.247,8,0.428,14,0.81,15,0.363,17,0.494,19,0.377,20,0.78,25,0.029,32,2.058,34,0.364,35,0.751,36,0.423,39,1.855,41,0.02,42,0.02,43,0.597,45,1.56,48,0.81,51,2.878,53,1.894,55,1.855,67,0.695,71,1.072,72,1.583,96,1.838,125,1.393,126,1.009,127,1.435,142,0.81,178,2.441,219,1.894,228,0.81,291,1.242,292,1.583,295,1.482,363,2.649,364,2.528,366,1.447,367,1.447,370,1.685,371,2.175,372,3.351,373,1.987,374,1.987,375,1.987,376,1.345,377,2.313,378,1.987,379,2.064,380,3.47,381,2.064,382,2.064,383,2.629,384,1.987]],["title/components/ConstrainCreationForm.html",[111,0.921,385,1.423]],["body/components/ConstrainCreationForm.html",[0,0.1,1,2.015,3,0.12,4,0.12,5,0.104,7,0.104,8,0.224,9,0.667,12,0.824,15,0.343,17,0.342,19,0.442,20,0.248,21,0.985,22,1.165,24,0.849,25,0.029,34,0.468,35,0.316,36,0.252,41,0.01,42,0.01,48,0.341,56,0.491,61,1.522,67,0.293,69,0.52,72,1.477,81,2.066,89,1.003,94,1.522,95,1.157,96,0.491,104,2.074,105,1.976,111,1.033,112,0.61,113,1.003,114,0.769,115,0.457,125,1.329,126,0.891,127,0.957,128,0.769,134,2.074,135,1.003,136,0.657,137,1.278,139,1.278,141,0.567,142,0.341,143,1.378,145,1.613,148,1.911,154,1.507,174,1.637,219,0.957,228,0.561,235,0.769,238,1.613,242,1.507,250,0.916,283,0.837,287,1.507,288,2.833,291,1.142,292,1.667,294,0.769,295,1.584,296,1.266,298,1.266,299,1.266,334,1.266,346,1.266,376,0.932,377,0.657,379,1.081,381,1.081,382,1.081,385,1.596,386,1.507,387,1.011,388,1.011,389,1.011,390,1.011,391,4.052,392,3.671,393,1.011,394,1.921,395,1.921,396,2.248,397,2.746,398,1.86,399,2.417,400,2.37,401,2.248,402,2.37,403,2.37,404,3.036,405,2.37,406,2.646,407,2.37,408,3.036,409,2.521,410,2.746,411,2.746,412,2.521,413,2.033,414,3.212,415,2.521,416,2.746,417,1.29,418,2.248,419,2.46,420,2.37,421,2.746,422,1.532,423,1.86,424,1.532,425,1.86,426,1.532,427,1.532,428,1.532,429,1.532,430,1.86,431,1.532,432,1.86,433,1.532,434,1.532,435,1.532,436,1.532,437,1.532,438,2.122,439,1.377,440,1.532,441,3.451,442,3.036,443,1.532,444,1.532,445,1.532,446,1.532,447,1.532,448,1.532,449,2.37,450,1.86,451,1.532,452,1.532,453,1.532,454,1.532,455,1.755,456,0.837,457,0.837,458,1.377,459,0.837,460,0.769,461,0.837,462,1.377,463,0.769,464,0.71,465,0.916,466,1.011,467,1.507,468,1.13,469,1.13,470,1.081,471,1.13,472,0.837,473,0.837,474,0.837,475,1.13,476,1.13,477,1.13,478,0.837,479,0.837,480,1.13,481,1.13,482,1.86,483,1.13,484,1.13,485,1.86,486,1.86,487,2.37,488,1.86,489,1.86,490,1.86,491,1.86,492,2.746,493,0.837,494,1.13,495,1.13,496,1.13,497,1.13,498,2.37,499,1.86,500,2.37,501,1.86,502,1.13,503,1.765,504,1.86,505,1.86,506,1.86,507,2.37,508,2.37,509,1.13,510,2.37,511,4.025,512,2.746,513,1.86,514,4.099,515,1.86,516,2.37,517,2.746,518,1.13,519,1.86,520,1.86,521,3.451,522,3.451,523,2.716,524,1.86,525,3.036,526,1.13,527,1.86,528,1.13,529,1.13,530,1.13,531,1.13,532,1.13,533,1.86,534,2.37,535,1.13,536,1.13,537,1.86,538,1.13,539,1.13,540,1.86,541,1.13,542,1.13,543,1.13,544,2.521,545,4.425,546,2.521,547,4.425,548,2.521,549,3.722,550,1.86,551,1.266,552,2.521,553,3.722,554,3.722,555,3.722,556,3.722,557,3.722,558,3.134,559,3.722,560,3.722,561,4.886,562,3.722,563,5.455,564,1.532,565,2.521,566,1.532,567,2.521,568,1.532,569,2.521,570,2.122,571,2.46,572,1.29,573,2.12,574,3.726,575,0.916,576,1.29,577,2.12,578,1.29,579,1.664,580,2.122,581,2.122,582,1.29,583,2.122,584,2.122,585,1.29,586,1.29,587,1.29,588,1.29,589,1.011,590,1.664,591,1.664,592,1.011,593,2.457,594,1.011,595,1.532,596,1.532,597,1.664,598,1.011,599,0.657,600,0.769,601,0.916,602,0.657,603,0.916,604,1.011,605,1.011,606,1.011]],["title/classes/ConstrainCreationFormData.html",[0,0.103,419,1.984]],["body/classes/ConstrainCreationFormData.html",[0,0.134,1,2.133,2,0.667,3,0.188,4,0.188,5,0.163,7,0.163,8,0.32,15,0.311,17,0.326,19,0.4,20,0.39,21,1.063,22,0.459,25,0.029,34,0.556,35,0.496,36,0.337,41,0.015,42,0.015,56,0.769,61,1.235,67,0.459,69,0.496,72,1.434,94,1.235,95,1.115,96,0.769,105,1.328,111,1.193,112,0.956,113,1.429,114,1.206,115,0.716,125,1.272,126,0.996,127,1.071,128,1.206,134,1.429,137,1.429,139,1.429,142,0.535,143,2.191,145,1.206,148,2.045,174,1.429,219,0.716,228,0.8,235,1.206,238,2.159,288,2.691,291,1.383,292,1.741,294,1.206,295,1.691,296,1.803,298,1.803,299,1.803,334,1.206,346,1.206,376,1.328,377,1.03,379,1.54,381,1.54,382,1.54,385,1.03,391,2.371,392,2.148,393,1.586,394,1.437,395,1.437,396,1.962,397,2.65,398,1.773,399,1.962,400,1.773,401,1.962,402,1.773,403,1.773,404,1.773,405,1.773,406,2.572,407,1.773,408,1.773,410,1.773,411,1.773,413,1.313,416,1.773,418,1.962,419,2.572,420,1.773,421,2.65,423,1.773,425,1.773,430,1.773,432,1.773,439,1.313,441,3.521,442,3.174,449,2.65,450,1.773,455,2.35,456,1.313,457,1.313,458,1.962,459,1.313,460,1.206,461,1.313,462,1.962,463,1.206,464,1.113,465,1.437,466,1.586,467,1.437,468,1.773,469,1.773,470,1.03,471,1.773,472,1.313,473,1.313,474,1.313,475,1.773,476,1.773,477,1.773,478,1.313,479,1.313,480,1.773,481,1.773,482,2.65,483,1.773,484,1.773,485,2.65,486,2.65,487,2.65,488,2.65,489,2.65,490,2.65,491,2.65,492,3.521,493,1.313,494,1.773,495,1.773,496,1.773,497,1.773,498,3.174,499,2.65,500,3.174,501,2.65,502,1.773,503,2.047,504,2.65,505,2.65,506,2.65,507,3.174,508,3.174,509,1.773,510,3.174,511,4.51,512,3.521,513,2.65,514,4.559,515,2.65,516,3.174,517,3.521,518,1.773,519,2.65,520,2.65,521,1.773,522,1.773,523,3.15,524,2.65,525,3.769,526,1.773,527,2.65,528,1.773,529,1.773,530,1.773,531,1.773,532,1.773,533,2.65,534,3.174,535,1.773,536,1.773,537,2.65,538,1.773,539,1.773,540,2.65,541,1.773,542,1.773,543,1.773,607,2.402]],["title/components/ConstrainCreatorComponent.html",[111,0.921,470,1.423]],["body/components/ConstrainCreatorComponent.html",[0,0.121,1,1.995,3,0.159,4,0.159,5,0.138,7,0.138,8,0.281,9,0.328,12,0.682,15,0.323,17,0.428,19,0.371,20,0.328,21,1.116,22,0.957,24,0.418,25,0.029,34,0.524,35,0.418,36,0.303,41,0.013,42,0.013,48,0.451,56,0.648,61,1.084,67,0.387,69,0.651,72,1.351,81,2.376,89,1.254,94,1.084,95,1.061,96,0.648,104,1.254,105,1.615,111,1.212,112,0.806,113,1.54,114,1.016,115,0.604,125,1.399,126,0.874,127,0.94,128,1.016,134,2.262,135,1.254,136,0.868,137,1.54,139,1.54,141,0.749,142,0.702,143,2.03,145,1.016,148,1.955,174,1.883,219,0.604,228,0.973,235,1.016,238,1.943,283,1.106,288,2.516,291,1.294,292,1.716,294,1.016,295,1.655,296,1.582,298,1.582,299,1.582,334,1.016,346,1.016,376,1.166,377,0.868,379,1.352,381,1.352,382,1.352,385,1.352,386,1.885,387,1.336,388,1.336,389,1.336,390,1.336,391,3.454,392,3.129,393,1.336,394,1.885,395,1.885,396,2.859,397,3.223,398,1.494,399,2.386,400,1.494,401,1.722,402,1.494,403,1.494,404,1.494,405,1.494,406,2.314,407,1.494,408,1.494,410,1.494,411,1.494,413,1.106,416,1.494,418,1.722,419,1.885,420,1.494,421,2.326,423,1.494,425,1.494,430,1.494,432,1.494,439,1.106,441,3.223,442,2.856,449,2.326,450,1.494,455,2.386,456,1.106,457,1.106,458,2.586,459,1.106,460,1.016,461,1.106,462,1.722,463,1.016,464,0.938,465,1.211,466,1.336,467,2.314,468,2.326,469,2.326,470,1.873,471,1.494,472,1.106,473,1.106,474,2.386,475,1.494,476,1.494,477,1.494,478,1.106,479,1.106,480,1.494,481,1.494,482,2.326,483,1.494,484,1.494,485,2.326,486,2.326,487,2.326,488,2.326,489,2.326,490,2.326,491,2.326,492,3.223,493,1.106,494,1.494,495,1.494,496,1.494,497,1.494,498,2.856,499,2.326,500,2.856,501,2.326,502,1.494,503,2.03,504,2.326,505,2.326,506,2.326,507,2.856,508,2.856,509,1.494,510,2.856,511,4.338,512,3.223,513,2.326,514,4.397,515,2.326,516,2.856,517,3.223,518,1.494,519,2.326,520,2.326,521,1.494,522,1.494,523,3.124,524,2.326,525,3.492,526,1.494,527,2.326,528,1.494,529,1.494,530,1.494,531,1.494,532,1.494,533,2.326,534,2.856,535,1.494,536,1.494,537,2.326,538,1.494,539,1.494,540,2.326,541,1.494,542,1.494,543,1.494,570,2.654,571,2.83,572,1.705,573,2.555,574,4.22,575,1.211,576,1.705,577,2.555,578,1.705,579,2.081,580,2.654,581,2.654,582,1.705,583,2.654,584,2.654,585,1.705,586,1.705,587,1.705,588,1.705,589,1.336,590,2.081,591,2.081,592,1.336,593,2.883,594,1.336,597,2.081,598,1.336,599,0.868,600,1.016,601,1.211,602,0.868,603,1.211,604,1.336,605,1.336,606,1.336,608,2.654,609,2.654,610,1.705,611,2.025,612,2.025,613,2.025,614,2.025,615,2.025,616,2.025]],["title/classes/CreateOperationConfig.html",[0,0.103,617,1.666]],["body/classes/CreateOperationConfig.html",[0,0.189,2,1.174,3,0.332,4,0.332,5,0.288,7,0.288,8,0.472,9,0.686,12,0.746,14,0.942,15,0.38,17,0.721,19,0.332,20,0.86,22,1.107,24,0.874,25,0.029,34,0.531,35,0.874,36,0.49,39,1.456,41,0.022,42,0.022,43,0.423,66,1.815,69,0.874,71,0.942,73,1.355,75,1.684,131,2.418,132,1.565,165,2.276,464,1.961,551,2.125,617,2.664,618,2.125,619,3.466,620,3.254,621,3.743,622,3.173,623,3.206,624,5.306,625,3.563,626,3.563,627,2.531,628,2.531,629,2.531,630,2.531,631,2.125,632,2.531,633,2.531,634,2.125,635,2.531,636,2.312,637,2.312,638,2.312]],["title/pipes/CuitPipe.html",[639,1.984,640,1.984]],["body/pipes/CuitPipe.html",[0,0.145,3,0.366,4,0.366,5,0.318,9,0.758,12,1.067,15,0.271,19,0.504,21,1.349,22,0.892,24,0.964,25,0.028,34,0.467,36,0.366,41,0.023,42,0.023,48,1.04,53,1.393,71,1.04,76,3.722,89,1.859,94,1.607,95,1.077,104,1.859,115,1.393,142,1.04,228,1.256,639,3.372,640,3.372,641,3.447,642,3.933,643,3.933,644,4.748,645,6.438,646,4.672,647,4.748,648,3.933,649,4.672,650,4.672,651,4.672,652,4.672,653,3.933]],["title/classes/DateConstrain.html",[0,0.103,376,1.227]],["body/classes/DateConstrain.html",[0,0.162,2,0.943,3,0.266,4,0.266,5,0.231,7,0.231,8,0.41,9,0.551,12,0.599,14,0.757,15,0.378,17,0.625,19,0.36,20,0.746,22,1.149,24,0.702,25,0.029,32,2.053,34,0.34,35,0.702,36,0.408,39,1.794,41,0.019,42,0.019,43,0.559,48,0.757,53,1.865,55,2.07,67,0.649,71,1.025,72,1.693,94,1.17,95,0.649,96,1.789,125,1.34,126,0.943,127,1.74,142,1.025,178,2.394,219,1.89,228,0.757,291,1.188,292,1.553,295,1.442,363,2.625,364,2.524,366,1.353,367,1.353,370,1.576,371,2.034,372,3.189,373,1.858,374,1.858,375,2.514,376,1.701,377,2.639,378,1.858,379,1.973,380,3.419,381,1.973,382,1.973,383,2.514,384,1.858,631,1.707,654,4.601,655,3.401,656,3.401,657,3.401,658,3.401]],["title/classes/DeleteOperationConfig.html",[0,0.103,634,1.666]],["body/classes/DeleteOperationConfig.html",[0,0.191,2,1.204,3,0.34,4,0.34,5,0.295,7,0.295,8,0.48,14,0.966,15,0.373,17,0.796,19,0.34,20,0.874,22,1.029,25,0.029,34,0.539,35,0.896,36,0.494,39,1.493,41,0.022,42,0.022,43,0.434,66,1.861,69,0.896,71,0.966,73,1.389,75,1.727,131,2.44,132,1.605,165,2.312,464,2.011,551,2.179,617,2.179,618,2.179,619,3.506,620,3.271,621,3.223,622,2.595,623,2.943,625,3.654,626,3.654,627,2.595,628,2.595,629,2.595,630,2.595,631,2.179,632,2.595,633,2.595,634,2.706,635,2.595,636,2.371,637,2.371,638,2.371,659,4.339]],["title/interfaces/DialogColorData.html",[43,0.332,660,1.984]],["body/interfaces/DialogColorData.html",[0,0.148,3,0.281,4,0.281,5,0.244,7,0.244,8,0.424,15,0.311,17,0.486,19,0.511,21,1.192,25,0.029,34,0.536,36,0.419,41,0.02,42,0.02,43,0.358,45,1.536,56,1.147,61,1.639,67,1.022,73,1.147,95,1.246,105,1.979,111,1.485,112,1.425,113,1.896,115,1.067,130,1.798,134,1.896,135,2.27,137,1.896,139,1.896,142,0.798,148,1.639,174,1.425,187,2.391,228,1.061,264,1.798,291,0.924,292,1.381,295,1.381,396,3.117,399,2.602,401,2.602,413,1.957,418,2.602,439,1.957,455,3.245,456,1.957,457,1.957,458,2.602,459,1.957,460,1.798,472,1.957,473,1.957,474,1.957,478,1.957,479,1.957,493,1.957,503,2.749,571,2.142,575,2.142,599,1.536,600,1.798,601,2.142,602,1.536,603,2.142,660,3.201,661,2.142,662,1.957,663,2.142,664,4.506,665,4.383,666,2.83,667,2.642,668,2.642,669,3.515,670,2.642,671,2.642,672,2.642,673,2.642,674,2.642,675,2.642,676,2.642,677,2.142,678,2.642,679,2.642,680,2.642,681,2.642,682,2.642,683,3.515,684,2.642,685,2.642,686,2.642,687,2.142,688,2.642,689,2.642,690,2.642,691,2.642,692,2.642,693,2.642,694,2.642,695,2.642,696,2.642,697,2.642]],["title/components/DialogColorPicker.html",[111,0.921,599,1.423]],["body/components/DialogColorPicker.html",[0,0.12,3,0.207,4,0.207,5,0.18,7,0.18,8,0.343,9,0.625,12,0.881,15,0.348,17,0.524,19,0.488,21,1.236,22,1.162,24,0.796,25,0.029,34,0.455,36,0.356,41,0.016,42,0.016,43,0.265,48,0.589,56,0.847,61,1.909,67,1.094,73,0.847,81,1.328,89,1.535,94,1.829,95,1.235,104,1.535,105,1.966,111,1.387,112,1.053,113,1.535,115,0.789,125,0.859,130,1.328,134,2.337,135,2.337,136,1.135,137,1.811,139,1.811,141,0.978,142,0.589,143,1.135,148,1.327,174,1.053,187,1.936,228,0.859,264,1.328,291,0.683,292,1.175,295,1.175,385,1.135,386,2.306,387,2.546,388,1.746,389,1.746,390,1.746,394,1.582,395,1.582,396,3.208,399,3.032,401,2.904,413,2.732,417,2.227,418,2.904,438,2.227,439,2.107,455,2.904,456,1.445,457,1.445,458,2.107,459,1.445,460,1.328,467,1.582,470,1.135,472,1.445,473,1.445,474,1.445,478,1.445,479,1.445,493,1.445,503,2.906,571,1.582,573,1.746,575,2.306,577,1.746,579,1.746,589,1.746,590,2.546,591,2.546,592,1.746,593,3.301,594,1.746,597,2.546,598,1.746,599,2.145,600,2.285,601,2.721,602,1.654,603,2.306,604,1.746,605,1.746,606,1.746,660,3.179,661,3.687,662,3.368,663,1.582,664,3.923,665,2.845,666,2.463,667,1.952,668,1.952,669,3.69,670,1.952,671,1.952,672,1.952,673,1.952,674,1.952,675,1.952,676,1.952,677,1.582,678,1.952,679,2.845,680,3.358,681,3.358,682,2.845,683,3.69,684,3.358,685,2.845,686,3.358,687,2.306,688,2.845,689,1.952,690,1.952,691,1.952,692,1.952,693,1.952,694,1.952,695,1.952,696,1.952,697,1.952,698,3.856,699,3.856,700,2.646,701,2.646,702,2.646,703,2.646,704,2.646,705,2.646,706,2.646,707,2.646,708,2.646,709,5.001,710,3.247,711,2.227,712,2.227,713,2.227,714,2.227,715,3.247,716,2.227,717,2.227,718,2.227,719,2.227,720,2.227,721,2.646]],["title/classes/DisplayedColumns.html",[0,0.103,147,1.813]],["body/classes/DisplayedColumns.html",[0,0.136,1,2.41,2,0.477,3,0.135,4,0.217,5,0.117,7,0.117,8,0.246,9,0.449,12,0.865,14,0.383,15,0.296,17,0.376,19,0.433,20,0.646,21,1.174,22,1.007,24,0.572,25,0.029,32,1.922,34,0.573,35,0.355,36,0.342,38,1.656,41,0.011,42,0.011,47,0.939,48,0.617,49,1.188,53,1.464,55,1.196,56,1.572,61,0.591,62,2.387,67,0.975,69,0.718,72,0.444,83,2.881,84,1.028,85,1.135,86,1.135,87,1.135,88,1.135,89,1.102,91,1.135,95,0.975,96,1.688,99,1.513,101,1.135,104,1.383,105,1.474,106,1.828,107,1.135,108,1.135,109,1.135,110,1.828,111,0.768,112,0.684,113,1.102,114,0.863,115,0.512,116,1.828,117,1.028,118,1.828,119,2.295,120,1.028,121,1.828,122,1.028,123,1.828,124,1.028,125,1.138,126,1.106,127,0.825,128,0.863,129,1.611,130,0.863,131,1.102,132,1.024,133,1.135,134,0.684,135,0.684,136,0.737,137,0.684,138,1.135,139,0.684,140,1.135,141,0.636,142,0.383,143,2.191,144,2.631,145,0.863,146,1.135,147,2.387,148,2.023,149,1.135,150,1.899,151,1.135,152,1.135,153,1.135,154,2.079,155,1.135,156,1.135,157,1.135,158,1.135,159,1.135,160,1.135,161,1.135,162,1.135,163,1.135,164,1.135,165,0.737,166,1.135,167,1.135,168,1.135,169,1.135,170,1.135,171,1.135,172,1.135,173,1.135,174,0.684,175,1.135,176,1.135,177,1.828,178,2.243,179,1.135,180,1.828,181,1.135,182,2.295,183,2.295,184,1.135,185,1.135,186,1.135,187,2.001,188,1.135,189,1.135,190,1.135,191,1.135,192,1.135,193,1.135,194,1.135,195,1.135,196,1.135,197,1.135,198,1.135,199,1.828,200,1.135,201,1.135,202,1.135,203,1.135,204,1.135,205,1.135,206,1.135,207,1.135,208,2.295,209,1.828,210,1.828,211,1.828,212,1.828,213,1.828,214,2.631,215,1.828,216,1.39,217,1.828,218,1.828,219,1.302,220,2.631,221,1.828,222,2.631,223,1.828,224,1.135,225,1.135,226,1.135,227,1.135,228,0.617,229,1.135,230,1.135,231,2.295,232,1.135,233,1.135,234,1.135,235,2.194,236,1.135,237,2.295,238,1.39,239,1.135,240,1.828,241,1.828,242,1.028,243,1.135,244,1.135,245,1.135,246,1.135,247,1.135,248,1.135,249,1.135,250,1.656,251,1.135,252,1.135,253,2.884,254,1.135,255,1.135,256,1.135,257,1.135,258,1.135,259,1.135,260,1.828,261,1.135,262,1.135,263,1.135,264,1.39,265,1.828,266,1.828,267,1.135,268,1.135,269,1.135,270,1.135,271,1.135,272,1.135,273,1.828,274,1.135,275,2.295,276,1.135,277,1.135,278,1.135,279,1.135,280,1.135,281,1.828,282,1.135,283,0.939,284,1.135,285,1.135,286,1.135,287,1.028,288,2.001,289,2.295,290,1.135,291,0.444,292,1.029,293,1.135,294,0.863,295,0.897,296,0.863,297,1.135,298,1.39,299,0.863,300,1.135,301,2.295,302,1.135,303,1.135,304,1.135,305,1.135,306,1.135,307,1.135,308,1.135,309,1.135,310,1.828,311,2.295,312,3.372,313,1.828,314,2.295,315,2.295,316,2.884,317,2.295,318,1.135,319,1.135,320,1.135,321,2.295,322,2.295,323,1.135,324,1.135,325,1.828,326,1.828,327,1.135,328,1.135,329,2.631,330,1.135,331,2.631,332,1.135,333,1.135,334,1.39,335,1.135,336,1.135,337,1.135,338,1.135,339,1.135,340,1.135,341,1.135,342,1.135,343,1.828,344,1.828,345,1.135,346,0.863,347,1.135,348,1.135,349,1.135,350,1.135,351,1.135,352,1.135,353,1.135,354,1.135,355,1.828,356,1.135,357,1.828,358,1.135,359,1.135,360,1.135,361,1.135,362,1.135,363,1.102,364,1.383,365,2.295,366,0.684,367,0.684,368,1.135,369,1.135,722,2.769,723,2.769,724,1.719,725,1.719,726,1.719,727,1.719,728,1.719,729,1.719,730,1.719]],["title/interfaces/FieldConstrianStyle.html",[43,0.332,126,0.921]],["body/interfaces/FieldConstrianStyle.html",[0,0.147,3,0.278,4,0.278,5,0.241,7,0.241,8,0.421,14,1.266,15,0.385,17,0.482,19,0.477,20,0.921,25,0.029,32,1.991,34,0.355,35,0.732,36,0.417,39,1.832,41,0.019,42,0.019,43,0.592,45,1.521,48,1.266,53,1.883,55,1.832,67,0.677,71,1.054,72,1.572,96,1.82,125,1.439,126,1.313,127,1.411,142,0.79,178,2.424,219,1.765,228,0.79,291,1.222,292,1.572,295,1.467,363,2.64,364,2.356,366,1.411,367,1.411,370,1.643,371,2.121,372,2.91,373,2.586,374,3.105,375,1.938,376,1.312,377,2.285,378,1.938,379,2.03,380,3.451,381,2.03,382,2.03,383,2.586,384,1.938,731,4.733]],["title/classes/GroupColumn.html",[0,0.103,99,1.813]],["body/classes/GroupColumn.html",[0,0.136,1,2.339,2,0.476,3,0.134,4,0.216,5,0.117,7,0.117,8,0.246,9,0.448,12,0.953,14,0.382,15,0.296,17,0.375,19,0.448,20,0.563,21,1.255,22,0.974,24,0.57,25,0.029,32,1.859,34,0.573,35,0.354,36,0.342,38,1.652,41,0.011,42,0.011,47,0.937,48,0.615,49,1.185,53,1.462,55,1.194,56,1.571,61,0.59,62,2.384,67,1.033,69,0.821,72,0.442,83,2.548,84,1.025,85,1.132,86,1.132,87,1.132,88,1.132,89,1.099,91,1.132,94,1.369,95,1.076,96,1.687,99,1.896,101,1.132,104,1.099,105,1.283,106,1.824,107,1.132,108,1.132,109,1.132,110,1.824,111,0.767,112,0.682,113,1.099,114,0.861,115,0.511,116,1.824,117,1.025,118,1.824,119,2.291,120,1.025,121,1.824,122,1.025,123,1.824,124,1.025,125,1.136,126,1.104,127,0.824,128,0.861,129,1.608,130,0.861,131,1.099,132,1.022,133,1.132,134,0.682,135,0.682,136,0.735,137,0.682,138,1.132,139,0.682,140,1.132,141,0.634,142,0.382,143,2.104,144,1.824,145,0.861,146,1.132,147,2.174,148,2.022,149,1.132,150,1.896,151,1.132,152,1.132,153,1.132,154,2.075,155,1.132,156,1.132,157,1.132,158,1.132,159,1.132,160,1.132,161,1.132,162,1.132,163,1.132,164,1.132,165,0.735,166,1.132,167,1.132,168,1.132,169,1.132,170,1.132,171,1.132,172,1.132,173,1.132,174,0.682,175,1.132,176,1.132,177,1.824,178,2.242,179,1.132,180,1.824,181,1.132,182,2.291,183,2.291,184,1.132,185,1.132,186,1.132,187,2.191,188,1.132,189,1.132,190,1.132,191,1.132,192,1.132,193,1.132,194,1.132,195,1.132,196,1.132,197,1.132,198,1.132,199,1.824,200,1.132,201,1.132,202,1.132,203,1.132,204,1.132,205,1.132,206,1.132,207,1.132,208,2.291,209,1.824,210,1.824,211,1.824,212,1.824,213,1.824,214,2.627,215,1.824,216,1.387,217,1.824,218,1.824,219,1.301,220,2.627,221,1.824,222,2.627,223,1.824,224,1.132,225,1.132,226,1.132,227,1.132,228,0.615,229,1.132,230,1.132,231,2.291,232,1.132,233,1.132,234,1.132,235,2.191,236,1.132,237,2.291,238,1.387,239,1.132,240,1.824,241,1.824,242,1.025,243,1.132,244,1.132,245,1.132,246,1.132,247,1.132,248,1.132,249,1.132,250,1.652,251,1.132,252,1.132,253,2.88,254,1.132,255,1.132,256,1.132,257,1.132,258,1.132,259,1.132,260,1.824,261,1.132,262,1.132,263,1.132,264,1.387,265,1.824,266,1.824,267,1.132,268,1.132,269,1.132,270,1.132,271,1.132,272,1.132,273,1.824,274,1.132,275,2.291,276,1.132,277,1.132,278,1.132,279,1.132,280,1.132,281,1.824,282,1.132,283,0.937,284,1.132,285,1.132,286,1.132,287,1.025,288,1.998,289,2.291,290,1.132,291,0.442,292,1.027,293,1.132,294,0.861,295,0.896,296,0.861,297,1.132,298,1.387,299,0.861,300,1.132,301,2.291,302,1.132,303,1.132,304,1.132,305,1.132,306,1.132,307,1.132,308,1.132,309,1.132,310,1.824,311,1.132,312,2.627,313,1.132,314,2.291,315,2.291,316,2.88,317,2.291,318,1.132,319,1.132,320,1.132,321,2.291,322,2.291,323,1.132,324,1.132,325,1.132,326,1.824,327,1.132,328,1.132,329,1.132,330,1.132,331,1.132,332,1.132,333,2.291,334,1.998,335,2.291,336,1.824,337,2.627,338,1.132,339,1.132,340,1.132,341,1.132,342,1.132,343,1.824,344,1.824,345,1.132,346,0.861,347,1.132,348,1.132,349,1.132,350,1.132,351,1.132,352,1.824,353,1.132,354,1.132,355,1.824,356,1.132,357,1.824,358,1.132,359,1.132,360,1.132,361,1.132,362,1.132,363,1.099,364,1.381,365,2.291,366,0.682,367,0.682,368,1.132,369,1.132,732,2.763,733,2.763,734,1.714,735,1.714,736,1.714,737,1.714,738,1.714,739,1.714]],["title/components/LitoColorPickerComponent.html",[111,0.921,602,1.423]],["body/components/LitoColorPickerComponent.html",[0,0.124,3,0.218,4,0.218,5,0.189,7,0.189,8,0.356,9,0.759,12,0.824,15,0.337,17,0.542,19,0.475,21,1.042,22,1.157,24,0.573,25,0.029,34,0.468,36,0.366,41,0.016,42,0.016,43,0.278,48,0.619,56,0.889,61,1.374,67,0.977,73,0.889,81,1.394,89,1.59,94,0.955,95,1.189,104,1.59,105,2.004,111,1.419,112,1.105,113,1.862,115,0.828,125,0.89,130,1.394,134,2.368,135,2.448,136,1.191,137,1.862,139,1.862,141,1.027,142,0.89,143,1.191,148,1.374,174,2.036,187,2.006,228,1.139,264,1.394,291,0.717,292,1.207,295,1.207,385,1.191,386,2.389,387,2.637,388,1.833,389,1.833,390,1.833,394,1.661,395,1.661,396,3.251,399,2.795,401,2.182,413,1.517,418,2.182,439,1.517,455,3.177,456,1.517,457,1.517,458,2.961,459,1.517,460,1.394,467,1.661,470,1.191,472,1.517,473,1.517,474,2.795,478,1.517,479,1.517,493,1.517,503,2.912,571,3.241,573,1.833,575,2.389,577,1.833,579,1.833,589,1.833,590,2.637,591,2.637,592,1.833,593,3.377,594,1.833,597,2.637,598,1.833,599,1.713,600,2.006,601,2.389,602,2.194,603,2.797,604,1.833,605,1.833,606,1.833,608,3.363,609,3.363,610,2.339,660,2.389,661,3.678,662,3.36,663,1.661,664,4.29,665,2.947,666,2.511,667,2.947,668,2.947,669,3.774,670,2.049,671,2.049,672,2.049,673,2.049,674,2.049,675,2.049,676,2.049,677,1.661,678,2.049,679,2.049,680,2.049,681,2.049,682,2.049,683,2.947,684,2.049,685,2.049,686,2.049,687,1.661,688,2.049,689,2.049,690,2.049,691,2.049,692,2.049,693,2.049,694,2.049,695,2.049,696,2.049,697,2.049,710,3.363,711,2.339,712,2.339,713,2.339,714,2.339,715,3.363,716,2.339,717,2.339,718,2.339,719,2.339,720,2.339,740,3.995,741,3.995,742,2.778,743,2.778,744,2.778,745,2.778,746,2.778,747,2.778,748,2.778]],["title/classes/LitotableColor.html",[0,0.103,666,1.537]],["body/classes/LitotableColor.html",[0,0.136,2,1.21,3,0.342,4,0.342,5,0.297,7,0.297,8,0.481,9,0.707,12,0.769,15,0.314,17,0.734,19,0.504,21,1.468,22,1.032,24,0.9,25,0.029,36,0.46,41,0.022,42,0.022,43,0.436,66,1.871,69,0.9,71,0.971,73,1.397,75,1.736,95,1.246,129,2.021,216,2.95,666,2.723,677,3.673,749,2.879,750,4.362,751,5.407,752,3.672,753,4.552,754,4.552,755,4.552,756,4.552,757,3.672,758,3.672,759,3.672,760,3.672,761,3.672,762,3.218,763,3.218]],["title/modules/LitotableModule.html",[764,2.794,765,2.19]],["body/modules/LitotableModule.html",[0,0.105,3,0.264,4,0.264,5,0.229,25,0.029,34,0.687,36,0.264,41,0.019,42,0.019,115,1.003,117,2.012,120,2.012,122,2.012,125,0.749,135,1.339,141,2.406,385,2.573,392,2.012,460,1.689,465,2.732,466,2.221,470,2.573,503,1.959,550,2.483,599,2.573,602,2.573,640,3.587,662,1.838,765,4.434,766,2.483,767,3.015,768,2.833,769,2.833,770,2.833,771,3.587,772,3.846,773,2.833,774,3.365,775,4.568,776,4.568,777,4.568,778,4.568,779,2.833,780,3.365,781,3.365,782,4.568,783,4.568,784,4.568,785,3.365,786,3.365,787,4.568,788,3.365,789,4.568,790,3.365,791,4.568,792,3.365,793,4.568,794,4.568,795,3.365,796,4.568,797,4.568,798,4.568,799,3.365,800,4.568,801,3.365,802,4.568,803,3.365,804,4.568,805,3.365,806,4.568,807,4.568,808,3.365,809,4.568,810,4.568,811,3.365,812,4.568,813,4.568,814,3.365,815,3.365,816,4.568,817,3.365,818,4.568,819,3.365,820,4.568,821,4.568,822,3.365,823,4.568,824,3.365,825,4.568,826,3.365,827,3.365]],["title/classes/NumberConstrain.html",[0,0.103,461,1.813]],["body/classes/NumberConstrain.html",[0,0.162,2,0.939,3,0.265,4,0.265,5,0.23,7,0.23,8,0.408,9,0.548,12,0.596,14,0.753,15,0.378,17,0.623,19,0.359,20,0.743,21,1.338,22,1.147,24,0.698,25,0.029,32,2.051,34,0.338,35,0.698,36,0.407,39,1.789,41,0.019,42,0.019,43,0.558,48,0.753,53,1.863,55,2.067,67,0.646,68,2.233,70,2.233,71,1.021,72,1.55,94,1.164,95,0.646,96,1.785,125,1.338,126,0.939,127,1.737,142,1.021,178,2.391,219,1.888,228,0.753,291,1.183,292,1.55,295,1.439,363,2.623,364,2.521,366,1.346,367,1.346,370,1.567,371,2.023,372,3.183,373,1.848,374,1.848,375,2.505,376,1.251,377,2.635,378,1.848,379,1.966,380,3.414,381,1.966,382,1.966,383,2.505,384,1.848,461,1.848,631,1.698,828,3.383,829,3.383,830,3.383,831,4.584,832,3.383,833,3.383,834,3.383,835,3.383]],["title/classes/Operation.html",[0,0.103,620,1.666]],["body/classes/Operation.html",[0,0.19,2,1.196,3,0.338,4,0.338,5,0.293,7,0.293,8,0.478,9,0.699,12,0.76,14,0.96,15,0.382,17,0.729,19,0.338,20,0.87,22,1.025,24,0.89,25,0.029,34,0.537,35,0.89,36,0.493,39,1.483,41,0.022,42,0.022,43,0.431,66,1.849,69,0.89,71,0.96,73,1.38,75,1.715,131,2.553,132,1.594,165,2.302,464,1.997,551,2.164,617,2.164,618,2.164,619,3.21,620,3.221,621,3.21,622,2.578,623,2.934,627,2.578,628,2.578,629,2.578,630,2.578,631,2.695,632,2.578,633,2.578,634,2.164,635,2.578,636,2.355,637,2.355,638,2.355,836,5.367]],["title/interfaces/OperationField.html",[43,0.332,623,1.666]],["body/interfaces/OperationField.html",[0,0.19,3,0.337,4,0.337,5,0.292,7,0.292,8,0.477,9,0.868,14,1.361,15,0.385,17,0.583,19,0.457,20,0.991,25,0.029,34,0.536,35,0.887,36,0.492,39,1.478,41,0.022,42,0.022,43,0.43,45,1.843,66,1.843,69,0.887,71,0.957,73,1.375,75,1.709,131,2.322,132,1.589,165,2.297,464,2.831,551,2.157,617,2.157,618,2.157,619,3.203,620,3.156,621,3.203,622,2.569,623,3.067,627,2.569,628,2.569,629,2.569,630,2.569,631,2.157,632,2.569,633,2.569,634,2.157,635,2.569,636,2.347,637,2.347,638,2.347]],["title/pipes/PhonePipe.html",[639,1.984,771,1.984]],["body/pipes/PhonePipe.html",[0,0.138,3,0.347,4,0.347,5,0.301,9,0.718,11,4.187,12,1.043,15,0.257,19,0.497,21,1.318,22,0.846,24,0.914,25,0.029,34,0.443,36,0.347,41,0.022,42,0.022,48,0.986,53,1.627,56,1.418,67,1.042,69,0.914,78,3.603,89,1.763,95,0.846,104,1.763,115,1.32,142,0.986,219,1.32,228,1.216,639,3.264,641,3.268,643,3.729,644,4.596,647,4.596,648,3.729,653,3.729,771,3.264,837,3.729,838,4.429,839,4.429,840,5.459,841,4.429,842,4.429,843,5.917,844,5.917,845,4.429,846,4.429]],["title/classes/RowConstrain.html",[0,0.103,150,1.813]],["body/classes/RowConstrain.html",[0,0.137,1,2.252,2,0.483,3,0.136,4,0.219,5,0.119,7,0.119,8,0.249,9,0.283,12,0.933,14,0.388,15,0.287,17,0.38,19,0.45,20,0.569,21,1.18,22,0.897,24,0.36,25,0.029,32,1.927,34,0.575,35,0.36,36,0.345,38,1.674,41,0.011,42,0.011,47,0.952,48,0.623,49,1.2,51,1.674,53,1.472,55,1.616,56,1.581,61,0.599,62,2.404,67,0.98,69,0.724,72,0.45,83,2.567,84,1.042,85,1.15,86,1.15,87,1.15,88,1.15,91,1.15,95,0.98,96,1.696,99,1.529,101,1.15,105,1.035,106,1.848,107,1.15,108,1.15,109,1.15,110,1.848,111,0.777,112,0.693,113,1.114,114,0.875,115,0.519,116,1.848,117,1.042,118,1.848,119,2.316,120,1.042,121,1.848,122,1.042,123,1.848,124,1.042,125,1.314,126,1.114,127,0.834,128,0.875,129,1.625,130,0.875,131,1.114,132,1.035,133,1.15,134,0.693,135,0.693,136,0.747,137,0.693,138,1.15,139,0.693,140,1.15,141,0.644,142,0.388,143,1.887,144,1.848,145,0.875,146,1.15,147,2.194,148,2.029,149,1.15,150,2.194,151,1.15,152,1.15,153,1.15,154,2.098,155,1.15,156,1.15,157,1.15,158,1.15,159,1.15,160,1.15,161,1.15,162,1.15,163,1.15,164,1.15,165,0.747,166,1.15,167,1.15,168,1.15,169,1.15,170,1.15,171,1.15,172,1.15,173,1.15,174,0.693,175,1.15,176,1.15,177,1.848,178,2.252,179,1.15,180,1.848,181,1.15,182,2.316,183,2.316,184,1.15,185,1.15,186,1.15,187,2.017,188,1.15,189,1.15,190,1.15,191,1.15,192,1.15,193,1.15,194,1.15,195,1.15,196,1.15,197,1.15,198,1.15,199,1.848,200,1.15,201,1.15,202,1.15,203,1.15,204,1.15,205,1.15,206,1.15,207,1.15,208,2.316,209,1.848,210,1.848,211,1.848,212,1.848,213,1.848,214,2.651,215,1.848,216,1.405,217,1.848,218,1.848,219,1.579,220,2.651,221,1.848,222,2.651,223,1.848,224,1.15,225,1.15,226,1.15,227,1.15,228,0.623,229,1.15,230,1.15,231,2.316,232,1.15,233,1.15,234,1.15,235,2.209,236,1.15,237,2.316,238,1.405,239,1.15,240,1.848,241,1.848,242,1.042,243,1.15,244,1.15,245,1.15,246,1.15,247,1.15,248,1.15,249,1.15,250,1.674,251,1.15,252,1.15,253,2.904,254,1.15,255,1.15,256,1.15,257,1.15,258,1.15,259,1.15,260,1.848,261,1.15,262,1.15,263,1.15,264,1.405,265,1.848,266,1.848,267,1.15,268,1.15,269,1.15,270,1.15,271,1.15,272,1.15,273,1.848,274,1.15,275,2.316,276,1.15,277,1.15,278,1.15,279,1.15,280,1.15,281,1.848,282,1.15,283,0.952,284,1.15,285,1.15,286,1.15,287,1.042,288,2.017,289,2.316,290,1.15,291,0.45,292,1.037,293,1.15,294,0.875,295,0.905,296,0.875,297,1.15,298,1.405,299,0.875,300,1.15,301,2.316,302,1.15,303,1.15,304,1.15,305,1.15,306,1.15,307,1.15,308,1.15,309,1.15,310,1.848,311,1.15,312,2.651,313,1.15,314,2.316,315,2.316,316,2.904,317,2.316,318,1.15,319,1.15,320,1.15,321,2.316,322,2.316,323,1.15,324,1.15,325,1.15,326,1.848,327,1.15,328,1.15,329,1.15,330,1.15,331,1.15,332,1.15,333,1.15,334,1.405,335,1.15,336,1.848,337,1.15,338,1.15,339,1.15,340,1.15,341,1.15,342,1.15,343,1.848,344,1.848,345,1.15,346,0.875,347,1.15,348,1.15,349,1.15,350,1.15,351,1.15,352,1.15,353,1.15,354,1.15,355,1.848,356,1.15,357,1.848,358,1.15,359,1.15,360,1.15,361,1.15,362,1.15,363,1.396,364,1.965,365,3.259,366,0.693,367,0.693,368,1.15,369,1.15,847,2.799,848,1.742,849,1.742,850,1.742,851,1.742]],["title/classes/StringConstrain.html",[0,0.103,462,1.813]],["body/classes/StringConstrain.html",[0,0.16,2,0.916,3,0.259,4,0.259,5,0.224,7,0.224,8,0.401,9,0.731,12,0.794,14,0.735,15,0.37,17,0.612,19,0.402,20,0.731,22,1.186,24,0.93,25,0.029,32,2.091,34,0.33,35,0.681,36,0.402,39,1.766,41,0.018,42,0.018,43,0.552,48,0.735,53,1.852,55,2.051,67,0.63,71,1.004,72,1.539,89,1.794,94,1.551,95,0.861,96,1.767,104,1.794,105,1.667,125,1.328,126,0.916,127,1.344,142,1.004,178,2.373,219,1.852,228,0.735,291,1.163,292,1.539,295,1.424,363,2.614,364,2.508,366,1.313,367,1.313,370,1.529,371,1.973,372,3.156,373,1.803,374,1.803,375,2.463,376,1.22,377,2.202,378,1.803,379,1.933,380,3.395,381,1.933,382,1.933,383,2.463,384,1.803,462,2.463,463,2.578,852,4.508,853,4.508,854,4.508,855,5.134,856,3.3,857,4.508,858,4.508,859,3.3,860,3.3,861,3.3,862,3.3,863,3.3,864,3.3,865,3.3]],["title/interfaces/StringConstrainObject.html",[43,0.332,463,1.666]],["body/interfaces/StringConstrainObject.html",[0,0.151,3,0.288,4,0.288,5,0.25,7,0.25,8,0.432,14,0.819,15,0.374,17,0.5,19,0.452,20,0.786,25,0.029,32,2.009,34,0.368,35,0.759,36,0.425,39,1.866,41,0.02,42,0.02,43,0.577,45,1.578,48,0.819,53,1.898,55,1.866,67,0.702,71,1.08,72,1.588,95,1.036,96,1.846,125,1.335,126,1.021,127,1.445,142,0.819,178,2.449,219,1.786,228,0.819,291,1.252,292,1.588,295,1.488,363,2.653,364,2.385,366,1.464,367,1.464,370,1.705,372,2.963,373,2.01,374,2.01,375,2.01,376,1.36,377,2.326,378,2.01,379,2.08,380,3.479,381,2.08,382,2.08,383,2.649,384,2.01,406,2.9,463,1.847]],["title/interfaces/TableColumnMetadata.html",[43,0.332,49,1.423]],["body/interfaces/TableColumnMetadata.html",[3,0.307,4,0.307,5,0.266,7,0.266,8,0.449,9,1.08,10,4.357,11,3.898,12,0.69,13,4.357,14,1.245,15,0.384,16,4.357,19,0.511,20,0.958,21,1.245,25,0.029,26,3.898,32,1.79,34,0.392,36,0.479,41,0.021,42,0.021,43,0.505,44,4.259,45,1.679,46,2.341,47,2.139,48,1.125,49,2.398,50,4.972,51,2.341,52,2.889,53,1.167,54,4.706,55,1.347,56,1.617,57,4.252,58,3.296,59,3.296,60,2.889,61,1.737,62,2.139,63,3.296,64,3.296,65,3.296,66,2.166,67,0.748,68,2.584,69,1.042,70,2.584,71,1.125,72,1.01,73,1.617,74,2.889,75,1.558,76,2.584,77,2.584,78,2.584,79,2.889,80,2.889,81,1.966,82,2.889]],["title/interfaces/TableConfigurations.html",[43,0.332,129,1.537]],["body/interfaces/TableConfigurations.html",[0,0.133,3,0.334,4,0.334,5,0.29,7,0.29,8,0.475,9,1.064,15,0.354,17,0.579,19,0.456,21,1.485,25,0.029,36,0.456,41,0.022,42,0.022,43,0.427,45,1.83,66,1.83,69,0.881,71,0.95,73,1.366,75,1.698,95,1.164,129,2.471,216,3.26,666,2.824,677,3.645,749,2.817,752,3.593,753,4.491,754,4.491,755,4.491,756,4.491,757,3.593,758,5.132,759,5.132,760,5.132,761,5.132,762,3.149,763,3.149]],["title/classes/TableOperationConfig.html",[0,0.103,132,1.227]],["body/classes/TableOperationConfig.html",[0,0.19,2,1.196,3,0.338,4,0.338,5,0.293,7,0.293,8,0.478,9,0.699,12,0.76,14,0.96,15,0.365,17,0.729,19,0.338,20,0.87,22,1.025,24,0.89,25,0.029,34,0.537,35,0.89,36,0.493,39,1.483,41,0.022,42,0.022,43,0.431,66,1.849,69,0.89,71,0.96,73,1.38,75,1.715,131,2.326,132,1.985,165,2.699,464,1.997,551,2.164,617,2.164,618,2.164,619,3.21,620,3.302,621,3.21,622,2.578,623,2.934,627,2.578,628,2.578,629,3.21,630,2.578,631,2.164,632,2.578,633,2.578,634,2.164,635,2.578,636,2.355,637,2.355,638,2.355,866,5.367]],["title/coverage.html",[867,3.81]],["body/coverage.html",[0,0.208,1,1.475,5,0.252,6,3.12,15,0.215,25,0.028,41,0.02,42,0.02,43,0.638,44,2.446,46,3.255,49,1.589,51,2.216,67,1.311,83,2.024,84,3.592,99,2.024,111,1.667,125,0.825,126,1.028,129,1.717,132,1.37,136,1.589,141,1.37,147,2.024,148,1.275,150,2.024,370,2.857,376,1.37,385,1.589,391,3.593,392,3.255,393,3.593,419,2.216,461,2.024,462,2.024,463,1.86,470,1.589,503,2.736,599,1.589,602,1.589,617,1.86,618,3.016,620,1.86,623,1.86,634,1.86,639,2.914,640,2.216,642,3.12,660,2.216,661,3.458,662,3.159,663,3.458,666,1.717,687,2.216,749,3.216,771,2.216,837,3.12,867,3.12,868,3.706,869,3.706,870,3.706,871,4.872,872,4.102,873,4.872,874,3.706,875,3.706,876,3.706,877,3.706,878,3.706,879,3.706,880,6.007,881,3.706,882,5.443,883,3.706,884,5.443,885,4.872,886,3.706,887,3.12,888,5.782,889,3.706,890,4.872,891,3.706,892,3.706,893,3.706]],["title/dependencies.html",[767,2.634,894,2.334]],["body/dependencies.html",[25,0.028,41,0.024,42,0.024,115,1.476,124,2.961,465,2.961,767,3.269,779,4.169,895,4.952,896,6.743,897,4.952,898,5.838,899,4.952,900,4.952,901,5.838,902,4.915,903,4.952,904,4.952,905,4.952,906,4.952,907,4.952,908,4.952,909,4.952]],["title/miscellaneous/enumerations.html",[910,1.515,911,3.359]],["body/miscellaneous/enumerations.html",[7,0.294,19,0.339,20,0.872,25,0.028,26,3.55,41,0.022,42,0.022,46,2.586,68,2.855,69,1.325,70,2.855,71,1.43,72,1.116,73,2.017,74,3.191,75,2.329,76,2.855,77,3.55,78,2.855,79,3.191,80,3.191,81,2.171,82,3.191,95,1.321,127,1.603,131,2.14,216,2.7,370,2.004,406,3.216,523,2.855,551,2.171,558,3.641,618,2.171,636,2.363,637,2.363,638,2.363,749,2.855,762,3.191,763,3.191,910,2.363,911,3.641,912,4.528,913,5.378,914,4.325,915,4.325,916,4.325,917,4.325,918,4.325,919,4.325,920,4.325,921,4.325]],["title/miscellaneous/functions.html",[910,1.515,922,3.359]],["body/miscellaneous/functions.html",[7,0.355,9,0.847,12,0.921,15,0.303,24,1.078,25,0.026,41,0.025,42,0.025,46,3.124,49,2.583,52,3.855,60,3.855,887,5.071,910,2.854,912,4.399,922,4.399]],["title/index.html",[7,0.226,600,1.666]],["body/index.html",[2,1.306,25,0.028,41,0.023,42,0.023,45,2.019,69,0.971,71,1.048,77,3.106,141,2.451,385,2.606,386,2.814,470,2.606,550,3.472,599,2.606,600,2.363,602,2.606,640,3.633,641,3.472,764,3.962,765,4.557,767,3.739,768,3.962,769,3.962,770,3.962,771,3.633,772,4.769,773,3.962,872,3.962,923,4.706]],["title/modules.html",[766,3.339]],["body/modules.html",[25,0.025,41,0.025,42,0.025,765,3.52,766,3.935,902,4.49,924,5.333,925,5.333,926,5.333]],["title/properties.html",[8,0.355,894,2.334]],["body/properties.html",[8,0.477,25,0.026,41,0.025,42,0.025,927,5.355,928,5.355]],["title/miscellaneous/variables.html",[910,1.515,929,3.359]],["body/miscellaneous/variables.html",[7,0.266,15,0.227,25,0.026,41,0.021,42,0.021,94,1.345,95,0.746,148,2.421,503,2.396,661,2.338,662,2.136,663,3.017,666,1.811,687,3.017,910,2.136,929,3.291,930,3.909,931,3.909,932,3.909,933,3.909,934,3.909,935,3.909,936,3.909,937,3.909,938,3.909,939,3.909,940,3.909,941,3.909,942,3.909,943,3.909,944,3.909,945,3.909,946,3.909,947,3.909,948,3.909,949,3.909,950,3.909,951,3.909,952,3.909,953,3.909,954,3.909,955,3.909,956,3.909,957,3.909,958,3.909,959,3.909,960,3.909,961,3.909,962,3.909,963,3.909,964,3.909,965,3.909,966,3.909,967,3.909,968,3.909,969,3.909,970,3.909,971,3.909,972,3.909,973,3.909,974,3.909,975,3.909,976,3.909,977,3.909,978,3.909,979,3.909,980,3.909,981,3.909,982,3.909,983,3.909,984,3.909,985,3.909,986,3.909,987,3.909,988,3.909,989,3.909,990,3.909,991,3.909,992,3.909,993,3.909,994,3.909,995,3.909,996,3.909,997,3.909,998,3.909,999,3.909,1000,3.909,1001,3.909,1002,3.909,1003,3.909,1004,3.909,1005,3.909,1006,3.909,1007,3.909,1008,3.909,1009,3.909,1010,3.909]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":67,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{}}}],["0.0.0",{"_index":928,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":69,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/LitotableColor.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.5rem",{"_index":711,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["1/4",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":651,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["100",{"_index":576,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["11",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["12.2.0",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["12.2.13",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":872,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["16",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["1fr",{"_index":717,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["1rem",{"_index":581,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["2",{"_index":71,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["2.3.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["222",{"_index":685,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["25",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":683,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["3",{"_index":73,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["380px",{"_index":675,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["4",{"_index":75,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/LitotableColor.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["5",{"_index":77,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["6",{"_index":79,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["6.6.0",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["76",{"_index":714,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["8",{"_index":923,"title":{},"body":{"index.html":{}}}],["80vh",{"_index":477,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["888",{"_index":506,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["_constrain",{"_index":365,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["_format",{"_index":840,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["_format.length",{"_index":842,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["_format[i",{"_index":843,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["_formbuilder",{"_index":420,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["_liveannouncer",{"_index":173,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["a.end",{"_index":344,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["a.order",{"_index":265,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["a.start",{"_index":342,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["active",{"_index":85,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["actual_component",{"_index":606,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["addcolumn",{"_index":732,"title":{},"body":{"classes/GroupColumn.html":{}}}],["addcolumn(c",{"_index":352,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["addcolumn(column",{"_index":262,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["addconstrain",{"_index":854,"title":{},"body":{"classes/StringConstrain.html":{}}}],["addconstrain($event",{"_index":302,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["addconstrain(stringconstrain",{"_index":863,"title":{},"body":{"classes/StringConstrain.html":{}}}],["afterviewinit",{"_index":110,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["align",{"_index":583,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["allvisible",{"_index":331,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["angular/animations",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":107,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["angular/cdk/collections",{"_index":109,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["angular/common",{"_index":779,"title":{},"body":{"modules/LitotableModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":628,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["angular/core",{"_index":115,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":465,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"modules/LitotableModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":797,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/card",{"_index":801,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/checkbox",{"_index":790,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/core",{"_index":826,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/datepicker",{"_index":824,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/dialog",{"_index":460,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{}}}],["angular/material/expansion",{"_index":466,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"modules/LitotableModule.html":{}}}],["angular/material/icon",{"_index":799,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/input",{"_index":803,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/menu",{"_index":795,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/paginator",{"_index":117,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["angular/material/progress",{"_index":785,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/radio",{"_index":805,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/select",{"_index":817,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/slide",{"_index":792,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/slider",{"_index":814,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/sort",{"_index":120,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["angular/material/stepper",{"_index":819,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/table",{"_index":122,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["angular/material/tabs",{"_index":811,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/tooltip",{"_index":822,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/platform",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["announcesortchange(sortstate",{"_index":192,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["aply",{"_index":546,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["app",{"_index":603,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["arr",{"_index":673,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["array(length).fill('empty",{"_index":356,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["array(visiblecolumns.length).fill('empty",{"_index":358,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["array.from(format",{"_index":841,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["auto",{"_index":712,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["b",{"_index":264,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["b.order",{"_index":266,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["back",{"_index":547,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["background",{"_index":505,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["bar",{"_index":786,"title":{},"body":{"modules/LitotableModule.html":{}}}],["before",{"_index":526,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["between",{"_index":523,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":32,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{}}}],["border",{"_index":762,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"miscellaneous/enumerations.html":{}}}],["bottom",{"_index":580,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["break",{"_index":295,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["browse",{"_index":926,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":902,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["c",{"_index":187,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.columngroup?.name",{"_index":251,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.columnname",{"_index":243,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.contentalign",{"_index":249,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.format",{"_index":247,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.order",{"_index":239,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.type",{"_index":245,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.visible",{"_index":241,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.order",{"_index":343,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.propertykey",{"_index":237,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.visible",{"_index":316,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["case",{"_index":292,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["casesense",{"_index":857,"title":{},"body":{"classes/StringConstrain.html":{}}}],["casesensitive",{"_index":852,"title":{},"body":{"classes/StringConstrain.html":{}}}],["center",{"_index":81,"title":{},"body":{"interfaces/ColumnGroup.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["changecolumnvisivility",{"_index":722,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["changecolumnvisivility(column",{"_index":325,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["changeconstrainstate",{"_index":287,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["changeconstrainstate(value",{"_index":423,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["changeconstrainstyle",{"_index":409,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["changeconstrainstyle(value",{"_index":425,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["changenewcolorvalue",{"_index":698,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["changenewcolorvalue(color",{"_index":688,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["choose",{"_index":561,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["circle",{"_index":709,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["class",{"_index":0,"title":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"classes/ConstrainCreationFormData.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"classes/TableOperationConfig.html":{}},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"classes/ConstrainCreationFormData.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"classes/TableOperationConfig.html":{},"index.html":{}}}],["clearconstrains",{"_index":855,"title":{},"body":{"classes/StringConstrain.html":{}}}],["cleared",{"_index":197,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["closedialog",{"_index":410,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["cluster_litotablemodule",{"_index":768,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}],["cluster_litotablemodule_declarations",{"_index":770,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}],["cluster_litotablemodule_exports",{"_index":769,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}],["color",{"_index":503,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":664,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["colspan",{"_index":335,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column",{"_index":1,"title":{"classes/Column.html":{}},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["column)[0].visible",{"_index":327,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.contentalign",{"_index":248,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.format",{"_index":246,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.name",{"_index":242,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.type",{"_index":244,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.visible",{"_index":240,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columncontentalignment",{"_index":26,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["columngroup",{"_index":44,"title":{"interfaces/ColumnGroup.html":{}},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{}}}],["columngroups",{"_index":83,"title":{"classes/ColumnGroups.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["columngroups(0",{"_index":234,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columngroups(columns.length",{"_index":324,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columngroups.groupcolumns",{"_index":259,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columngroups.groupcolumns.filter((x",{"_index":252,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columngroups.groupcolumns.push(newcolgroup",{"_index":258,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columnmetadata",{"_index":60,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/functions.html":{}}}],["columnname",{"_index":50,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["columnnames",{"_index":311,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columns",{"_index":143,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["columns.map((x",{"_index":319,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columnsmetadata",{"_index":231,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columnsmetadata.map",{"_index":236,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columntype",{"_index":20,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["columntype.cuit",{"_index":508,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.currency",{"_index":518,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.date",{"_index":500,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.float",{"_index":516,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.integer",{"_index":515,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.phone",{"_index":507,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.string",{"_index":238,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columntypes",{"_index":144,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["commonmodule",{"_index":778,"title":{},"body":{"modules/LitotableModule.html":{}}}],["component",{"_index":111,"title":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["component_template",{"_index":594,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["components",{"_index":386,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"index.html":{}}}],["configurable",{"_index":217,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["configuration",{"_index":373,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["configurations/fieldconstriansstyle",{"_index":128,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["configurations/litotable.config",{"_index":130,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["configurations/tablecrud.config",{"_index":133,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["console.log(this.fieldconstrain.constrain",{"_index":543,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["const",{"_index":56,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{}}}],["constrain",{"_index":125,"title":{"interfaces/Constrain.html":{}},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{}}}],["constrainarray",{"_index":853,"title":{},"body":{"classes/StringConstrain.html":{}}}],["constraincreationform",{"_index":385,"title":{"components/ConstrainCreationForm.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["constraincreationformdata",{"_index":419,"title":{"classes/ConstrainCreationFormData.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"coverage.html":{}}}],["constraincreatorcomponent",{"_index":470,"title":{"components/ConstrainCreatorComponent.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["constrainedrows",{"_index":155,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constrainname",{"_index":374,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["constrains",{"_index":375,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["constructor(columns",{"_index":313,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constructor(dialog",{"_index":610,"title":{},"body":{"components/ConstrainCreatorComponent.html":{},"components/LitoColorPickerComponent.html":{}}}],["constructor(dialogref",{"_index":417,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/DialogColorPicker.html":{}}}],["constructor(fields",{"_index":622,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["constructor(length",{"_index":91,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constructor(name",{"_index":336,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constructor(operations",{"_index":629,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["constructor(private",{"_index":172,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constructor(propertykey",{"_index":18,"title":{},"body":{"classes/Column.html":{}}}],["constructor(public",{"_index":473,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["constructor(style",{"_index":856,"title":{},"body":{"classes/StringConstrain.html":{}}}],["constructor(type",{"_index":631,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["constructor(value",{"_index":750,"title":{},"body":{"classes/LitotableColor.html":{}}}],["container",{"_index":710,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["contains",{"_index":921,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["content",{"_index":571,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["contentalign",{"_index":10,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["count",{"_index":333,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["coverage",{"_index":867,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":551,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["createoperationconfig",{"_index":617,"title":{"classes/CreateOperationConfig.html":{}},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["creation",{"_index":394,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["creationformopen",{"_index":157,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["creator",{"_index":468,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["creator'},{'name",{"_index":598,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["creator.component",{"_index":815,"title":{},"body":{"modules/LitotableModule.html":{}}}],["creator.component.css",{"_index":397,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["creator.component.html",{"_index":469,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts",{"_index":393,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"coverage.html":{}}}],["creator.component.ts:107",{"_index":433,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:111",{"_index":431,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:142",{"_index":426,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:148",{"_index":424,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:172",{"_index":428,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:280",{"_index":436,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:288",{"_index":434,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:311",{"_index":437,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:340",{"_index":427,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:36",{"_index":607,"title":{},"body":{"classes/ConstrainCreationFormData.html":{}}}],["creator.component.ts:45",{"_index":612,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:46",{"_index":613,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:47",{"_index":611,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:49",{"_index":616,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:51",{"_index":614,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:53",{"_index":615,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:71",{"_index":446,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:72",{"_index":453,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:73",{"_index":445,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:74",{"_index":448,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:75",{"_index":452,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:76",{"_index":447,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:77",{"_index":454,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:78",{"_index":451,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:80",{"_index":443,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:83",{"_index":422,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:85",{"_index":444,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:86",{"_index":440,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:90",{"_index":429,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator/constrain",{"_index":392,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{}}}],["cuit",{"_index":76,"title":{},"body":{"interfaces/ColumnGroup.html":{},"pipes/CuitPipe.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["cuitpipe",{"_index":640,"title":{"pipes/CuitPipe.html":{}},"body":{"pipes/CuitPipe.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["currency",{"_index":74,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["cursor",{"_index":719,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["data",{"_index":61,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{}}}],["data.push(...prevdata",{"_index":63,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["data.push(newdata",{"_index":64,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["data.style[field",{"_index":290,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["data.title?data.title:'colors",{"_index":708,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["data.title?data.title:\\'colors",{"_index":721,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["data.type",{"_index":293,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["data.values[0",{"_index":297,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["data.values[1",{"_index":300,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["datasource",{"_index":151,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["datatype",{"_index":163,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["date",{"_index":72,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["date(value.value",{"_index":513,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["dateconstrain",{"_index":376,"title":{"classes/DateConstrain.html":{}},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{}}}],["daterange",{"_index":400,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["decimal",{"_index":829,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["declarations",{"_index":775,"title":{},"body":{"modules/LitotableModule.html":{}}}],["decorators",{"_index":438,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/DialogColorPicker.html":{}}}],["decorators/column.decorator",{"_index":35,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"classes/TableOperationConfig.html":{}}}],["default",{"_index":94,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"classes/TableOperationConfig.html":{}}}],["delete",{"_index":637,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["deleteoperationconfig",{"_index":634,"title":{"classes/DeleteOperationConfig.html":{}},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["dependencies",{"_index":767,"title":{"dependencies.html":{}},"body":{"modules/LitotableModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":371,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{}}}],["dialog",{"_index":396,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["dialog'},{'name",{"_index":597,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["dialogcolordata",{"_index":660,"title":{"interfaces/DialogColorData.html":{}},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"coverage.html":{}}}],["dialogcolorpicker",{"_index":599,"title":{"components/DialogColorPicker.html":{}},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["dialogref",{"_index":401,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":478,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["direction",{"_index":582,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["directive",{"_index":592,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["directives",{"_index":605,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["display",{"_index":573,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["displayedcolumns",{"_index":147,"title":{"classes/DisplayedColumns.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["displayedcolumns(this.columns",{"_index":268,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["displaynames",{"_index":86,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["documentation",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":389,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["done",{"_index":548,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["drag_handle",{"_index":553,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["dual",{"_index":572,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["dynamic",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":363,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["e.tostring",{"_index":384,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["eee",{"_index":504,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["element",{"_index":591,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["element['rowstyle",{"_index":214,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["element['rowstyle'].style",{"_index":222,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["element[rc.name",{"_index":211,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["enable",{"_index":364,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["end",{"_index":346,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["ends",{"_index":596,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["endswith",{"_index":489,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["endswithtoogle",{"_index":490,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["endwith",{"_index":920,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum",{"_index":66,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/LitotableColor.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["enumerable",{"_index":218,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["enumerations",{"_index":911,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":519,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["equals",{"_index":558,"title":{},"body":{"components/ConstrainCreationForm.html":{},"miscellaneous/enumerations.html":{}}}],["etc",{"_index":830,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["eventemitter",{"_index":455,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["ewinput.value",{"_index":569,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["example",{"_index":601,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["expand_less",{"_index":554,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["expand_more",{"_index":555,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["exports",{"_index":776,"title":{},"body":{"modules/LitotableModule.html":{}}}],["extends",{"_index":619,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["false",{"_index":96,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["fetching",{"_index":152,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["fgc",{"_index":684,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["field",{"_index":288,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["fieldconstrain",{"_index":402,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["fieldconstrain.constrain.type",{"_index":559,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["fieldconstrain.constrainname",{"_index":549,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["fieldconstrians",{"_index":170,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["fieldconstrianstyle",{"_index":126,"title":{"interfaces/FieldConstrianStyle.html":{}},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{}}}],["fieldformgroup",{"_index":403,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["fields",{"_index":621,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["filter((c",{"_index":315,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["filter((x",{"_index":260,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["finalstring",{"_index":404,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["flex",{"_index":574,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["float",{"_index":70,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/NumberConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["form",{"_index":395,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["form.component.html",{"_index":398,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["format",{"_index":11,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"pipes/PhonePipe.html":{},"interfaces/TableColumnMetadata.html":{}}}],["formbuilder",{"_index":421,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["formcontrol",{"_index":442,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["formgroup",{"_index":441,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["formsmodule",{"_index":812,"title":{},"body":{"modules/LitotableModule.html":{}}}],["function",{"_index":51,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{}}}],["functions",{"_index":922,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":691,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["gc.columns.includes(element",{"_index":359,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["gc.name",{"_index":362,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["gc.updatecolspan",{"_index":360,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["getfinaltext",{"_index":411,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["grid",{"_index":715,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["group",{"_index":357,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupcolumn",{"_index":99,"title":{"classes/GroupColumn.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["groupcolumn(str",{"_index":256,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupcolumns",{"_index":87,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupdata",{"_index":338,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupdata.start",{"_index":351,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["grow",{"_index":585,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["hasconstrain(propertykey",{"_index":227,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["height",{"_index":587,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["hoverstyle",{"_index":759,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["html",{"_index":590,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["identifier",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":142,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"classes/TableOperationConfig.html":{}}}],["important",{"_index":713,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["imports",{"_index":827,"title":{},"body":{"modules/LitotableModule.html":{}}}],["includes",{"_index":487,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["includestoogle",{"_index":488,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinity",{"_index":345,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["inherited",{"_index":625,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{}}}],["initial",{"_index":588,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["inject",{"_index":456,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["inject(mat_dialog_data",{"_index":439,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["input",{"_index":112,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["input('colors",{"_index":670,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["input('columns",{"_index":471,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["input('configurations",{"_index":168,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('content",{"_index":671,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["input('fieldconstrians",{"_index":169,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('operations",{"_index":164,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('selection",{"_index":166,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('source",{"_index":160,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('type",{"_index":162,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input.tojson",{"_index":190,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["inputs",{"_index":608,"title":{},"body":{"components/ConstrainCreatorComponent.html":{},"components/LitoColorPickerComponent.html":{}}}],["inputsource",{"_index":161,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["integer",{"_index":68,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/NumberConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["interface",{"_index":43,"title":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"interfaces/DialogColorData.html":{},"interfaces/FieldConstrianStyle.html":{},"interfaces/OperationField.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{}},"body":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"interfaces/FieldConstrianStyle.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":45,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"interfaces/DialogColorData.html":{},"interfaces/FieldConstrianStyle.html":{},"interfaces/OperationField.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"index.html":{}}}],["isallselected",{"_index":272,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["isstyle",{"_index":289,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["items",{"_index":584,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["justify",{"_index":577,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["left",{"_index":80,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":589,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["length",{"_index":93,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["less",{"_index":522,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["lessthan",{"_index":917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["literal",{"_index":731,"title":{},"body":{"interfaces/FieldConstrianStyle.html":{}}}],["lito",{"_index":135,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["litocolorpickercomponent",{"_index":602,"title":{"components/LitoColorPickerComponent.html":{}},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["litotable",{"_index":467,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["litotable.component",{"_index":781,"title":{},"body":{"modules/LitotableModule.html":{}}}],["litotable.component.css",{"_index":140,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["litotable.component.html",{"_index":138,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["litotablecolor",{"_index":666,"title":{"classes/LitotableColor.html":{}},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["litotablecolor('#000000",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#0000ff",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#00ff00",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#00ffff",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#073763",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#0b5394",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#0c343d",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#1155cc",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#134f5c",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#1c4587",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#20124d",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#274e13",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#351c75",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#38761d",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#3c78d8",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#3d85c6",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#434343",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#45818e",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#4a86e8",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#4c1130",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#5b0f00",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#660000",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#666666",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#674ea7",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#6aa84f",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#6d9eeb",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#6fa8dc",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#741b47",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#76a5af",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#783f04",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#7f6000",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#85200c",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#8e7cc3",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#93c47d",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#980000",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#990000",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#9900ff",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#999999",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#9fc5e8",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#a2c4c9",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#a4c2f4",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#a61c00",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#a64d79",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#b45f06",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#b4a7d6",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#b6d7a8",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#b7b7b7",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#bf9000",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#c27ba0",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#c9daf8",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#cc0000",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#cc4125",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#cccccc",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#cfe2f3",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d0e0e3",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d5a6bd",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d9d2e9",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d9d9d9",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d9ead3",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#dd7e6b",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#e06666",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#e69138",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#e6b8af",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ea9999",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ead1dc",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#efefef",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f1c232",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f3f3f3",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f4cccc",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f6b26b",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f9cb9c",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#fce5cd",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ff0000",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ff00ff",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ff9900",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ffd966",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ffe599",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#fff2cc",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ffff00",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ffffff",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecomponent",{"_index":141,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{},"coverage.html":{},"index.html":{}}}],["litotablemodule",{"_index":765,"title":{"modules/LitotableModule.html":{}},"body":{"modules/LitotableModule.html":{},"index.html":{},"modules.html":{}}}],["liveannouncer",{"_index":106,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["main_colors",{"_index":687,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maincolors",{"_index":686,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["map((x",{"_index":317,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["margin",{"_index":579,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["mastertoggle",{"_index":277,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mat",{"_index":570,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["mat_dialog_data",{"_index":459,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["mataccordion",{"_index":449,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["matbuttonmodule",{"_index":796,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matbuttontogglemodule",{"_index":807,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matcardmodule",{"_index":800,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matcheckboxmodule",{"_index":789,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matching",{"_index":42,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":823,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matdialog",{"_index":458,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["matdialogmodule",{"_index":809,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matdialogref",{"_index":418,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["matexpansionmodule",{"_index":806,"title":{},"body":{"modules/LitotableModule.html":{}}}],["maticonmodule",{"_index":798,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matinputmodule",{"_index":802,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matmenumodule",{"_index":794,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matnativedatemodule",{"_index":825,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matpaginator",{"_index":116,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["matpaginatormodule",{"_index":783,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matprogressbarmodule",{"_index":784,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matradiomodule",{"_index":804,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matselectmodule",{"_index":816,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matslidermodule",{"_index":813,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matslidetogglemodule",{"_index":791,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matsort",{"_index":118,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["matsortmodule",{"_index":787,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matsteppermodule",{"_index":818,"title":{},"body":{"modules/LitotableModule.html":{}}}],["mattabledatasource",{"_index":121,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mattabledatasource(c",{"_index":188,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mattabledatasource(datos",{"_index":181,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mattablemodule",{"_index":782,"title":{},"body":{"modules/LitotableModule.html":{}}}],["mattabsmodule",{"_index":810,"title":{},"body":{"modules/LitotableModule.html":{}}}],["mattooltipmodule",{"_index":821,"title":{},"body":{"modules/LitotableModule.html":{}}}],["max",{"_index":586,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["maxheight",{"_index":476,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["mesurableconstraintype",{"_index":127,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"miscellaneous/enumerations.html":{}}}],["mesurableconstraintype.between",{"_index":382,"title":{},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["mesurableconstraintype.equals",{"_index":381,"title":{},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["mesurableconstraintype.lessthan",{"_index":379,"title":{},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["mesurableconstraintype.morethan",{"_index":520,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["mesurableconstraintype.notbetween",{"_index":524,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["metadata",{"_index":48,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{}}}],["methods",{"_index":89,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"pipes/PhonePipe.html":{},"classes/StringConstrain.html":{}}}],["miscellaneous",{"_index":910,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":764,"title":{"modules/LitotableModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":766,"title":{"modules.html":{}},"body":{"modules/LitotableModule.html":{},"modules.html":{}}}],["more",{"_index":521,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["morethan",{"_index":916,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/functions.html":{}}}],["nbsp;ends",{"_index":568,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["nbsp;includes",{"_index":566,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["nbsp;starts",{"_index":564,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["nc",{"_index":680,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["new",{"_index":148,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcolgroup",{"_index":255,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["newcolgroup.addcolumn(column",{"_index":257,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["newcolorarray",{"_index":740,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["newcolorstring",{"_index":681,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["newdata",{"_index":59,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["next",{"_index":545,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["ngafterviewinit",{"_index":191,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["ngmodule",{"_index":777,"title":{},"body":{"modules/LitotableModule.html":{}}}],["ngoninit",{"_index":174,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["none",{"_index":552,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["notbetween",{"_index":918,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["number",{"_index":21,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{}}}],["numberconstrain",{"_index":461,"title":{"classes/NumberConstrain.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/NumberConstrain.html":{},"coverage.html":{}}}],["numberconstraintype",{"_index":145,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["numberconstraintype.between",{"_index":560,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["numbers",{"_index":828,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["numrows",{"_index":275,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["numselected",{"_index":273,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["object",{"_index":55,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{}}}],["object.defineproperty(element",{"_index":215,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["observable",{"_index":123,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["onfieldselectorchange",{"_index":412,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["onfieldselectorchange(selected",{"_index":430,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["oninit",{"_index":113,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["onnoclick",{"_index":413,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["opencreationform",{"_index":309,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["opendialog",{"_index":474,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["operation",{"_index":620,"title":{"classes/Operation.html":{}},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["operation:18",{"_index":626,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{}}}],["operationfield",{"_index":623,"title":{"interfaces/OperationField.html":{}},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["operations",{"_index":165,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/TableOperationConfig.html":{}}}],["operationtypes",{"_index":146,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["optional",{"_index":9,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":13,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["out",{"_index":773,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}],["output",{"_index":457,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["output('newcolorarray",{"_index":672,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["output('result",{"_index":472,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["outputs",{"_index":609,"title":{},"body":{"components/ConstrainCreatorComponent.html":{},"components/LitoColorPickerComponent.html":{}}}],["overview",{"_index":600,"title":{"index.html":{}},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"index.html":{}}}],["package",{"_index":894,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginationsizes",{"_index":758,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["paginator",{"_index":159,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/functions.html":{}}}],["parsedate(input",{"_index":189,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["parseint(value.target.value",{"_index":298,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["parseint(value.value",{"_index":294,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["phone",{"_index":78,"title":{},"body":{"interfaces/ColumnGroup.html":{},"pipes/PhonePipe.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["phonepipe",{"_index":771,"title":{"pipes/PhonePipe.html":{}},"body":{"modules/LitotableModule.html":{},"pipes/PhonePipe.html":{},"coverage.html":{},"index.html":{}}}],["picker",{"_index":667,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker'},{'name",{"_index":604,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker.component",{"_index":808,"title":{},"body":{"modules/LitotableModule.html":{}}}],["picker.component.css",{"_index":669,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker.component.html",{"_index":668,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts",{"_index":663,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picker.component.ts:28",{"_index":742,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:29",{"_index":743,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":745,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:31",{"_index":744,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:33",{"_index":741,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":748,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:37",{"_index":746,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:39",{"_index":747,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:57",{"_index":707,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:58",{"_index":705,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:59",{"_index":706,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:60",{"_index":704,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:61",{"_index":699,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:63",{"_index":703,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:64",{"_index":702,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:67",{"_index":701,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:71",{"_index":700,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.html",{"_index":679,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker/lito",{"_index":662,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":639,"title":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{},"coverage.html":{}}}],["pipes",{"_index":641,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{},"index.html":{}}}],["pipes/cuit.pipe",{"_index":780,"title":{},"body":{"modules/LitotableModule.html":{}}}],["pipes/phone.pipe",{"_index":788,"title":{},"body":{"modules/LitotableModule.html":{}}}],["pipetransform",{"_index":647,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["pointer",{"_index":720,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["prevdata",{"_index":57,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["private",{"_index":480,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"properties.html":{}}}],["propertykey",{"_index":14,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"classes/TableOperationConfig.html":{}}}],["public",{"_index":399,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["r",{"_index":689,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["radio_button_checked",{"_index":563,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["range",{"_index":562,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["rc._constrain.enable",{"_index":213,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["rc._constrain.style",{"_index":220,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["rc._constrain.trigger(value",{"_index":212,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["reactiveformsmodule",{"_index":820,"title":{},"body":{"modules/LitotableModule.html":{}}}],["reduce",{"_index":341,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["reflect",{"_index":47,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{}}}],["reflect.definemetadata('columnsmetadata",{"_index":65,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["reflect.getmetadata",{"_index":232,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["reflect.getmetadata('columnsmetadata",{"_index":58,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["removeconstrain(constrain",{"_index":305,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["repeat(10",{"_index":716,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["reset",{"_index":550,"title":{},"body":{"components/ConstrainCreationForm.html":{},"modules/LitotableModule.html":{},"index.html":{}}}],["resetvalues",{"_index":414,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["restore",{"_index":638,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["result",{"_index":228,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["result.join",{"_index":653,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["result.pop",{"_index":845,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["result.slice(0",{"_index":649,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["result.slice(10",{"_index":652,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["result.slice(2",{"_index":650,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["results",{"_index":41,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":53,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{}}}],["returns",{"_index":104,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"pipes/PhonePipe.html":{},"classes/StringConstrain.html":{}}}],["rgb(${this.nc[0",{"_index":695,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["rgb(${value[0",{"_index":754,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["rgb(255",{"_index":682,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["right",{"_index":82,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["row",{"_index":283,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["rowconstrain",{"_index":150,"title":{"classes/RowConstrain.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["rowconstrains",{"_index":149,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["rowstyle",{"_index":216,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"miscellaneous/enumerations.html":{}}}],["rowstylecolors",{"_index":761,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["rxjs",{"_index":124,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"dependencies.html":{}}}],["select",{"_index":544,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["selectable",{"_index":312,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selected",{"_index":432,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["selected.name",{"_index":497,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["selected.propertykey",{"_index":495,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["selected.type",{"_index":499,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["selectedrows",{"_index":153,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selection",{"_index":167,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selectionmodel",{"_index":108,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selectionstyle",{"_index":760,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["selectiontoogle(state",{"_index":282,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selector",{"_index":134,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["self",{"_index":718,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["separador",{"_index":645,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["set",{"_index":154,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["setcolumns",{"_index":230,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["setrowsconstrains(source",{"_index":207,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["shadow",{"_index":763,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"miscellaneous/enumerations.html":{}}}],["shortdate",{"_index":415,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["shortdate(str",{"_index":435,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["showselectedonly",{"_index":156,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["siinput.value",{"_index":567,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["size",{"_index":88,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["sort",{"_index":119,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["sort((a",{"_index":340,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["sortstate.direction",{"_index":193,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["sortstate.direction}ending",{"_index":195,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["source.foreach((element",{"_index":209,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["space",{"_index":578,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["src/.../column.decorator.ts",{"_index":912,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../fieldconstriansstyle.ts",{"_index":913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../lito",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../litotable.config.ts",{"_index":914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tablecrud.config.ts",{"_index":915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/litotable/column.ts",{"_index":6,"title":{},"body":{"classes/Column.html":{},"coverage.html":{}}}],["src/app/litotable/column.ts:10",{"_index":28,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:11",{"_index":31,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:12",{"_index":27,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:13",{"_index":23,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:7",{"_index":30,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:8",{"_index":33,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:9",{"_index":29,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts",{"_index":370,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:100",{"_index":834,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:138",{"_index":861,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:139",{"_index":860,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:140",{"_index":859,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:141",{"_index":858,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:151",{"_index":862,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:189",{"_index":864,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:192",{"_index":865,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:32",{"_index":656,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:33",{"_index":655,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:34",{"_index":658,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:35",{"_index":654,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:47",{"_index":657,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:85",{"_index":833,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:86",{"_index":832,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:87",{"_index":835,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:88",{"_index":831,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/litotable.config.ts",{"_index":749,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/litotable/configurations/litotable.config.ts:2",{"_index":751,"title":{},"body":{"classes/LitotableColor.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts",{"_index":618,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts:18",{"_index":836,"title":{},"body":{"classes/Operation.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts:25",{"_index":624,"title":{},"body":{"classes/CreateOperationConfig.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts:32",{"_index":659,"title":{},"body":{"classes/DeleteOperationConfig.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts:5",{"_index":866,"title":{},"body":{"classes/TableOperationConfig.html":{}}}],["src/app/litotable/constrain",{"_index":391,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"coverage.html":{}}}],["src/app/litotable/decorators/column.decorator.ts",{"_index":46,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/litotable/lito",{"_index":661,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/litotable/litotable.component.ts",{"_index":84,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["src/app/litotable/litotable.component.ts:287",{"_index":725,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:288",{"_index":724,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:289",{"_index":726,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:290",{"_index":727,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:291",{"_index":723,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:304",{"_index":729,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:313",{"_index":730,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:319",{"_index":728,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:329",{"_index":736,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:330",{"_index":734,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:331",{"_index":735,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:332",{"_index":737,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:333",{"_index":733,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:337",{"_index":739,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:353",{"_index":738,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:360",{"_index":97,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:361",{"_index":100,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:362",{"_index":98,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:363",{"_index":92,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:367",{"_index":102,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:383",{"_index":850,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.component.ts:384",{"_index":851,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.component.ts:385",{"_index":848,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.component.ts:386",{"_index":849,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.component.ts:387",{"_index":847,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.module.ts",{"_index":774,"title":{},"body":{"modules/LitotableModule.html":{}}}],["src/app/litotable/pipes/cuit.pipe.ts",{"_index":642,"title":{},"body":{"pipes/CuitPipe.html":{},"coverage.html":{}}}],["src/app/litotable/pipes/cuit.pipe.ts:5",{"_index":646,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["src/app/litotable/pipes/phone.pipe.ts",{"_index":837,"title":{},"body":{"pipes/PhonePipe.html":{},"coverage.html":{}}}],["src/app/litotable/pipes/phone.pipe.ts:5",{"_index":838,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["start",{"_index":334,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["starts",{"_index":595,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["startswith",{"_index":919,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["startwith",{"_index":485,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["startwithtoogle",{"_index":486,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["state",{"_index":284,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["statements",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["str",{"_index":250,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["str).length",{"_index":254,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["str)[0",{"_index":261,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["straccordion",{"_index":405,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["stringconstrain",{"_index":462,"title":{"classes/StringConstrain.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/StringConstrain.html":{},"coverage.html":{}}}],["stringconstrainobject",{"_index":463,"title":{"interfaces/StringConstrainObject.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{}}}],["stringconstraintype",{"_index":406,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/StringConstrainObject.html":{},"miscellaneous/enumerations.html":{}}}],["stringconstraintype.contains",{"_index":538,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["stringconstraintype.endwith",{"_index":541,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["stringconstraintype.startswith",{"_index":535,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["stringformgroup",{"_index":407,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["style",{"_index":219,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["styles",{"_index":388,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["styleurls",{"_index":139,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["super(tableoperation.create",{"_index":632,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["super(tableoperation.delete",{"_index":635,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["support",{"_index":924,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":925,"title":{},"body":{"modules.html":{}}}],["swinput.value",{"_index":565,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["switch",{"_index":291,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["table",{"_index":136,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tablecolumn(columnmetadata",{"_index":52,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/functions.html":{}}}],["tablecolumnmetadata",{"_index":49,"title":{"interfaces/TableColumnMetadata.html":{}},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tableconfigurations",{"_index":129,"title":{"interfaces/TableConfigurations.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{}}}],["tableoperation",{"_index":131,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["tableoperationconfig",{"_index":132,"title":{"classes/TableOperationConfig.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":54,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["temp",{"_index":844,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["template",{"_index":387,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["templateurl",{"_index":137,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["this._constrain",{"_index":369,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this._formbuilder.group",{"_index":482,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this._liveannouncer.announce('sorting",{"_index":196,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this._liveannouncer.announce(`sorted",{"_index":194,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.colors",{"_index":676,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.colspan",{"_index":347,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columngroups",{"_index":323,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columngroups.updatecolumns",{"_index":330,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columnnames",{"_index":314,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columnnames.unshift('selection",{"_index":322,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns",{"_index":235,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.filter((c",{"_index":326,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.filter((x",{"_index":348,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.foreach((c",{"_index":332,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.push(c",{"_index":353,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.sort((a",{"_index":263,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columntypes",{"_index":318,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.constrain",{"_index":368,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.constrainedrows",{"_index":225,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.constrainedrows.add(element",{"_index":223,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.content",{"_index":678,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.creationformopen",{"_index":310,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource",{"_index":180,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data",{"_index":226,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data.foreach((row",{"_index":280,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data.length",{"_index":276,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.paginator",{"_index":182,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.sort",{"_index":184,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datatype",{"_index":233,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.dialog.open(constraincreationform",{"_index":475,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.dialog.open(dialogcolorpicker",{"_index":674,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.dialogref.close",{"_index":493,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.dialogref.close(this.fieldconstrain",{"_index":542,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.displayedcolumns",{"_index":267,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displayedcolumns.columngroups",{"_index":270,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displayedcolumns.updategroups",{"_index":271,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displaynames",{"_index":355,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displaynames.splice(gc.start",{"_index":361,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.enable",{"_index":367,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.fetching",{"_index":177,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldconstrain.constrain",{"_index":501,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.addconstrain",{"_index":534,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.clearconstrains",{"_index":531,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.style[field",{"_index":509,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.type",{"_index":510,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.values[0",{"_index":511,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.values[1",{"_index":512,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrainname",{"_index":496,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.propertykey",{"_index":494,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.type",{"_index":498,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrians",{"_index":199,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldconstrians.filter((x",{"_index":306,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldconstrians.map((x",{"_index":201,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldconstrians.push($event",{"_index":303,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldformgroup",{"_index":481,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fields",{"_index":633,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["this.finalstring",{"_index":514,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.getfinaltext",{"_index":492,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.inputsource",{"_index":176,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.inputsource.subscribe((datos",{"_index":179,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.isallselected",{"_index":278,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.name",{"_index":38,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.nc.reduce((a",{"_index":697,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.nc[0",{"_index":690,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.nc[1",{"_index":692,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.nc[1]},${this.nc[2",{"_index":696,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.nc[2",{"_index":693,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.newcolorstring",{"_index":694,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.numberconstraintype.morethan",{"_index":502,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.operations",{"_index":630,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["this.order",{"_index":40,"title":{},"body":{"classes/Column.html":{}}}],["this.paginator",{"_index":183,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.propertykey",{"_index":37,"title":{},"body":{"classes/Column.html":{}}}],["this.resetvalues",{"_index":491,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.result.emit(result",{"_index":479,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.rowconstrains",{"_index":200,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.rowconstrains.foreach((rc",{"_index":210,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.rowconstrains.length",{"_index":229,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectable",{"_index":321,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.add(row",{"_index":281,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.clear",{"_index":279,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.delete(row",{"_index":286,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.has(row",{"_index":285,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.size",{"_index":274,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selection",{"_index":269,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.setcolumns",{"_index":175,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.setrowsconstrains(datos",{"_index":186,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.shortdate",{"_index":525,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.shortdate(this.fieldconstrain.constrain.values[1",{"_index":527,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.sort",{"_index":185,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.start",{"_index":350,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.straccordion",{"_index":528,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.straccordion.closeall",{"_index":529,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.stringformgroup",{"_index":484,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.stringformgroup.value",{"_index":530,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.style",{"_index":366,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.type",{"_index":39,"title":{},"body":{"classes/Column.html":{},"interfaces/Constrain.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"classes/TableOperationConfig.html":{}}}],["this.updatecolspan",{"_index":354,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updatefieldstorowsconstrains",{"_index":208,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updategroups",{"_index":328,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updaterowconstrains",{"_index":301,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updatevisibility",{"_index":308,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.value",{"_index":677,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["this.values",{"_index":378,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.values.length",{"_index":383,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.values[0",{"_index":380,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.valuetype",{"_index":517,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["title",{"_index":665,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["toggle",{"_index":793,"title":{},"body":{"modules/LitotableModule.html":{}}}],["transform",{"_index":643,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["transform(value",{"_index":644,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["tree",{"_index":390,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["trigger",{"_index":372,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["true",{"_index":178,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["tslib",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":752,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["typeofexpr",{"_index":627,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["undefined",{"_index":62,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{}}}],["unfold_less",{"_index":556,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["unfold_more",{"_index":557,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["update",{"_index":636,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["updatecolspan",{"_index":337,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updatecolumns",{"_index":90,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["updatecolumns(visiblecolumns",{"_index":101,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updatefieldstorowsconstrains",{"_index":198,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updategroups",{"_index":329,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updaterowconstrains",{"_index":224,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updatestringconstrain",{"_index":416,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["updatevisibility",{"_index":304,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["validators",{"_index":464,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["validators.required",{"_index":483,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["value",{"_index":95,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableConfigurations.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":753,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["value.tostring",{"_index":846,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["value.tostring().split",{"_index":648,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["value1",{"_index":296,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["value2",{"_index":299,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["value[1",{"_index":755,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["value[2",{"_index":756,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["value[3",{"_index":757,"title":{},"body":{"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["values",{"_index":377,"title":{},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["values.endswith",{"_index":540,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.endswithtoogle",{"_index":539,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.includes",{"_index":537,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.includestoogle",{"_index":536,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.startwith",{"_index":533,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.startwithtoogle",{"_index":532,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["valuetype",{"_index":408,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["var",{"_index":593,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["variable",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":929,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":927,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":114,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["viewchild(mataccordion",{"_index":450,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["viewchild(matpaginator",{"_index":158,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["viewchild(matsort",{"_index":171,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["visible",{"_index":16,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["visiblecolumns",{"_index":103,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["void",{"_index":105,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{}}}],["width",{"_index":575,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["writable",{"_index":221,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x",{"_index":307,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.constrain",{"_index":206,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.metadata.enable",{"_index":205,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.metadata.style",{"_index":204,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.metadata.trigger",{"_index":203,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.name",{"_index":253,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.propertykey",{"_index":202,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.type",{"_index":320,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.visible",{"_index":339,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.visible).length",{"_index":349,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["yes",{"_index":839,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["zone.js",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":772,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Column.html":{"url":"classes/Column.html","title":"class - Column","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Column\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/column.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                contentAlign\n                            \n                            \n                                    Optional\n                                format\n                            \n                            \n                                name\n                            \n                            \n                                order\n                            \n                            \n                                propertyKey\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyKey: string, name: string, type: ColumnType, order: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/column.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ColumnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        contentAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnContentAlignment\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertyKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ColumnContentAlignment,\n  ColumnType,\n} from './decorators/column.decorator';\n\nexport class Column {\n  propertyKey: string;\n  visible?: boolean;\n  order: number;\n  name: string;\n  type: ColumnType;\n  format?: string;\n  contentAlign?: ColumnContentAlignment;\n  constructor(\n    propertyKey: string,\n    name: string,\n    type: ColumnType,\n    order: number\n  ) {\n    this.propertyKey = propertyKey;\n    this.name = name;\n    this.type = type;\n    this.order = order;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnGroup.html":{"url":"interfaces/ColumnGroup.html","title":"interface - ColumnGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColumnGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/decorators/column.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'reflect-metadata';\nexport interface TableColumnMetadata {\n  visible?: boolean;\n  order: number;\n  columnName?: string;\n  type?: ColumnType;\n  format?: string;\n  contentAlign?: ColumnContentAlignment;\n  columnGroup?: ColumnGroup;\n}\n\nexport interface ColumnGroup {\n  name: string;\n}\n\nexport function TableColumn(columnMetadata: TableColumnMetadata) {\n  return (target: Object, propertyKey: string) => {\n    const prevData = Reflect.getMetadata('columnsMetadata', target);\n    const newData = {\n      propertyKey: propertyKey,\n      metadata: columnMetadata,\n    };\n    let data = [];\n    if (prevData != undefined) {\n      data.push(...prevData);\n    }\n    data.push(newData);\n    Reflect.defineMetadata('columnsMetadata', data, target);\n  };\n}\n\nexport enum ColumnType {\n  STRING = 0,\n  INTEGER = 1,\n  FLOAT = 2,\n  DATE = 3,\n  CURRENCY = 4,\n  CUIT = 5,\n  PHONE = 6,\n}\n\nexport enum ColumnContentAlignment {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnGroups.html":{"url":"classes/ColumnGroups.html","title":"class - ColumnGroups","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnGroups\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/litotable.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                displayNames\n                            \n                            \n                                groupColumns\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateColumns\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(length: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/litotable.component.ts:363\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:360\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:362\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupColumn[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:361\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:363\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateColumns\n                        \n                    \n                \n            \n            \n                \nupdateColumns(visibleColumns: Column[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    visibleColumns\n                                    \n                                                Column[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstriansStyle';\nimport { TableConfigurations } from './configurations/litotable.config';\nimport {\n  TableOperation,\n  TableOperationConfig,\n} from './configurations/tableCrud.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './litotable.component.html',\n  styleUrls: ['./litotable.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  columns: Column[] = [];\n  columnTypes = ColumnType;\n  numberConstrainType = MesurableConstrainType;\n  operationTypes = TableOperation;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable;\n  @Input('type') dataType!: Object;\n  @Input('operations') operations?: TableOperationConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(\n          x.propertyKey,\n          x.metadata.trigger,\n          x.metadata.style,\n          x.metadata.enable,\n          x.constrain\n        );\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(this.columns, this.selection);\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  openCreationForm() {\n    // this.creationFormOpen = !this.creationFormOpen;\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(columns: Column[] = [], selectable: boolean = false) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    if (selectable) this.columnNames.unshift('selection');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  constructor(name: string) {\n    this.name = name;\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order)\n      .reduce(\n        (a, c) => {\n          a.start = c.order  a.end ? c.order : a.end;\n          return a;\n        },\n        { start: Infinity, end: 0 }\n      );\n\n    this.colspan = this.columns.filter((x) => x.visible).length;\n    //this.start = groupData.start;\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    for (let i = 0; i  {\n        if (gc.columns.includes(element)) {\n          gc.updateColspan();\n          this.displayNames.splice(gc.start + 1, 1, gc.name);\n        }\n      });\n    }\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  style: Object;\n  constrain: (e: any) => boolean;\n  enable: boolean;\n  _constrain: Constrain;\n  constructor(\n    name: string,\n    constrain: (e: any) => boolean,\n    style: Object,\n    enable: boolean,\n    _constrain: Constrain\n  ) {\n    this.name = name;\n    this.style = style;\n    this.enable = enable;\n    this.constrain = constrain;\n    this._constrain = _constrain;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Constrain.html":{"url":"interfaces/Constrain.html","title":"interface - Constrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Constrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is for every Constrain\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enable\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            trigger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trigger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trigger:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstrainCreationForm.html":{"url":"components/ConstrainCreationForm.html","title":"component - ConstrainCreationForm","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConstrainCreationForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/litotable/constrain-creator/constrain-creator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                constrain-creation-form-dialog\n            \n\n            \n                styleUrls\n                ./constrain-creator.component.css\n            \n\n\n\n            \n                templateUrl\n                constrain-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                dateRange\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                fieldConstrain\n                            \n                            \n                                fieldFormGroup\n                            \n                            \n                                finalString\n                            \n                            \n                                numberConstrainType\n                            \n                            \n                                strAccordion\n                            \n                            \n                                stringConstrainType\n                            \n                            \n                                stringFormGroup\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeConstrainState\n                            \n                            \n                                changeConstrainStyle\n                            \n                            \n                                closeDialog\n                            \n                            \n                                getFinalText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFieldSelectorChange\n                            \n                            \n                                onNoClick\n                            \n                            \n                                resetValues\n                            \n                            \n                                shortDate\n                            \n                            \n                                updateStringConstrain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ConstrainCreationFormData, _formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ConstrainCreationFormData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeConstrainState\n                        \n                    \n                \n            \n            \n                \nchangeConstrainState(value: any, field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeConstrainStyle\n                        \n                    \n                \n            \n            \n                \nchangeConstrainStyle(value: any, field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:340\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFinalText\n                        \n                    \n                \n            \n            \n                \ngetFinalText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFieldSelectorChange\n                        \n                    \n                \n            \n            \n                \nonFieldSelectorChange(selected: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetValues\n                        \n                    \n                \n            \n            \n                \nresetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:288\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortDate\n                        \n                    \n                \n            \n            \n                \nshortDate(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStringConstrain\n                        \n                    \n                \n            \n            \n                \nupdateStringConstrain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:311\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConstrainCreationFormData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateRange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldConstrain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldConstrianStyle | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finalString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberConstrainType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : MesurableConstrainType\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strAccordion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatAccordion\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatAccordion)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringConstrainType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : StringConstrainType\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Column } from '../column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  NumberConstrain,\n  MesurableConstrainType,\n  DateConstrain,\n  StringConstrainType,\n  StringConstrain,\n  StringConstrainObject,\n} from '../configurations/fieldConstriansStyle';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ColumnType } from '../decorators/column.decorator';\nimport { MatAccordion } from '@angular/material/expansion';\n\nexport class ConstrainCreationFormData {\n  columns: Column[] = [];\n}\n\n@Component({\n  selector: 'litotable-constrain-creator',\n  templateUrl: './constrain-creator.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreatorComponent implements OnInit {\n  @Input('columns') columns: Column[] = [];\n  @Output('result-constrain') result: EventEmitter =\n    new EventEmitter();\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConstrainCreationForm, {\n      data: { columns: this.columns },\n      maxHeight: '80vh',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'constrain-creation-form-dialog',\n  templateUrl: 'constrain-form.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreationForm {\n  fieldFormGroup!: FormGroup;\n  stringFormGroup!: FormGroup;\n  fieldConstrain: FieldConstrianStyle | any;\n  numberConstrainType = MesurableConstrainType;\n  stringConstrainType = StringConstrainType;\n  finalString: string = '';\n  valueType: string = '';\n  @ViewChild(MatAccordion) strAccordion!: MatAccordion;\n\n  dateRange = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConstrainCreationFormData,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.fieldFormGroup = this._formBuilder.group({\n      field: ['', Validators.required],\n    });\n    this.stringFormGroup = this._formBuilder.group({\n      startWith: [''],\n      startWithToogle: [''],\n      includes: [''],\n      includesToogle: [''],\n      endsWith: [''],\n      endsWithToogle: [''],\n    });\n    this.resetValues();\n\n    this.getFinalText();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onFieldSelectorChange(selected: Column) {\n    this.resetValues();\n    if (selected) {\n      this.fieldConstrain.propertyKey = selected.propertyKey;\n      this.fieldConstrain.constrainName = selected.name;\n      this.fieldConstrain.type = selected.type;\n\n      switch (selected.type) {\n        case ColumnType.DATE:\n          this.fieldConstrain.constrain = new DateConstrain(\n            this.numberConstrainType.MORETHAN,\n            [new Date(), new Date()],\n            {\n              color: '#eee',\n              'background-color': '#888',\n            }\n          );\n          break;\n        case ColumnType.STRING:\n        case ColumnType.PHONE:\n        case ColumnType.CUIT:\n          this.fieldConstrain.constrain = new StringConstrain({\n            color: '#eee',\n            'background-color': '#888',\n          });\n          break;\n      }\n    }\n    this.getFinalText();\n  }\n\n  changeConstrainStyle(value: any, field: string) {\n    if (field && field != '') {\n      this.fieldConstrain.constrain.style[field] = value;\n    }\n  }\n\n  changeConstrainState(value: any, field: string) {\n    switch (field) {\n      case 'date-type':\n      case 'number-type':\n        this.fieldConstrain.constrain.type = parseInt(value.value);\n        break;\n      case 'number-value':\n      case 'number-value1':\n        this.fieldConstrain.constrain.values[0] = parseInt(value.target.value);\n        break;\n      case 'number-value2':\n        this.fieldConstrain.constrain.values[1] = parseInt(value.target.value);\n        break;\n      case 'date-value':\n      case 'date-value1':\n        this.fieldConstrain.constrain.values[0] = new Date(value.value);\n        break;\n      case 'date-value2':\n        this.fieldConstrain.constrain.values[1] = new Date(value.value);\n        break;\n    }\n    this.getFinalText();\n  }\n\n  getFinalText() {\n    this.finalString = '';\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.FLOAT:\n        this.valueType = 'value';\n        this.finalString = `that is `;\n        break;\n      case ColumnType.DATE:\n        this.valueType = 'date';\n        break;\n      case ColumnType.STRING:\n      case ColumnType.PHONE:\n      case ColumnType.CUIT:\n        this.valueType = 'string';\n        this.finalString = `that `;\n        break;\n      default:\n        this.valueType = 'value';\n        break;\n    }\n\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.CURRENCY:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `more than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `less than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n        }\n        break;\n      case ColumnType.DATE:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `after ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `before ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n        }\n\n        break;\n      case ColumnType.STRING:\n      case ColumnType.CUIT:\n      case ColumnType.PHONE:\n        for (\n          let i = 0;\n          i  1) {\n            if (i  false,\n        style: {},\n      },\n    };\n    if (this.strAccordion) this.strAccordion.closeAll();\n  }\n\n  updateStringConstrain() {\n    let values: {\n      startWith: any;\n      startWithToogle: any;\n      includes: any;\n      includesToogle: any;\n      endsWith: any;\n      endsWithToogle: any;\n    } = this.stringFormGroup.value;\n\n    this.fieldConstrain.constrain.clearConstrains();\n    if (values.startWithToogle && values.startWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.STARTSWITH,\n        value: values.startWith,\n      });\n    if (values.includesToogle && values.includes)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.CONTAINS,\n        value: values.includes,\n      });\n    if (values.endsWithToogle && values.endsWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.ENDWITH,\n        value: values.endsWith,\n      });\n    this.getFinalText();\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.fieldConstrain);\n    console.log(this.fieldConstrain.constrain);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Select a field\n      \n      \n        Next\n      \n    \n    \n    \n      \n      Aply style\n      \n      \n        Back\n        Next\n      \n    \n    \n    \n      \n      Set constrain\n      \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n      \n\n      \n        Back\n        Next\n      \n    \n    \n    \n      Done\n      \n        \n          Every {{ valueType }} from column\n          {{ fieldConstrain.constrainName }}\n          {{ finalString }}\n        \n      \n      \n        Back\n        \n          Reset\n        \n        Create\n      \n    \n  \n\n\n\n  \n    \n      Field\n      \n        None\n        {{\n          column.name\n        }}\n      \n    \n  \n\n\n\n  \n    \n      {{ fieldConstrain.constrainName }}\n    \n    \n      \n      \n    \n  \n\n\n\n  \n    \n      drag_handle\n    \n    \n      expand_less\n    \n    \n      expand_more\n    \n    \n      unfold_less\n    \n    \n      unfold_more\n    \n  \n  \n    \n      \n        EQUALS\n        LESS THAN\n        MORE THAN\n      \n      \n    \n  \n  \n  \n    \n      {{\n        fieldConstrain.constrain.type == numberConstrainType.BETWEEN\n          ? \"MORE THAN\"\n          : \"LESS THAN\"\n      }}\n      \n    \n    \n      \n        {{\n          fieldConstrain.constrain.type == numberConstrainType.BETWEEN\n            ? \"LESS THAN\"\n            : \"MORE THAN\"\n        }}\n      \n      \n    \n  \n\n\n\n  \n    \n      drag_handle\n     -->\n    \n      expand_less\n    \n    \n      expand_more\n    \n    \n      unfold_less\n    \n    \n      unfold_more\n    \n  \n  \n    \n    \n      \n        EQUALS\n        Choose a date\n        Choose a date\n        Choose a date range\n        Choose a date range\n      \n\n      \n      \n      \n    \n\n    \n    \n      \n        \n        \n      \n      \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            radio_button_checked\n          \n          radio_button_checked\n          &nbsp;Starts with\n        \n        \n          {{ swInput.value }}\n        \n      \n      \n        \n          Value\n          \n        \n        \n      \n    \n    \n      \n        \n          radio_button_checked\n          radio_button_checked\n          &nbsp;Includes\n        \n        \n          {{ siInput.value }}\n        \n      \n      \n        \n          Value\n          \n        \n        \n      \n    \n    \n      \n        \n          radio_button_checked\n          radio_button_checked\n          &nbsp;Ends with\n        \n        \n          {{ ewInput.value }}\n        \n      \n      \n        \n          Value\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./constrain-creator.component.css\n                \n                .constrain-mat-content-dual {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n}\n\n.number-constrain-selector {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.number-constrain-selector > * {\n  flex-grow: 1;\n}\n\n.flex-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mat-dialog-content {\n  max-height: initial;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Select a field                    Next                              Aply style                    Back        Next                              Set constrain                                                                                                          Back        Next                        Done                        Every {{ valueType }} from column          {{ fieldConstrain.constrainName }}          {{ finalString }}                            Back                  Reset                Create                        Field              None        {{          column.name        }}                        {{ fieldConstrain.constrainName }}                                      drag_handle              expand_less              expand_more              unfold_less              unfold_more                          EQUALS        LESS THAN        MORE THAN                                {{        fieldConstrain.constrain.type == numberConstrainType.BETWEEN          ? \"MORE THAN\"          : \"LESS THAN\"      }}                            {{          fieldConstrain.constrain.type == numberConstrainType.BETWEEN            ? \"LESS THAN\"            : \"MORE THAN\"        }}                              drag_handle     -->          expand_less              expand_more              unfold_less              unfold_more                              EQUALS        Choose a date        Choose a date        Choose a date range        Choose a date range                                                                                                                            radio_button_checked                    radio_button_checked           Starts with                          {{ swInput.value }}                                      Value                                                                radio_button_checked          radio_button_checked           Includes                          {{ siInput.value }}                                      Value                                                                radio_button_checked          radio_button_checked           Ends with                          {{ ewInput.value }}                                      Value                                      '\n    var COMPONENTS = [{'name': 'ConstrainCreationForm', 'selector': 'constrain-creation-form-dialog'},{'name': 'ConstrainCreatorComponent', 'selector': 'litotable-constrain-creator'},{'name': 'DialogColorPicker', 'selector': 'dialog-overview-example-dialog'},{'name': 'LitoColorPickerComponent', 'selector': 'app-lito-color-picker'},{'name': 'LitotableComponent', 'selector': 'lito-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConstrainCreationForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstrainCreationFormData.html":{"url":"classes/ConstrainCreationFormData.html","title":"class - ConstrainCreationFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstrainCreationFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/constrain-creator/constrain-creator.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Column } from '../column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  NumberConstrain,\n  MesurableConstrainType,\n  DateConstrain,\n  StringConstrainType,\n  StringConstrain,\n  StringConstrainObject,\n} from '../configurations/fieldConstriansStyle';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ColumnType } from '../decorators/column.decorator';\nimport { MatAccordion } from '@angular/material/expansion';\n\nexport class ConstrainCreationFormData {\n  columns: Column[] = [];\n}\n\n@Component({\n  selector: 'litotable-constrain-creator',\n  templateUrl: './constrain-creator.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreatorComponent implements OnInit {\n  @Input('columns') columns: Column[] = [];\n  @Output('result-constrain') result: EventEmitter =\n    new EventEmitter();\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConstrainCreationForm, {\n      data: { columns: this.columns },\n      maxHeight: '80vh',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'constrain-creation-form-dialog',\n  templateUrl: 'constrain-form.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreationForm {\n  fieldFormGroup!: FormGroup;\n  stringFormGroup!: FormGroup;\n  fieldConstrain: FieldConstrianStyle | any;\n  numberConstrainType = MesurableConstrainType;\n  stringConstrainType = StringConstrainType;\n  finalString: string = '';\n  valueType: string = '';\n  @ViewChild(MatAccordion) strAccordion!: MatAccordion;\n\n  dateRange = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConstrainCreationFormData,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.fieldFormGroup = this._formBuilder.group({\n      field: ['', Validators.required],\n    });\n    this.stringFormGroup = this._formBuilder.group({\n      startWith: [''],\n      startWithToogle: [''],\n      includes: [''],\n      includesToogle: [''],\n      endsWith: [''],\n      endsWithToogle: [''],\n    });\n    this.resetValues();\n\n    this.getFinalText();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onFieldSelectorChange(selected: Column) {\n    this.resetValues();\n    if (selected) {\n      this.fieldConstrain.propertyKey = selected.propertyKey;\n      this.fieldConstrain.constrainName = selected.name;\n      this.fieldConstrain.type = selected.type;\n\n      switch (selected.type) {\n        case ColumnType.DATE:\n          this.fieldConstrain.constrain = new DateConstrain(\n            this.numberConstrainType.MORETHAN,\n            [new Date(), new Date()],\n            {\n              color: '#eee',\n              'background-color': '#888',\n            }\n          );\n          break;\n        case ColumnType.STRING:\n        case ColumnType.PHONE:\n        case ColumnType.CUIT:\n          this.fieldConstrain.constrain = new StringConstrain({\n            color: '#eee',\n            'background-color': '#888',\n          });\n          break;\n      }\n    }\n    this.getFinalText();\n  }\n\n  changeConstrainStyle(value: any, field: string) {\n    if (field && field != '') {\n      this.fieldConstrain.constrain.style[field] = value;\n    }\n  }\n\n  changeConstrainState(value: any, field: string) {\n    switch (field) {\n      case 'date-type':\n      case 'number-type':\n        this.fieldConstrain.constrain.type = parseInt(value.value);\n        break;\n      case 'number-value':\n      case 'number-value1':\n        this.fieldConstrain.constrain.values[0] = parseInt(value.target.value);\n        break;\n      case 'number-value2':\n        this.fieldConstrain.constrain.values[1] = parseInt(value.target.value);\n        break;\n      case 'date-value':\n      case 'date-value1':\n        this.fieldConstrain.constrain.values[0] = new Date(value.value);\n        break;\n      case 'date-value2':\n        this.fieldConstrain.constrain.values[1] = new Date(value.value);\n        break;\n    }\n    this.getFinalText();\n  }\n\n  getFinalText() {\n    this.finalString = '';\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.FLOAT:\n        this.valueType = 'value';\n        this.finalString = `that is `;\n        break;\n      case ColumnType.DATE:\n        this.valueType = 'date';\n        break;\n      case ColumnType.STRING:\n      case ColumnType.PHONE:\n      case ColumnType.CUIT:\n        this.valueType = 'string';\n        this.finalString = `that `;\n        break;\n      default:\n        this.valueType = 'value';\n        break;\n    }\n\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.CURRENCY:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `more than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `less than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n        }\n        break;\n      case ColumnType.DATE:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `after ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `before ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n        }\n\n        break;\n      case ColumnType.STRING:\n      case ColumnType.CUIT:\n      case ColumnType.PHONE:\n        for (\n          let i = 0;\n          i  1) {\n            if (i  false,\n        style: {},\n      },\n    };\n    if (this.strAccordion) this.strAccordion.closeAll();\n  }\n\n  updateStringConstrain() {\n    let values: {\n      startWith: any;\n      startWithToogle: any;\n      includes: any;\n      includesToogle: any;\n      endsWith: any;\n      endsWithToogle: any;\n    } = this.stringFormGroup.value;\n\n    this.fieldConstrain.constrain.clearConstrains();\n    if (values.startWithToogle && values.startWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.STARTSWITH,\n        value: values.startWith,\n      });\n    if (values.includesToogle && values.includes)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.CONTAINS,\n        value: values.includes,\n      });\n    if (values.endsWithToogle && values.endsWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.ENDWITH,\n        value: values.endsWith,\n      });\n    this.getFinalText();\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.fieldConstrain);\n    console.log(this.fieldConstrain.constrain);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstrainCreatorComponent.html":{"url":"components/ConstrainCreatorComponent.html","title":"component - ConstrainCreatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConstrainCreatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/litotable/constrain-creator/constrain-creator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                litotable-constrain-creator\n            \n\n            \n                styleUrls\n                ./constrain-creator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./constrain-creator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                result-constrain\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:45\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        result-constrain\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:46\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Column } from '../column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  NumberConstrain,\n  MesurableConstrainType,\n  DateConstrain,\n  StringConstrainType,\n  StringConstrain,\n  StringConstrainObject,\n} from '../configurations/fieldConstriansStyle';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ColumnType } from '../decorators/column.decorator';\nimport { MatAccordion } from '@angular/material/expansion';\n\nexport class ConstrainCreationFormData {\n  columns: Column[] = [];\n}\n\n@Component({\n  selector: 'litotable-constrain-creator',\n  templateUrl: './constrain-creator.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreatorComponent implements OnInit {\n  @Input('columns') columns: Column[] = [];\n  @Output('result-constrain') result: EventEmitter =\n    new EventEmitter();\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConstrainCreationForm, {\n      data: { columns: this.columns },\n      maxHeight: '80vh',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'constrain-creation-form-dialog',\n  templateUrl: 'constrain-form.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreationForm {\n  fieldFormGroup!: FormGroup;\n  stringFormGroup!: FormGroup;\n  fieldConstrain: FieldConstrianStyle | any;\n  numberConstrainType = MesurableConstrainType;\n  stringConstrainType = StringConstrainType;\n  finalString: string = '';\n  valueType: string = '';\n  @ViewChild(MatAccordion) strAccordion!: MatAccordion;\n\n  dateRange = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConstrainCreationFormData,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.fieldFormGroup = this._formBuilder.group({\n      field: ['', Validators.required],\n    });\n    this.stringFormGroup = this._formBuilder.group({\n      startWith: [''],\n      startWithToogle: [''],\n      includes: [''],\n      includesToogle: [''],\n      endsWith: [''],\n      endsWithToogle: [''],\n    });\n    this.resetValues();\n\n    this.getFinalText();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onFieldSelectorChange(selected: Column) {\n    this.resetValues();\n    if (selected) {\n      this.fieldConstrain.propertyKey = selected.propertyKey;\n      this.fieldConstrain.constrainName = selected.name;\n      this.fieldConstrain.type = selected.type;\n\n      switch (selected.type) {\n        case ColumnType.DATE:\n          this.fieldConstrain.constrain = new DateConstrain(\n            this.numberConstrainType.MORETHAN,\n            [new Date(), new Date()],\n            {\n              color: '#eee',\n              'background-color': '#888',\n            }\n          );\n          break;\n        case ColumnType.STRING:\n        case ColumnType.PHONE:\n        case ColumnType.CUIT:\n          this.fieldConstrain.constrain = new StringConstrain({\n            color: '#eee',\n            'background-color': '#888',\n          });\n          break;\n      }\n    }\n    this.getFinalText();\n  }\n\n  changeConstrainStyle(value: any, field: string) {\n    if (field && field != '') {\n      this.fieldConstrain.constrain.style[field] = value;\n    }\n  }\n\n  changeConstrainState(value: any, field: string) {\n    switch (field) {\n      case 'date-type':\n      case 'number-type':\n        this.fieldConstrain.constrain.type = parseInt(value.value);\n        break;\n      case 'number-value':\n      case 'number-value1':\n        this.fieldConstrain.constrain.values[0] = parseInt(value.target.value);\n        break;\n      case 'number-value2':\n        this.fieldConstrain.constrain.values[1] = parseInt(value.target.value);\n        break;\n      case 'date-value':\n      case 'date-value1':\n        this.fieldConstrain.constrain.values[0] = new Date(value.value);\n        break;\n      case 'date-value2':\n        this.fieldConstrain.constrain.values[1] = new Date(value.value);\n        break;\n    }\n    this.getFinalText();\n  }\n\n  getFinalText() {\n    this.finalString = '';\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.FLOAT:\n        this.valueType = 'value';\n        this.finalString = `that is `;\n        break;\n      case ColumnType.DATE:\n        this.valueType = 'date';\n        break;\n      case ColumnType.STRING:\n      case ColumnType.PHONE:\n      case ColumnType.CUIT:\n        this.valueType = 'string';\n        this.finalString = `that `;\n        break;\n      default:\n        this.valueType = 'value';\n        break;\n    }\n\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.CURRENCY:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `more than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `less than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n        }\n        break;\n      case ColumnType.DATE:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `after ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `before ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n        }\n\n        break;\n      case ColumnType.STRING:\n      case ColumnType.CUIT:\n      case ColumnType.PHONE:\n        for (\n          let i = 0;\n          i  1) {\n            if (i  false,\n        style: {},\n      },\n    };\n    if (this.strAccordion) this.strAccordion.closeAll();\n  }\n\n  updateStringConstrain() {\n    let values: {\n      startWith: any;\n      startWithToogle: any;\n      includes: any;\n      includesToogle: any;\n      endsWith: any;\n      endsWithToogle: any;\n    } = this.stringFormGroup.value;\n\n    this.fieldConstrain.constrain.clearConstrains();\n    if (values.startWithToogle && values.startWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.STARTSWITH,\n        value: values.startWith,\n      });\n    if (values.includesToogle && values.includes)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.CONTAINS,\n        value: values.includes,\n      });\n    if (values.endsWithToogle && values.endsWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.ENDWITH,\n        value: values.endsWith,\n      });\n    this.getFinalText();\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.fieldConstrain);\n    console.log(this.fieldConstrain.constrain);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./constrain-creator.component.css\n                \n                .constrain-mat-content-dual {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n}\n\n.number-constrain-selector {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.number-constrain-selector > * {\n  flex-grow: 1;\n}\n\n.flex-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mat-dialog-content {\n  max-height: initial;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ConstrainCreationForm', 'selector': 'constrain-creation-form-dialog'},{'name': 'ConstrainCreatorComponent', 'selector': 'litotable-constrain-creator'},{'name': 'DialogColorPicker', 'selector': 'dialog-overview-example-dialog'},{'name': 'LitoColorPickerComponent', 'selector': 'app-lito-color-picker'},{'name': 'LitotableComponent', 'selector': 'lito-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConstrainCreatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOperationConfig.html":{"url":"classes/CreateOperationConfig.html","title":"class - CreateOperationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOperationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Operation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fields: OperationField[])\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                  \n                                                        \n                                                                        OperationField[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OperationField[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableOperation\n\n                    \n                \n                        \n                            \n                                Inherited from         Operation\n\n                            \n                        \n                    \n                        \n                                Defined in         Operation:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CuitPipe.html":{"url":"pipes/CuitPipe.html","title":"pipe - CuitPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CuitPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/litotable/pipes/cuit.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        cuit\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, separador: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/pipes/cuit.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    separador\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '.'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cuit' })\nexport class CuitPipe implements PipeTransform {\n  transform(value: number, separador: string = '.'): string {\n    let result = value.toString().split('');\n    result = [\n      ...result.slice(0, 2),\n      separador,\n      ...result.slice(2, 10),\n      separador,\n      ...result.slice(10),\n    ];\n    return result.join('');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateConstrain.html":{"url":"classes/DateConstrain.html","title":"class - DateConstrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateConstrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is for date constrains\n\n            \n\n\n            \n                Implements\n            \n            \n                            Constrain\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enable\n                            \n                            \n                                style\n                            \n                            \n                                trigger\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: MesurableConstrainType, values: [Date, Date], style: Object, enable: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        MesurableConstrainType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    [Date, Date]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MesurableConstrainType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [Date, Date]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOperationConfig.html":{"url":"classes/DeleteOperationConfig.html","title":"class - DeleteOperationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOperationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Operation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableOperation\n\n                    \n                \n                        \n                            \n                                Inherited from         Operation\n\n                            \n                        \n                    \n                        \n                                Defined in         Operation:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogColorData.html":{"url":"interfaces/DialogColorData.html","title":"interface - DialogColorData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogColorData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colors\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colors:         LitotableColor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LitotableColor[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { LitotableColor } from '../configurations/litotable.config';\n\nexport interface DialogColorData {\n  title: string;\n  value: string;\n  colors: LitotableColor[];\n}\n\n@Component({\n  selector: 'app-lito-color-picker',\n  templateUrl: './lito-color-picker.component.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class LitoColorPickerComponent implements OnInit {\n  @Input('colors') colors?: LitotableColor[];\n  @Input('content') content: string = 'color';\n  @Output('result') result: EventEmitter = new EventEmitter();\n  @Output('newColorArray') arr: EventEmitter =\n    new EventEmitter();\n  value?: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogColorPicker, {\n      width: '380px',\n      data: { colors: this.colors, value: this.value, title: this.content },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-color-picker.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class DialogColorPicker {\n  value: string = '';\n  nc: [number, number, number] = [0, 0, 0];\n  newColorString = 'rgb(255, 255, 255)';\n  fgc: string = '#222';\n  mainColors: LitotableColor[] = MAIN_COLORS;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogColorData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  changeNewColorValue(color: string, value: any) {\n    switch (color) {\n      case 'r':\n        this.nc[0] = value;\n        break;\n      case 'g':\n        this.nc[1] = value;\n        break;\n      case 'b':\n        this.nc[2] = value;\n        break;\n    }\n    this.newColorString = `rgb(${this.nc[0]}, ${this.nc[1]},${this.nc[2]})`;\n    if (this.nc.reduce((a, c) => a + c) / 3 \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogColorPicker.html":{"url":"components/DialogColorPicker.html","title":"component - DialogColorPicker","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogColorPicker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dialog-overview-example-dialog\n            \n\n            \n                styleUrls\n                ./lito-color-picker.component.css\n            \n\n\n\n            \n                templateUrl\n                dialog-color-picker.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                fgc\n                            \n                            \n                                mainColors\n                            \n                            \n                                nc\n                            \n                            \n                                newColorString\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeNewColorValue\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogColorData)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogColorData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeNewColorValue\n                        \n                    \n                \n            \n            \n                \nchangeNewColorValue(color: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogColorData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fgc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#222'\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LitotableColor[]\n\n                    \n                \n                \n                    \n                        Default value : MAIN_COLORS\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nc\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number, number]\n\n                    \n                \n                \n                    \n                        Default value : [0, 0, 0]\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newColorString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgb(255, 255, 255)'\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { LitotableColor } from '../configurations/litotable.config';\n\nexport interface DialogColorData {\n  title: string;\n  value: string;\n  colors: LitotableColor[];\n}\n\n@Component({\n  selector: 'app-lito-color-picker',\n  templateUrl: './lito-color-picker.component.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class LitoColorPickerComponent implements OnInit {\n  @Input('colors') colors?: LitotableColor[];\n  @Input('content') content: string = 'color';\n  @Output('result') result: EventEmitter = new EventEmitter();\n  @Output('newColorArray') arr: EventEmitter =\n    new EventEmitter();\n  value?: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogColorPicker, {\n      width: '380px',\n      data: { colors: this.colors, value: this.value, title: this.content },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-color-picker.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class DialogColorPicker {\n  value: string = '';\n  nc: [number, number, number] = [0, 0, 0];\n  newColorString = 'rgb(255, 255, 255)';\n  fgc: string = '#222';\n  mainColors: LitotableColor[] = MAIN_COLORS;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogColorData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  changeNewColorValue(color: string, value: any) {\n    switch (color) {\n      case 'r':\n        this.nc[0] = value;\n        break;\n      case 'g':\n        this.nc[1] = value;\n        break;\n      case 'b':\n        this.nc[2] = value;\n        break;\n    }\n    this.newColorString = `rgb(${this.nc[0]}, ${this.nc[1]},${this.nc[2]})`;\n    if (this.nc.reduce((a, c) => a + c) / 3 \n    \n\n    \n        \n  {{data.title?data.title:'Colors'}}\n\n\n  \n    circle\n    circle\n  \n\n\n    \n\n    \n                \n                    ./lito-color-picker.component.css\n                \n                .colors-container {\n  margin: 1.5rem auto 0 !important;\n  width: 76%;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n\n.colors-container > * {\n  justify-self: center;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{data.title?data.title:\\'Colors\\'}}      circle    circle  '\n    var COMPONENTS = [{'name': 'ConstrainCreationForm', 'selector': 'constrain-creation-form-dialog'},{'name': 'ConstrainCreatorComponent', 'selector': 'litotable-constrain-creator'},{'name': 'DialogColorPicker', 'selector': 'dialog-overview-example-dialog'},{'name': 'LitoColorPickerComponent', 'selector': 'app-lito-color-picker'},{'name': 'LitotableComponent', 'selector': 'lito-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogColorPicker'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayedColumns.html":{"url":"classes/DisplayedColumns.html","title":"class - DisplayedColumns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayedColumns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/litotable.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnGroups\n                            \n                            \n                                columnNames\n                            \n                            \n                                columns\n                            \n                            \n                                columnTypes\n                            \n                            \n                                selectable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allVisible\n                            \n                            \n                                changeColumnVisivility\n                            \n                            \n                                updateGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columns: Column[], selectable: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/litotable.component.ts:291\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columns\n                                                  \n                                                        \n                                                                        Column[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columnGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnGroups\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:291\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:288\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:287\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnType[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:289\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:290\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        allVisible\n                        \n                    \n                \n            \n            \n                \nallVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:319\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeColumnVisivility\n                        \n                    \n                \n            \n            \n                \nchangeColumnVisivility(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroups\n                        \n                    \n                \n            \n            \n                \nupdateGroups()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:313\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstriansStyle';\nimport { TableConfigurations } from './configurations/litotable.config';\nimport {\n  TableOperation,\n  TableOperationConfig,\n} from './configurations/tableCrud.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './litotable.component.html',\n  styleUrls: ['./litotable.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  columns: Column[] = [];\n  columnTypes = ColumnType;\n  numberConstrainType = MesurableConstrainType;\n  operationTypes = TableOperation;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable;\n  @Input('type') dataType!: Object;\n  @Input('operations') operations?: TableOperationConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(\n          x.propertyKey,\n          x.metadata.trigger,\n          x.metadata.style,\n          x.metadata.enable,\n          x.constrain\n        );\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(this.columns, this.selection);\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  openCreationForm() {\n    // this.creationFormOpen = !this.creationFormOpen;\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(columns: Column[] = [], selectable: boolean = false) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    if (selectable) this.columnNames.unshift('selection');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  constructor(name: string) {\n    this.name = name;\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order)\n      .reduce(\n        (a, c) => {\n          a.start = c.order  a.end ? c.order : a.end;\n          return a;\n        },\n        { start: Infinity, end: 0 }\n      );\n\n    this.colspan = this.columns.filter((x) => x.visible).length;\n    //this.start = groupData.start;\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    for (let i = 0; i  {\n        if (gc.columns.includes(element)) {\n          gc.updateColspan();\n          this.displayNames.splice(gc.start + 1, 1, gc.name);\n        }\n      });\n    }\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  style: Object;\n  constrain: (e: any) => boolean;\n  enable: boolean;\n  _constrain: Constrain;\n  constructor(\n    name: string,\n    constrain: (e: any) => boolean,\n    style: Object,\n    enable: boolean,\n    _constrain: Constrain\n  ) {\n    this.name = name;\n    this.style = style;\n    this.enable = enable;\n    this.constrain = constrain;\n    this._constrain = _constrain;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConstrianStyle.html":{"url":"interfaces/FieldConstrianStyle.html","title":"interface - FieldConstrianStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FieldConstrianStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is for configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            constrain\n                                        \n                                \n                                \n                                        \n                                            constrainName\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            propertyKey\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constrain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        constrain:         Constrain\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Constrain\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        constrainName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        constrainName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        propertyKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        propertyKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupColumn.html":{"url":"classes/GroupColumn.html","title":"class - GroupColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/litotable.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colspan\n                            \n                            \n                                columns\n                            \n                            \n                                count\n                            \n                            \n                                name\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addColumn\n                            \n                            \n                                updateColspan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/litotable.component.ts:333\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colspan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:333\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:330\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:331\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:329\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:332\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addColumn\n                        \n                    \n                \n            \n            \n                \naddColumn(c: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:353\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateColspan\n                        \n                    \n                \n            \n            \n                \nupdateColspan()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:337\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstriansStyle';\nimport { TableConfigurations } from './configurations/litotable.config';\nimport {\n  TableOperation,\n  TableOperationConfig,\n} from './configurations/tableCrud.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './litotable.component.html',\n  styleUrls: ['./litotable.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  columns: Column[] = [];\n  columnTypes = ColumnType;\n  numberConstrainType = MesurableConstrainType;\n  operationTypes = TableOperation;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable;\n  @Input('type') dataType!: Object;\n  @Input('operations') operations?: TableOperationConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(\n          x.propertyKey,\n          x.metadata.trigger,\n          x.metadata.style,\n          x.metadata.enable,\n          x.constrain\n        );\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(this.columns, this.selection);\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  openCreationForm() {\n    // this.creationFormOpen = !this.creationFormOpen;\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(columns: Column[] = [], selectable: boolean = false) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    if (selectable) this.columnNames.unshift('selection');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  constructor(name: string) {\n    this.name = name;\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order)\n      .reduce(\n        (a, c) => {\n          a.start = c.order  a.end ? c.order : a.end;\n          return a;\n        },\n        { start: Infinity, end: 0 }\n      );\n\n    this.colspan = this.columns.filter((x) => x.visible).length;\n    //this.start = groupData.start;\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    for (let i = 0; i  {\n        if (gc.columns.includes(element)) {\n          gc.updateColspan();\n          this.displayNames.splice(gc.start + 1, 1, gc.name);\n        }\n      });\n    }\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  style: Object;\n  constrain: (e: any) => boolean;\n  enable: boolean;\n  _constrain: Constrain;\n  constructor(\n    name: string,\n    constrain: (e: any) => boolean,\n    style: Object,\n    enable: boolean,\n    _constrain: Constrain\n  ) {\n    this.name = name;\n    this.style = style;\n    this.enable = enable;\n    this.constrain = constrain;\n    this._constrain = _constrain;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LitoColorPickerComponent.html":{"url":"components/LitoColorPickerComponent.html","title":"component - LitoColorPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LitoColorPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lito-color-picker\n            \n\n            \n                styleUrls\n                ./lito-color-picker.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lito-color-picker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                newColorArray\n                            \n                            \n                                result\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                \n                \n                    \n                        Type :         LitotableColor[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'color'\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:29\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        newColorArray\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { LitotableColor } from '../configurations/litotable.config';\n\nexport interface DialogColorData {\n  title: string;\n  value: string;\n  colors: LitotableColor[];\n}\n\n@Component({\n  selector: 'app-lito-color-picker',\n  templateUrl: './lito-color-picker.component.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class LitoColorPickerComponent implements OnInit {\n  @Input('colors') colors?: LitotableColor[];\n  @Input('content') content: string = 'color';\n  @Output('result') result: EventEmitter = new EventEmitter();\n  @Output('newColorArray') arr: EventEmitter =\n    new EventEmitter();\n  value?: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogColorPicker, {\n      width: '380px',\n      data: { colors: this.colors, value: this.value, title: this.content },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-color-picker.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class DialogColorPicker {\n  value: string = '';\n  nc: [number, number, number] = [0, 0, 0];\n  newColorString = 'rgb(255, 255, 255)';\n  fgc: string = '#222';\n  mainColors: LitotableColor[] = MAIN_COLORS;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogColorData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  changeNewColorValue(color: string, value: any) {\n    switch (color) {\n      case 'r':\n        this.nc[0] = value;\n        break;\n      case 'g':\n        this.nc[1] = value;\n        break;\n      case 'b':\n        this.nc[2] = value;\n        break;\n    }\n    this.newColorString = `rgb(${this.nc[0]}, ${this.nc[1]},${this.nc[2]})`;\n    if (this.nc.reduce((a, c) => a + c) / 3 \n    \n\n    \n        {{ content }}\n\n    \n\n    \n                \n                    ./lito-color-picker.component.css\n                \n                .colors-container {\n  margin: 1.5rem auto 0 !important;\n  width: 76%;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n\n.colors-container > * {\n  justify-self: center;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ content }}'\n    var COMPONENTS = [{'name': 'ConstrainCreationForm', 'selector': 'constrain-creation-form-dialog'},{'name': 'ConstrainCreatorComponent', 'selector': 'litotable-constrain-creator'},{'name': 'DialogColorPicker', 'selector': 'dialog-overview-example-dialog'},{'name': 'LitoColorPickerComponent', 'selector': 'app-lito-color-picker'},{'name': 'LitotableComponent', 'selector': 'lito-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LitoColorPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LitotableColor.html":{"url":"classes/LitotableColor.html","title":"class - LitotableColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LitotableColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/litotable.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value:  |  | string)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/litotable.config.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                     |  | string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/litotable.config.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LitotableColor {\n  value: string;\n  constructor(\n    value: [number, number, number] | [number, number, number, number] | string\n  ) {\n    this.value = '';\n    if (typeof value == 'string') {\n      this.value = value;\n    } else {\n      if (value.length == 3) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\n      } else if (value.length == 4) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\n      }\n    }\n  }\n}\nexport interface TableConfigurations {\n  paginationSizes?: number[];\n  hoverStyle?: RowStyle;\n  selectionStyle?: RowStyle;\n  rowStyleColors?: LitotableColor[];\n}\n\nexport enum RowStyle {\n  BORDER = 1,\n  SHADOW = 2,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LitotableModule.html":{"url":"modules/LitotableModule.html","title":"module - LitotableModule","body":"\n                   \n\n\n\n\n    Modules\n    LitotableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LitotableModule\n\n\n\ncluster_LitotableModule_exports\n\n\n\ncluster_LitotableModule_declarations\n\n\n\n\nConstrainCreationForm\n\nConstrainCreationForm\n\n\n\nLitotableModule\n\nLitotableModule\n\nLitotableModule -->\n\nConstrainCreationForm->LitotableModule\n\n\n\n\n\nConstrainCreatorComponent\n\nConstrainCreatorComponent\n\nLitotableModule -->\n\nConstrainCreatorComponent->LitotableModule\n\n\n\n\n\nCuitPipe\n\nCuitPipe\n\nLitotableModule -->\n\nCuitPipe->LitotableModule\n\n\n\n\n\nDialogColorPicker\n\nDialogColorPicker\n\nLitotableModule -->\n\nDialogColorPicker->LitotableModule\n\n\n\n\n\nLitoColorPickerComponent\n\nLitoColorPickerComponent\n\nLitotableModule -->\n\nLitoColorPickerComponent->LitotableModule\n\n\n\n\n\nLitotableComponent\n\nLitotableComponent\n\nLitotableModule -->\n\nLitotableComponent->LitotableModule\n\n\n\n\n\nPhonePipe\n\nPhonePipe\n\nLitotableModule -->\n\nPhonePipe->LitotableModule\n\n\n\n\n\nLitotableComponent \n\nLitotableComponent \n\nLitotableComponent  -->\n\nLitotableModule->LitotableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/litotable/litotable.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConstrainCreationForm\n                        \n                        \n                            ConstrainCreatorComponent\n                        \n                        \n                            CuitPipe\n                        \n                        \n                            DialogColorPicker\n                        \n                        \n                            LitoColorPickerComponent\n                        \n                        \n                            LitotableComponent\n                        \n                        \n                            PhonePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LitotableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CuitPipe } from './pipes/cuit.pipe';\nimport { LitotableComponent } from './litotable.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { PhonePipe } from './pipes/phone.pipe';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport {\n  LitoColorPickerComponent,\n  DialogColorPicker,\n} from './lito-color-picker/lito-color-picker.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {\n  ConstrainCreatorComponent,\n  ConstrainCreationForm,\n} from './constrain-creator/constrain-creator.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [\n    CuitPipe,\n    PhonePipe,\n    LitotableComponent,\n    LitoColorPickerComponent,\n    DialogColorPicker,\n    ConstrainCreatorComponent,\n    ConstrainCreationForm,\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    FormsModule,\n    MatSliderModule,\n    MatSelectModule,\n    MatStepperModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n  ],\n  exports: [LitotableComponent],\n})\nexport class LitotableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberConstrain.html":{"url":"classes/NumberConstrain.html","title":"class - NumberConstrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberConstrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is for numbers constrains (integer, float, decimal, etc..)\n\n            \n\n\n            \n                Implements\n            \n            \n                            Constrain\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enable\n                            \n                            \n                                style\n                            \n                            \n                                trigger\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: MesurableConstrainType, values: [number, number], style: Object, enable: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        MesurableConstrainType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    [number, number]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MesurableConstrainType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Operation.html":{"url":"classes/Operation.html","title":"class - Operation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Operation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: TableOperation)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        TableOperation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableOperation\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperationField.html":{"url":"interfaces/OperationField.html","title":"interface - OperationField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OperationField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            propertyKey\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        propertyKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        propertyKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhonePipe.html":{"url":"pipes/PhonePipe.html","title":"pipe - PhonePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PhonePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/litotable/pipes/phone.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        phone\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, format?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/pipes/phone.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'phone' })\nexport class PhonePipe implements PipeTransform {\n  transform(value: number, format?: string): string {\n    // format style: \"(###) ####-####\"\n    if (format) {\n      let result = value.toString().split('');\n      let _format = Array.from(format);\n      for (let i = _format.length - 1; i >= 0; i--) {\n        if (_format[i] == '#') {\n          const temp = result.pop();\n          if (temp) {\n            _format[i] = temp;\n          } else {\n            _format[i] = '0';\n          }\n        }\n      }\n      result = _format;\n      return result.join('');\n    }\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowConstrain.html":{"url":"classes/RowConstrain.html","title":"class - RowConstrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowConstrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/litotable.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _constrain\n                            \n                            \n                                constrain\n                            \n                            \n                                enable\n                            \n                            \n                                name\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, constrain: (e: any) => void, style: Object, enable: boolean, _constrain: Constrain)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/litotable.component.ts:387\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        constrain\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _constrain\n                                                  \n                                                        \n                                                                        Constrain\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _constrain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constrain\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:387\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constrain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:385\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:386\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:383\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:384\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstriansStyle';\nimport { TableConfigurations } from './configurations/litotable.config';\nimport {\n  TableOperation,\n  TableOperationConfig,\n} from './configurations/tableCrud.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './litotable.component.html',\n  styleUrls: ['./litotable.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  columns: Column[] = [];\n  columnTypes = ColumnType;\n  numberConstrainType = MesurableConstrainType;\n  operationTypes = TableOperation;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable;\n  @Input('type') dataType!: Object;\n  @Input('operations') operations?: TableOperationConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(\n          x.propertyKey,\n          x.metadata.trigger,\n          x.metadata.style,\n          x.metadata.enable,\n          x.constrain\n        );\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(this.columns, this.selection);\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  openCreationForm() {\n    // this.creationFormOpen = !this.creationFormOpen;\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(columns: Column[] = [], selectable: boolean = false) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    if (selectable) this.columnNames.unshift('selection');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  constructor(name: string) {\n    this.name = name;\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order)\n      .reduce(\n        (a, c) => {\n          a.start = c.order  a.end ? c.order : a.end;\n          return a;\n        },\n        { start: Infinity, end: 0 }\n      );\n\n    this.colspan = this.columns.filter((x) => x.visible).length;\n    //this.start = groupData.start;\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    for (let i = 0; i  {\n        if (gc.columns.includes(element)) {\n          gc.updateColspan();\n          this.displayNames.splice(gc.start + 1, 1, gc.name);\n        }\n      });\n    }\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  style: Object;\n  constrain: (e: any) => boolean;\n  enable: boolean;\n  _constrain: Constrain;\n  constructor(\n    name: string,\n    constrain: (e: any) => boolean,\n    style: Object,\n    enable: boolean,\n    _constrain: Constrain\n  ) {\n    this.name = name;\n    this.style = style;\n    this.enable = enable;\n    this.constrain = constrain;\n    this._constrain = _constrain;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringConstrain.html":{"url":"classes/StringConstrain.html","title":"class - StringConstrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringConstrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is for string constrains\n\n            \n\n\n            \n                Implements\n            \n            \n                            Constrain\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                caseSensitive\n                            \n                            \n                                constrainArray\n                            \n                            \n                                enable\n                            \n                            \n                                style\n                            \n                            \n                                trigger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConstrain\n                            \n                            \n                                clearConstrains\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(style: Object, enable: boolean, caseSense: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:141\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caseSense\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        caseSensitive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constrainArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StringConstrainObject[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:151\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConstrain\n                        \n                    \n                \n            \n            \n                \naddConstrain(stringConstrain: StringConstrainObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stringConstrain\n                                    \n                                                StringConstrainObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearConstrains\n                        \n                    \n                \n            \n            \n                \nclearConstrains()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StringConstrainObject.html":{"url":"interfaces/StringConstrainObject.html","title":"interface - StringConstrainObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StringConstrainObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         StringConstrainType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StringConstrainType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumnMetadata.html":{"url":"interfaces/TableColumnMetadata.html","title":"interface - TableColumnMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumnMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/decorators/column.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            columnName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contentAlign\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visible\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnGroup:         ColumnGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentAlign\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentAlign:         ColumnContentAlignment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnContentAlignment\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'reflect-metadata';\nexport interface TableColumnMetadata {\n  visible?: boolean;\n  order: number;\n  columnName?: string;\n  type?: ColumnType;\n  format?: string;\n  contentAlign?: ColumnContentAlignment;\n  columnGroup?: ColumnGroup;\n}\n\nexport interface ColumnGroup {\n  name: string;\n}\n\nexport function TableColumn(columnMetadata: TableColumnMetadata) {\n  return (target: Object, propertyKey: string) => {\n    const prevData = Reflect.getMetadata('columnsMetadata', target);\n    const newData = {\n      propertyKey: propertyKey,\n      metadata: columnMetadata,\n    };\n    let data = [];\n    if (prevData != undefined) {\n      data.push(...prevData);\n    }\n    data.push(newData);\n    Reflect.defineMetadata('columnsMetadata', data, target);\n  };\n}\n\nexport enum ColumnType {\n  STRING = 0,\n  INTEGER = 1,\n  FLOAT = 2,\n  DATE = 3,\n  CURRENCY = 4,\n  CUIT = 5,\n  PHONE = 6,\n}\n\nexport enum ColumnContentAlignment {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfigurations.html":{"url":"interfaces/TableConfigurations.html","title":"interface - TableConfigurations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableConfigurations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/litotable.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hoverStyle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            paginationSizes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowStyleColors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectionStyle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hoverStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hoverStyle:         RowStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowStyle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paginationSizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paginationSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowStyleColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowStyleColors:         LitotableColor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LitotableColor[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectionStyle:         RowStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowStyle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class LitotableColor {\n  value: string;\n  constructor(\n    value: [number, number, number] | [number, number, number, number] | string\n  ) {\n    this.value = '';\n    if (typeof value == 'string') {\n      this.value = value;\n    } else {\n      if (value.length == 3) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\n      } else if (value.length == 4) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\n      }\n    }\n  }\n}\nexport interface TableConfigurations {\n  paginationSizes?: number[];\n  hoverStyle?: RowStyle;\n  selectionStyle?: RowStyle;\n  rowStyleColors?: LitotableColor[];\n}\n\nexport enum RowStyle {\n  BORDER = 1,\n  SHADOW = 2,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableOperationConfig.html":{"url":"classes/TableOperationConfig.html","title":"class - TableOperationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableOperationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                operations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operations: Operation[])\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operations\n                                                  \n                                                        \n                                                                        Operation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        operations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Operation[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/litotable/column.ts\n            \n            class\n            Column\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            class\n            DateConstrain\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            class\n            NumberConstrain\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            class\n            StringConstrain\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            interface\n            Constrain\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            interface\n            FieldConstrianStyle\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            interface\n            StringConstrainObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/litotable.config.ts\n            \n            class\n            LitotableColor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/litotable.config.ts\n            \n            interface\n            TableConfigurations\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            class\n            CreateOperationConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            class\n            DeleteOperationConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            class\n            Operation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            class\n            TableOperationConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            interface\n            OperationField\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/litotable/constrain-creator/constrain-creator.component.ts\n            \n            component\n            ConstrainCreationForm\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/litotable/constrain-creator/constrain-creator.component.ts\n            \n            component\n            ConstrainCreatorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/litotable/constrain-creator/constrain-creator.component.ts\n            \n            class\n            ConstrainCreationFormData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/litotable/decorators/column.decorator.ts\n            \n            interface\n            ColumnGroup\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/litotable/decorators/column.decorator.ts\n            \n            interface\n            TableColumnMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/litotable/decorators/column.decorator.ts\n            \n            function\n            TableColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n            \n            component\n            DialogColorPicker\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n            \n            component\n            LitoColorPickerComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n            \n            interface\n            DialogColorData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n            \n            variable\n            MAIN_COLORS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            component\n            LitotableComponent\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            class\n            ColumnGroups\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            class\n            DisplayedColumns\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            class\n            GroupColumn\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            class\n            RowConstrain\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/litotable/pipes/cuit.pipe.ts\n            \n            pipe\n            CuitPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/litotable/pipes/phone.pipe.ts\n            \n            pipe\n            PhonePipe\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/cdk : ^12.2.13\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/material : ^12.2.13\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColumnContentAlignment   (src/.../column.decorator.ts)\n                        \n                        \n                            ColumnType   (src/.../column.decorator.ts)\n                        \n                        \n                            MesurableConstrainType   (src/.../fieldConstriansStyle.ts)\n                        \n                        \n                            RowStyle   (src/.../litotable.config.ts)\n                        \n                        \n                            StringConstrainType   (src/.../fieldConstriansStyle.ts)\n                        \n                        \n                            TableOperation   (src/.../tableCrud.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/litotable/decorators/column.decorator.ts\n    \n        \n            \n                \n                    \n                        \n                        ColumnContentAlignment\n                    \n                \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 CENTER\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ColumnType\n                    \n                \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                 INTEGER\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 FLOAT\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 CURRENCY\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 CUIT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 PHONE\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    src/app/litotable/configurations/fieldConstriansStyle.ts\n    \n        \n            \n                \n                    \n                        \n                        MesurableConstrainType\n                    \n                \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 MORETHAN\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 LESSTHAN\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 BETWEEN\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 NOTBETWEEN\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StringConstrainType\n                    \n                \n                        \n                            \n                                 STARTSWITH\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ENDWITH\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 CONTAINS\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/litotable/configurations/litotable.config.ts\n    \n        \n            \n                \n                    \n                        \n                        RowStyle\n                    \n                \n                        \n                            \n                                 BORDER\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SHADOW\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/litotable/configurations/tableCrud.config.ts\n    \n        \n            \n                \n                    \n                        \n                        TableOperation\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 RESTORE\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableColumn   (src/.../column.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/litotable/decorators/column.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TableColumn\n                        \n                    \n                \n            \n            \n                \nTableColumn(columnMetadata: TableColumnMetadata)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columnMetadata\n                                    \n                                                TableColumnMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LitotableModule\n\n\n\ncluster_LitotableModule_declarations\n\n\n\ncluster_LitotableModule_exports\n\n\n\n\nConstrainCreationForm\n\nConstrainCreationForm\n\n\n\nLitotableModule\n\nLitotableModule\n\nLitotableModule -->\n\nConstrainCreationForm->LitotableModule\n\n\n\n\n\nConstrainCreatorComponent\n\nConstrainCreatorComponent\n\nLitotableModule -->\n\nConstrainCreatorComponent->LitotableModule\n\n\n\n\n\nCuitPipe\n\nCuitPipe\n\nLitotableModule -->\n\nCuitPipe->LitotableModule\n\n\n\n\n\nDialogColorPicker\n\nDialogColorPicker\n\nLitotableModule -->\n\nDialogColorPicker->LitotableModule\n\n\n\n\n\nLitoColorPickerComponent\n\nLitoColorPickerComponent\n\nLitotableModule -->\n\nLitoColorPickerComponent->LitotableModule\n\n\n\n\n\nLitotableComponent\n\nLitotableComponent\n\nLitotableModule -->\n\nLitotableComponent->LitotableModule\n\n\n\n\n\nPhonePipe\n\nPhonePipe\n\nLitotableModule -->\n\nPhonePipe->LitotableModule\n\n\n\n\n\nLitotableComponent \n\nLitotableComponent \n\nLitotableComponent  -->\n\nLitotableModule->LitotableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        LitotableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MAIN_COLORS   (src/.../lito-color-picker.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MAIN_COLORS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LitotableColor[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  new LitotableColor('#000000'),\n  new LitotableColor('#434343'),\n  new LitotableColor('#666666'),\n  new LitotableColor('#999999'),\n  new LitotableColor('#b7b7b7'),\n  new LitotableColor('#cccccc'),\n  new LitotableColor('#d9d9d9'),\n  new LitotableColor('#efefef'),\n  new LitotableColor('#f3f3f3'),\n  new LitotableColor('#ffffff'),\n\n  new LitotableColor('#980000'),\n  new LitotableColor('#ff0000'),\n  new LitotableColor('#ff9900'),\n  new LitotableColor('#ffff00'),\n  new LitotableColor('#00ff00'),\n  new LitotableColor('#00ffff'),\n  new LitotableColor('#4a86e8'),\n  new LitotableColor('#0000ff'),\n  new LitotableColor('#9900ff'),\n  new LitotableColor('#ff00ff'),\n\n  new LitotableColor('#e6b8af'),\n  new LitotableColor('#f4cccc'),\n  new LitotableColor('#fce5cd'),\n  new LitotableColor('#fff2cc'),\n  new LitotableColor('#d9ead3'),\n  new LitotableColor('#d0e0e3'),\n  new LitotableColor('#c9daf8'),\n  new LitotableColor('#cfe2f3'),\n  new LitotableColor('#d9d2e9'),\n  new LitotableColor('#ead1dc'),\n\n  new LitotableColor('#dd7e6b'),\n  new LitotableColor('#ea9999'),\n  new LitotableColor('#f9cb9c'),\n  new LitotableColor('#ffe599'),\n  new LitotableColor('#b6d7a8'),\n  new LitotableColor('#a2c4c9'),\n  new LitotableColor('#a4c2f4'),\n  new LitotableColor('#9fc5e8'),\n  new LitotableColor('#b4a7d6'),\n  new LitotableColor('#d5a6bd'),\n\n  new LitotableColor('#cc4125'),\n  new LitotableColor('#e06666'),\n  new LitotableColor('#f6b26b'),\n  new LitotableColor('#ffd966'),\n  new LitotableColor('#93c47d'),\n  new LitotableColor('#76a5af'),\n  new LitotableColor('#6d9eeb'),\n  new LitotableColor('#6fa8dc'),\n  new LitotableColor('#8e7cc3'),\n  new LitotableColor('#c27ba0'),\n\n  new LitotableColor('#a61c00'),\n  new LitotableColor('#cc0000'),\n  new LitotableColor('#e69138'),\n  new LitotableColor('#f1c232'),\n  new LitotableColor('#6aa84f'),\n  new LitotableColor('#45818e'),\n  new LitotableColor('#3c78d8'),\n  new LitotableColor('#3d85c6'),\n  new LitotableColor('#674ea7'),\n  new LitotableColor('#a64d79'),\n\n  new LitotableColor('#85200c'),\n  new LitotableColor('#990000'),\n  new LitotableColor('#b45f06'),\n  new LitotableColor('#bf9000'),\n  new LitotableColor('#38761d'),\n  new LitotableColor('#134f5c'),\n  new LitotableColor('#1155cc'),\n  new LitotableColor('#0b5394'),\n  new LitotableColor('#351c75'),\n  new LitotableColor('#741b47'),\n\n  new LitotableColor('#5b0f00'),\n  new LitotableColor('#660000'),\n  new LitotableColor('#783f04'),\n  new LitotableColor('#7f6000'),\n  new LitotableColor('#274e13'),\n  new LitotableColor('#0c343d'),\n  new LitotableColor('#1c4587'),\n  new LitotableColor('#073763'),\n  new LitotableColor('#20124d'),\n  new LitotableColor('#4c1130'),\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Column.html",[0,0.097,1,1.396]],["body/classes/Column.html",[0,0.12,1,2.194,2,1.236,3,0.295,4,0.295,5,0.257,6,3.554,7,0.257,8,0.425,9,1.062,10,4.352,11,3.908,12,5.851,13,5.851,14,1.301,15,4.901,16,1.56,17,0.364,18,4.352,19,0.643,20,4.203,21,0.482,22,1.177,23,1.239,24,1.421,25,5.329,26,0.944,27,0.026,28,3.908,29,4.203,30,4.203,31,1.48,32,4.203,33,2.34,34,4.203,35,4.203,36,4.203,37,4.203,38,4.203,39,0.295,40,0.944,41,0.295,42,1.411,43,4.203,44,2.552,45,1.509,46,4.203,47,0.02,48,0.02]],["title/interfaces/ColumnGroup.html",[49,0.207,50,2.264]],["body/interfaces/ColumnGroup.html",[3,0.311,4,0.311,5,0.27,7,0.27,8,0.439,10,3.295,11,2.958,14,1.223,15,3.295,16,1.442,17,0.287,18,3.295,21,0.468,22,0.999,23,0.864,27,0.027,28,3.678,31,1.065,33,2.466,39,0.311,41,0.453,42,1.487,47,0.02,48,0.02,49,0.336,50,4.188,51,1.59,52,2.69,53,2.466,54,1.325,55,2.434,56,3.745,57,3.295,58,1.392,59,5.068,60,1.849,61,4.656,62,3.745,63,3.745,64,3.295,65,1.977,66,2.466,67,3.745,68,3.745,69,3.745,70,1.977,71,0.928,72,2.958,73,0.999,74,2.958,75,1.075,76,1.219,77,1.515,78,3.295,79,1.487,80,2.958,81,2.958,82,2.958,83,3.295,84,3.295,85,2.274,86,3.295]],["title/classes/ColumnGroups.html",[0,0.097,87,1.887]],["body/classes/ColumnGroups.html",[0,0.121,1,2.392,2,0.471,3,0.113,4,0.185,5,0.098,7,0.204,8,0.209,9,0.409,14,0.943,16,0.386,17,0.252,19,0.403,21,0.387,22,0.606,23,1.097,24,0.959,26,0.59,27,0.027,31,1.476,39,0.408,40,0.36,41,0.299,42,1.121,44,1.596,47,0.01,48,0.01,53,0.893,54,0.632,55,1.161,58,1.641,60,1.754,65,0.576,66,2.548,71,1.154,73,0.83,76,0.441,87,2.691,88,0.974,89,2.23,90,2.23,91,2.23,92,2.23,93,1.082,94,2.628,95,1.755,96,2.628,97,1.603,98,1.386,99,0.946,100,1.887,101,1.603,102,1.603,103,1.859,104,1.603,105,1.755,106,1.603,107,1.755,108,0.66,109,1.01,110,1.755,111,1.071,112,1.071,113,1.071,114,1.755,115,0.551,116,0.66,117,1.082,118,0.823,119,0.36,120,1.755,121,0.974,122,1.755,123,2.23,124,0.974,125,1.755,126,0.974,127,1.161,128,0.66,129,1.214,130,1.135,131,0.826,132,0.823,133,1.283,134,1.01,135,1.283,136,0.823,137,1.082,138,1.01,139,1.071,140,1.755,141,1.755,142,0.974,143,0.974,144,0.66,145,0.66,146,0.709,147,0.66,148,1.071,149,0.66,150,1.071,151,0.616,152,0.386,153,2.023,154,1.755,155,0.823,156,1.071,157,2.372,158,2.114,159,1.071,160,1.859,161,1.071,162,1.071,163,1.071,164,2.027,165,1.071,166,1.071,167,1.071,168,0.709,169,1.071,170,1.859,171,1.755,172,1.071,173,1.071,174,1.071,175,1.071,176,1.071,177,1.071,178,1.071,179,0.709,180,1.071,181,1.071,182,1.071,183,1.071,184,1.071,185,1.071,186,1.071,187,1.071,188,0.66,189,1.071,190,1.071,191,1.755,192,2.392,193,1.071,194,1.755,195,1.071,196,2.23,197,2.23,198,1.071,199,1.071,200,1.071,201,2.482,202,1.071,203,1.071,204,1.071,205,1.071,206,1.071,207,1.071,208,1.071,209,1.071,210,1.071,211,1.071,212,1.071,213,1.755,214,1.071,215,1.071,216,1.755,217,1.071,218,1.071,219,1.071,220,1.071,221,1.071,222,2.23,223,1.755,224,1.755,225,1.755,226,1.755,227,1.755,228,2.579,229,1.755,230,1.082,231,1.755,232,1.755,233,1.339,234,2.579,235,1.755,236,2.579,237,1.755,238,1.071,239,1.071,240,1.071,241,1.071,242,0.632,243,1.071,244,1.071,245,2.23,246,1.071,247,1.071,248,1.071,249,2.591,250,1.071,251,2.23,252,1.349,253,1.071,254,1.755,255,1.755,256,0.974,257,1.071,258,1.071,259,1.071,260,1.071,261,1.071,262,1.071,263,1.071,264,2.588,265,1.071,266,1.071,267,3.057,268,1.071,269,1.071,270,1.071,271,1.071,272,1.071,273,1.071,274,1.755,275,1.071,276,1.071,277,1.071,278,1.349,279,1.755,280,1.755,281,1.071,282,1.071,283,1.071,284,1.071,285,1.071,286,1.071,287,1.755,288,1.071,289,2.23,290,1.071,291,1.071,292,1.071,293,1.071,294,1.071,295,1.755,296,1.071,297,1.755,298,1.071,299,1.071,300,0.974,301,1.983,302,2.23,303,1.071,304,0.441,305,1.062,306,1.071,307,1.071,308,0.919,309,0.823,310,1.071,311,1.755,312,0.823,313,1.071,314,2.23,315,1.071,316,1.071,317,1.071,318,1.071,319,1.071,320,1.755,321,1.071,322,1.071,323,1.755,324,1.071,325,1.071,326,1.071,327,1.071,328,1.071,329,1.071,330,1.071,331,1.071,332,1.071,333,1.755,334,1.755,335,1.071,336,1.071,337,1.071,338,0.974,339,1.755,340,1.071,341,1.755,342,1.071,343,1.071,344,1.071,345,2.23,346,1.071,347,1.071,348,1.071,349,1.071,350,1.071,351,1.071,352,1.755,353,1.071,354,2.579,355,1.071,356,1.476,357,2.579,358,2.579,359,3.228,360,2.579,361,1.071,362,1.071,363,1.071,364,2.579,365,2.579,366,2.579,367,2.579,368,1.071,369,1.071,370,1.071,371,1.755,372,1.071,373,1.755,374,1.071,375,1.071,376,1.071,377,1.071,378,1.071,379,1.071,380,0.823,381,1.071,382,1.071,383,1.071,384,1.755,385,1.755,386,1.071,387,1.071,388,1.755,389,1.071,390,1.071,391,1.755,392,1.071,393,1.071,394,1.071,395,1.071,396,1.071,397,1.071,398,1.071,399,1.071,400,2.23,401,1.071,402,3.057,403,1.071,404,1.071,405,1.071,406,2.23,407,1.071,408,2.23,409,1.071,410,1.071,411,1.071,412,1.071,413,1.755,414,0.823,415,1.071,416,1.071,417,1.071,418,1.071,419,1.071,420,1.071,421,2.579,422,1.071,423,1.071,424,1.071,425,1.082,426,1.375,427,2.23,428,0.66,429,0.66,430,1.071,431,1.071]],["title/interfaces/Constrain.html",[49,0.207,129,0.815]],["body/interfaces/Constrain.html",[0,0.142,3,0.267,4,0.267,5,0.232,7,0.232,8,0.398,16,0.915,17,0.336,19,0.459,21,0.351,22,0.906,27,0.027,31,1.589,33,2.781,39,0.267,40,0.854,41,0.392,42,1.873,45,2.003,47,0.019,48,0.019,49,0.376,51,1.366,54,0.915,58,2.052,71,0.797,75,0.975,76,1.738,100,1.99,129,1.549,130,1.118,131,1.57,152,0.915,192,2.601,233,2.052,242,0.915,304,1.375,305,1.738,308,1.63,425,2.813,426,2.69,428,1.566,429,1.566,432,1.809,433,2.309,434,3.516,435,2.117,436,2.117,437,2.117,438,1.461,439,2.466,440,2.117,441,2.208,442,3.637,443,2.208,444,2.208,445,2.781,446,2.117]],["title/components/ConstrainCreationForm.html",[115,0.71,447,1.498]],["body/components/ConstrainCreationForm.html",[0,0.097,1,2.168,3,0.115,4,0.115,5,0.1,7,0.1,8,0.213,9,0.671,14,0.952,17,0.319,19,0.323,21,0.41,22,0.297,23,0.903,24,1.319,26,0.968,27,0.027,39,0.343,40,0.368,41,0.238,47,0.01,48,0.01,54,0.394,60,0.55,65,1.661,71,0.343,73,0.485,76,1.629,85,2.214,93,1.102,98,1.661,99,1.052,100,0.55,108,2.23,109,2.13,115,0.82,116,0.675,117,1.102,118,0.842,119,0.368,129,1.482,130,0.997,131,1.065,132,0.842,144,2.23,145,1.102,146,0.724,147,1.396,149,1.396,151,0.63,152,0.394,153,1.498,155,1.741,158,2.066,164,1.625,170,0.912,188,1.775,233,1.065,242,0.644,249,0.842,252,1.741,256,1.625,264,0.995,300,1.625,301,3,304,1.273,305,1.828,308,1.742,309,1.374,312,1.374,338,2.809,380,1.374,414,1.741,438,1.028,439,0.724,441,1.183,443,1.183,444,1.183,447,1.729,448,1.625,449,0.724,450,1.095,451,1.095,452,1.095,453,4.228,454,3.844,455,1.095,456,2.058,457,2.058,458,2.4,459,2.91,460,1.99,461,2.575,462,2.522,463,2.4,464,2.522,465,2.522,466,3.207,467,2.522,468,2.809,469,2.522,470,3.207,471,2.675,472,2.91,473,2.91,474,2.675,475,2.178,476,3.39,477,2.675,478,2.91,479,1.386,480,2.4,481,2.618,482,2.522,483,2.91,484,1.639,485,1.99,486,1.639,487,1.99,488,1.639,489,1.639,490,1.639,491,1.639,492,1.99,493,1.639,494,1.99,495,1.639,496,1.639,497,1.639,498,1.639,499,1.639,500,2.262,501,1.489,502,1.639,503,3.63,504,3.207,505,1.99,506,1.639,507,1.639,508,1.639,509,1.639,510,1.639,511,1.639,512,2.522,513,1.99,514,1.639,515,1.639,516,1.639,517,1.639,518,1.887,519,0.912,520,0.912,521,1.489,522,0.912,523,0.842,524,0.912,525,1.489,526,0.842,527,0.78,528,0.995,529,1.095,530,1.625,531,1.219,532,1.219,533,1.183,534,1.219,535,0.912,536,0.912,537,0.912,538,1.219,539,1.219,540,1.219,541,0.912,542,0.912,543,1.219,544,1.219,545,1.99,546,1.219,547,1.219,548,1.99,549,1.99,550,1.99,551,1.99,552,1.99,553,1.99,554,2.91,555,0.912,556,1.219,557,1.219,558,1.219,559,1.219,560,2.522,561,1.99,562,2.522,563,1.99,564,1.219,565,1.355,566,1.99,567,1.99,568,1.99,569,2.522,570,2.522,571,1.219,572,2.522,573,1.219,574,4.207,575,1.99,576,1.99,577,2.91,578,1.99,579,4.281,580,1.99,581,2.522,582,2.91,583,1.219,584,1.99,585,1.99,586,3.63,587,3.63,588,2.879,589,1.99,590,3.207,591,1.219,592,1.99,593,1.219,594,1.219,595,1.219,596,1.219,597,1.219,598,1.99,599,2.522,600,1.219,601,1.219,602,1.99,603,1.219,604,1.219,605,1.99,606,1.219,607,1.219,608,1.219,609,2.675,610,2.675,611,4.625,612,2.675,613,3.912,614,1.99,615,1.374,616,2.675,617,3.912,618,3.912,619,3.912,620,3.912,621,3.912,622,3.308,623,3.912,624,3.912,625,5.089,626,3.912,627,5.656,628,1.639,629,2.675,630,1.639,631,2.675,632,1.639,633,2.675,634,2.262,635,1.775,636,1.386,637,2.264,638,3.911,639,0.995,640,1.386,641,2.264,642,1.386,643,1.787,644,2.262,645,2.262,646,1.386,647,2.262,648,2.262,649,1.386,650,1.386,651,1.386,652,1.386,653,1.095,654,1.787,655,1.787,656,1.095,657,2.613,658,1.095,659,1.639,660,1.639,661,1.787,662,1.095,663,0.724,664,0.842,665,0.995,666,0.724,667,0.995,668,1.095,669,1.095,670,1.095]],["title/classes/ConstrainCreationFormData.html",[0,0.097,481,2.058]],["body/classes/ConstrainCreationFormData.html",[0,0.128,1,2.286,2,0.747,3,0.178,4,0.178,5,0.155,7,0.155,8,0.3,17,0.29,19,0.307,21,0.372,22,0.461,23,0.969,24,0.532,27,0.027,39,0.404,40,0.571,41,0.315,47,0.014,48,0.014,60,0.853,65,1.352,71,0.532,73,0.461,76,1.581,98,1.352,99,1.014,100,0.853,109,1.447,115,0.94,116,1.046,117,1.551,118,1.304,119,0.571,129,1.42,130,1.107,131,1.183,132,1.304,144,1.551,147,1.551,149,1.551,152,0.611,153,2.343,155,1.304,158,2.202,188,1.551,233,0.798,242,0.906,249,1.304,252,2.304,301,2.851,304,1.528,305,1.904,308,1.852,309,1.934,312,1.934,380,1.304,414,1.934,438,1.447,439,1.123,441,1.665,443,1.665,444,1.665,447,1.123,453,2.515,454,2.287,455,1.697,456,1.542,457,1.542,458,2.097,459,2.801,460,1.889,461,2.097,462,1.889,463,2.097,464,1.889,465,1.889,466,1.889,467,1.889,468,2.725,469,1.889,470,1.889,472,1.889,473,1.889,475,1.414,478,1.889,480,2.097,481,2.725,482,1.889,483,2.801,485,1.889,487,1.889,492,1.889,494,1.889,501,1.414,503,3.692,504,3.338,505,1.889,512,2.801,513,1.889,518,2.498,519,1.414,520,1.414,521,2.097,522,1.414,523,1.304,524,1.414,525,2.097,526,1.304,527,1.208,528,1.542,529,1.697,530,1.542,531,1.889,532,1.889,533,1.123,534,1.889,535,1.414,536,1.414,537,1.414,538,1.889,539,1.889,540,1.889,541,1.414,542,1.414,543,1.889,544,1.889,545,2.801,546,1.889,547,1.889,548,2.801,549,2.801,550,2.801,551,2.801,552,2.801,553,2.801,554,3.692,555,1.414,556,1.889,557,1.889,558,1.889,559,1.889,560,3.338,561,2.801,562,3.338,563,2.801,564,1.889,565,1.56,566,2.801,567,2.801,568,2.801,569,3.338,570,3.338,571,1.889,572,3.338,573,1.889,574,4.685,575,2.801,576,2.801,577,3.692,578,2.801,579,4.734,580,2.801,581,3.338,582,3.692,583,1.889,584,2.801,585,2.801,586,1.889,587,1.889,588,3.315,589,2.801,590,3.943,591,1.889,592,2.801,593,1.889,594,1.889,595,1.889,596,1.889,597,1.889,598,2.801,599,3.338,600,1.889,601,1.889,602,2.801,603,1.889,604,1.889,605,2.801,606,1.889,607,1.889,608,1.889,671,2.54]],["title/components/ConstrainCreatorComponent.html",[115,0.71,533,1.498]],["body/components/ConstrainCreatorComponent.html",[0,0.116,1,2.145,3,0.151,4,0.151,5,0.131,7,0.131,8,0.265,9,0.335,14,0.792,17,0.3,19,0.401,21,0.346,22,0.39,23,1.016,24,1.091,26,0.483,27,0.027,39,0.381,40,0.483,41,0.285,47,0.012,48,0.012,54,0.518,60,0.722,65,1.193,71,0.451,73,0.602,76,1.494,85,2.531,93,1.368,98,1.193,99,0.968,100,0.722,108,1.368,109,1.753,115,0.956,116,0.886,117,1.67,118,1.105,119,0.483,129,1.556,130,0.977,131,1.044,132,1.105,144,2.42,145,1.368,146,0.951,147,1.67,149,1.67,151,0.827,152,0.799,153,2.179,155,1.105,158,2.11,170,1.198,188,2.03,233,0.676,242,1.097,249,1.105,252,2.083,301,2.675,304,1.433,305,1.878,308,1.814,309,1.705,312,1.705,380,1.105,414,1.705,438,1.276,439,0.951,441,1.468,443,1.468,444,1.468,447,1.468,448,2.017,449,0.951,450,1.437,451,1.437,452,1.437,453,3.627,454,3.297,455,1.437,456,2.017,457,2.017,458,3.023,459,3.393,460,1.6,461,2.539,462,1.6,463,1.849,464,1.6,465,1.6,466,1.6,467,1.6,468,2.463,469,1.6,470,1.6,472,1.6,473,1.6,475,1.198,478,1.6,480,1.849,481,2.017,482,1.6,483,2.471,485,1.6,487,1.6,492,1.6,494,1.6,501,1.198,503,3.393,504,3.017,505,1.6,512,2.471,513,1.6,518,2.539,519,1.198,520,1.198,521,2.744,522,1.198,523,1.105,524,1.198,525,1.849,526,1.105,527,1.023,528,1.307,529,1.437,530,2.463,531,2.471,532,2.471,533,2.016,534,1.6,535,1.198,536,1.198,537,2.539,538,1.6,539,1.6,540,1.6,541,1.198,542,1.198,543,1.6,544,1.6,545,2.471,546,1.6,547,1.6,548,2.471,549,2.471,550,2.471,551,2.471,552,2.471,553,2.471,554,3.393,555,1.198,556,1.6,557,1.6,558,1.6,559,1.6,560,3.017,561,2.471,562,3.017,563,2.471,564,1.6,565,1.549,566,2.471,567,2.471,568,2.471,569,3.017,570,3.017,571,1.6,572,3.017,573,1.6,574,4.517,575,2.471,576,2.471,577,3.393,578,2.471,579,4.575,580,2.471,581,3.017,582,3.393,583,1.6,584,2.471,585,2.471,586,1.6,587,1.6,588,3.292,589,2.471,590,3.667,591,1.6,592,2.471,593,1.6,594,1.6,595,1.6,596,1.6,597,1.6,598,2.471,599,3.017,600,1.6,601,1.6,602,2.471,603,1.6,604,1.6,605,2.471,606,1.6,607,1.6,608,1.6,634,2.808,635,2.03,636,1.819,637,2.709,638,4.405,639,1.307,640,1.819,641,2.709,642,1.819,643,2.218,644,2.808,645,2.808,646,1.819,647,2.808,648,2.808,649,1.819,650,1.819,651,1.819,652,1.819,653,1.437,654,2.218,655,2.218,656,1.437,657,3.046,658,1.437,661,2.218,662,1.437,663,0.951,664,1.105,665,1.307,666,0.951,667,1.307,668,1.437,669,1.437,670,1.437,672,2.808,673,2.808,674,1.819,675,2.152,676,2.152,677,2.152,678,2.152,679,2.152,680,2.152]],["title/classes/CreateOperationConfig.html",[0,0.097,681,1.741]],["body/classes/CreateOperationConfig.html",[0,0.178,2,1.292,3,0.309,4,0.309,5,0.268,7,0.268,8,0.437,9,0.684,14,0.857,16,1.057,17,0.351,19,0.662,21,0.309,22,0.994,24,1.251,26,0.987,27,0.027,39,0.385,40,0.987,41,0.452,45,1.578,47,0.02,48,0.02,49,0.268,70,1.578,73,0.797,75,0.857,77,1.209,79,1.476,137,2.574,138,1.689,179,2.422,527,2.09,615,2.256,681,2.814,682,2.256,683,3.626,684,3.417,685,3.907,686,3.328,687,3.369,688,5.48,689,3.716,690,3.716,691,2.668,692,2.668,693,2.668,694,2.668,695,2.256,696,2.668,697,2.668,698,2.256,699,2.668,700,2.446,701,2.446,702,2.446]],["title/pipes/CuitPipe.html",[703,2.058,704,2.058]],["body/pipes/CuitPipe.html",[0,0.138,3,0.339,4,0.339,5,0.295,9,0.751,14,1.214,17,0.252,21,0.464,23,1.214,24,1.011,26,1.084,27,0.026,39,0.339,41,0.339,47,0.022,48,0.022,54,1.161,58,1.516,75,0.942,80,3.876,93,1.987,98,1.733,99,0.976,108,1.987,119,1.084,152,1.161,242,1.396,703,3.524,704,3.524,705,3.59,706,4.081,707,4.081,708,4.908,709,6.607,710,4.826,711,4.908,712,4.081,713,4.826,714,4.826,715,4.826,716,4.826,717,4.081]],["title/classes/DateConstrain.html",[0,0.097,438,1.303]],["body/classes/DateConstrain.html",[0,0.154,2,1.049,3,0.25,4,0.25,5,0.218,7,0.218,8,0.381,9,0.555,14,0.696,16,0.858,17,0.349,19,0.578,21,0.336,22,0.868,24,1.299,26,0.801,27,0.027,31,1.586,39,0.25,40,0.801,41,0.379,42,2.083,45,1.94,47,0.018,48,0.018,49,0.353,54,0.858,58,2.023,71,0.747,75,0.934,76,1.854,98,1.28,99,0.6,100,1.939,129,1.492,130,1.049,131,1.893,152,1.151,192,2.554,233,2.05,242,0.858,304,1.317,305,1.706,308,1.589,425,2.789,426,2.686,428,1.468,429,1.468,432,1.696,433,2.165,434,3.354,435,1.985,436,1.985,437,2.665,438,1.839,439,2.801,440,1.985,441,2.116,442,3.585,443,2.116,444,2.116,445,2.665,446,1.985,695,1.831,718,4.786,719,3.566,720,3.566,721,3.566,722,3.566]],["title/classes/DeleteOperationConfig.html",[0,0.097,698,1.741]],["body/classes/DeleteOperationConfig.html",[0,0.18,2,1.323,3,0.316,4,0.316,5,0.275,7,0.275,8,0.443,16,1.083,17,0.344,19,0.729,21,0.316,22,1.009,24,1.165,27,0.027,39,0.391,40,1.011,41,0.455,45,1.616,47,0.021,48,0.021,49,0.275,70,1.616,73,0.816,75,0.878,77,1.238,79,1.511,137,2.596,138,1.729,179,2.458,527,2.141,615,2.311,681,2.311,682,2.311,683,3.665,684,3.434,685,3.377,686,2.733,687,3.099,689,3.805,690,3.805,691,2.733,692,2.733,693,2.733,694,2.733,695,2.311,696,2.733,697,2.733,698,2.856,699,2.733,700,2.505,701,2.505,702,2.505,723,4.5]],["title/interfaces/DialogColorData.html",[49,0.207,724,2.058]],["body/interfaces/DialogColorData.html",[0,0.141,3,0.263,4,0.263,5,0.229,7,0.229,8,0.394,17,0.289,19,0.452,21,0.471,23,1.081,27,0.027,39,0.389,41,0.389,47,0.018,48,0.018,49,0.229,51,1.346,60,1.258,65,1.776,71,1.16,77,1.031,99,1.128,109,2.128,115,1.16,116,1.543,117,2.037,119,0.842,136,1.924,144,2.037,145,2.426,147,2.037,149,2.037,152,0.901,158,1.776,188,1.543,201,2.54,242,1.19,278,1.924,304,1.031,305,1.524,308,1.524,458,3.279,461,2.754,463,2.754,475,2.086,480,2.754,501,2.086,518,3.409,519,2.086,520,2.086,521,2.754,522,2.086,523,1.924,535,2.086,536,2.086,537,2.086,541,2.086,542,2.086,555,2.086,565,2.07,635,1.543,639,2.275,663,1.656,664,1.924,665,2.275,666,1.656,667,2.275,724,3.363,725,2.275,726,2.086,727,2.275,728,4.679,729,2.913,730,2.417,731,2.787,732,2.787,733,3.68,734,2.787,735,2.787,736,2.787,737,2.787,738,2.787,739,2.787,740,2.787,741,1.782,742,2.787,743,2.787,744,2.787,745,2.787,746,2.787,747,3.68,748,2.787,749,2.787,750,2.787,751,2.275,752,2.787,753,2.787,754,2.787,755,2.787,756,2.787,757,2.787,758,2.787,759,2.787,760,2.787,761,2.787]],["title/components/DialogColorPicker.html",[115,0.71,663,1.498]],["body/components/DialogColorPicker.html",[0,0.115,3,0.197,4,0.197,5,0.171,7,0.171,8,0.322,9,0.629,14,1.014,17,0.322,19,0.488,21,0.451,23,1.121,24,1.315,26,0.908,27,0.026,39,0.333,41,0.333,47,0.015,48,0.015,49,0.171,54,0.673,60,0.94,65,2.063,71,1.241,77,0.77,85,1.437,93,1.665,98,1.98,99,1.119,108,1.665,109,2.119,115,1.089,116,1.153,117,1.665,119,0.629,129,0.973,136,1.437,144,2.497,145,2.497,146,1.237,147,1.954,149,1.954,151,1.076,152,0.673,153,1.237,158,1.452,188,1.153,201,2.076,242,0.973,278,1.437,304,0.77,305,1.306,308,1.306,447,1.237,448,2.455,449,1.787,450,1.87,451,1.87,452,1.87,456,1.7,457,1.7,458,3.377,461,3.199,463,3.07,475,2.894,479,2.367,480,3.07,500,2.367,501,2.251,518,3.07,519,1.558,520,1.558,521,2.251,522,1.558,523,1.437,530,1.7,533,1.237,535,1.558,536,1.558,537,1.558,541,1.558,542,1.558,555,1.558,565,2.184,635,1.153,637,1.87,639,2.455,641,1.87,643,1.87,653,1.87,654,2.7,655,2.7,656,1.87,657,3.472,658,1.87,661,2.7,662,1.87,663,2.298,664,2.437,665,2.882,666,1.787,667,2.455,668,1.87,669,1.87,670,1.87,724,3.348,725,3.858,726,3.537,727,1.7,728,4.101,729,1.923,730,2.119,731,2.082,732,2.082,733,3.867,734,2.082,735,2.082,736,2.082,737,2.082,738,2.082,739,2.082,740,2.082,741,1.331,742,2.082,743,3.008,744,3.531,745,3.531,746,3.008,747,3.867,748,3.531,749,3.008,750,3.531,751,2.455,752,3.008,753,2.082,754,2.082,755,2.082,756,2.082,757,2.082,758,2.082,759,2.082,760,2.082,761,2.082,762,4.043,763,4.043,764,2.799,765,2.799,766,2.799,767,2.799,768,2.799,769,2.799,770,2.799,771,2.799,772,2.799,773,5.198,774,3.419,775,2.367,776,2.367,777,2.367,778,2.367,779,3.419,780,2.367,781,2.367,782,2.367,783,2.367,784,2.367,785,2.799]],["title/classes/DisplayedColumns.html",[0,0.097,157,1.887]],["body/classes/DisplayedColumns.html",[0,0.12,1,2.495,2,0.463,3,0.111,4,0.182,5,0.096,7,0.201,8,0.206,9,0.403,14,0.936,16,0.379,17,0.271,19,0.398,21,0.385,22,0.693,23,1.013,24,1.148,26,0.582,27,0.027,31,1.521,39,0.406,40,0.354,41,0.297,42,1.108,44,1.573,47,0.01,48,0.01,53,0.877,54,0.623,55,1.145,58,1.631,60,1.743,65,0.566,66,2.528,71,1.12,73,0.824,76,0.434,87,2.89,88,0.957,89,1.053,90,1.053,91,1.053,92,1.053,93,1.067,95,1.053,99,0.843,100,1.839,103,1.443,105,1.053,107,1.053,108,1.574,109,1.623,110,1.731,111,1.053,112,1.053,113,1.053,114,1.731,115,0.543,116,0.649,117,1.067,118,0.809,119,0.354,120,1.731,121,0.957,122,1.731,123,2.204,124,0.957,125,1.731,126,0.957,127,1.145,128,0.649,129,1.206,130,1.124,131,0.814,132,0.809,133,1.268,134,0.996,135,1.268,136,0.809,137,1.067,138,0.996,139,1.053,140,1.731,141,1.731,142,0.957,143,0.957,144,0.649,145,0.649,146,0.697,147,0.649,148,1.053,149,0.649,150,1.053,151,0.606,152,0.379,153,2.295,154,2.552,155,0.809,156,1.053,157,2.528,158,2.105,159,1.053,160,1.837,161,1.053,162,1.053,163,1.053,164,2.003,165,1.053,166,1.053,167,1.053,168,0.697,169,1.053,170,1.837,171,1.731,172,1.053,173,1.053,174,1.053,175,1.053,176,1.053,177,1.053,178,1.053,179,0.697,180,1.053,181,1.053,182,1.053,183,1.053,184,1.053,185,1.053,186,1.053,187,1.053,188,0.649,189,1.053,190,1.053,191,1.731,192,2.381,193,1.053,194,1.731,195,1.053,196,2.204,197,2.204,198,1.053,199,1.053,200,1.053,201,2.464,202,1.053,203,1.053,204,1.053,205,1.053,206,1.053,207,1.053,208,1.053,209,1.053,210,1.053,211,1.053,212,1.053,213,1.731,214,1.053,215,1.053,216,1.731,217,1.053,218,1.053,219,1.053,220,1.053,221,1.053,222,2.204,223,1.731,224,1.731,225,1.731,226,1.731,227,1.731,228,2.552,229,1.731,230,1.067,231,1.731,232,1.731,233,1.327,234,2.552,235,1.731,236,2.552,237,1.731,238,1.053,239,1.053,240,1.053,241,1.053,242,0.623,243,1.053,244,1.053,245,2.204,246,1.053,247,1.053,248,1.053,249,2.573,250,1.053,251,2.204,252,1.33,253,1.053,254,1.731,255,1.731,256,0.957,257,1.053,258,1.053,259,1.053,260,1.053,261,1.053,262,1.053,263,1.053,264,2.564,265,1.053,266,1.053,267,3.032,268,1.053,269,1.053,270,1.053,271,1.053,272,1.053,273,1.053,274,1.731,275,1.053,276,1.053,277,1.053,278,1.33,279,1.731,280,1.731,281,1.053,282,1.053,283,1.053,284,1.053,285,1.053,286,1.053,287,1.731,288,1.053,289,2.204,290,1.053,291,1.053,292,1.053,293,1.053,294,1.053,295,1.731,296,1.053,297,1.731,298,1.053,299,1.053,300,0.957,301,1.962,302,2.204,303,1.053,304,0.434,305,1.051,306,1.053,307,1.053,308,0.908,309,0.809,310,1.053,311,1.731,312,0.809,313,1.053,314,2.204,315,1.053,316,1.053,317,1.053,318,1.053,319,1.053,320,1.731,321,1.053,322,1.053,323,1.731,324,1.053,325,1.053,326,1.053,327,1.053,328,1.053,329,1.053,330,1.053,331,1.053,332,1.053,333,1.731,334,1.731,335,1.053,336,1.053,337,1.053,338,0.957,339,1.731,340,1.053,341,1.731,342,1.053,343,1.053,344,1.053,345,2.204,346,1.053,347,1.053,348,1.053,349,1.053,350,1.053,351,1.053,352,1.731,353,2.204,354,3.347,355,2.204,356,1.867,357,2.552,358,2.552,359,3.205,360,2.552,361,1.053,362,1.053,363,1.053,364,2.552,365,2.552,366,2.552,367,2.552,368,1.053,369,1.053,370,1.731,371,1.731,372,1.053,373,1.731,374,2.552,375,2.552,376,1.053,377,2.552,378,1.053,379,1.053,380,0.809,381,1.053,382,1.053,383,1.053,384,1.731,385,1.731,386,1.053,387,1.053,388,1.731,389,1.053,390,1.053,391,1.731,392,1.053,393,1.053,394,1.053,395,1.053,396,1.053,397,1.053,398,1.053,399,1.053,400,2.204,401,1.053,402,3.032,403,1.053,404,1.053,405,1.053,406,2.204,407,1.053,408,2.204,409,1.053,410,1.053,411,1.053,412,1.053,413,1.731,414,0.809,415,1.053,416,1.053,417,1.053,418,1.053,419,1.053,420,1.053,421,2.552,422,1.053,423,1.053,424,1.053,425,1.067,426,1.359,427,2.204,428,0.649,429,0.649,430,1.053,431,1.053,786,2.591,787,1.576,788,2.591,789,1.576,790,1.576,791,1.576,792,1.576,793,1.576,794,1.576,795,1.576,796,1.576,797,1.576]],["title/interfaces/FieldConstrianStyle.html",[49,0.207,130,0.997]],["body/interfaces/FieldConstrianStyle.html",[0,0.14,3,0.261,4,0.261,5,0.227,7,0.227,8,0.392,16,1.412,17,0.355,19,0.448,21,0.441,22,1.065,27,0.027,31,1.54,39,0.261,40,0.834,41,0.387,42,1.851,45,1.98,47,0.018,48,0.018,49,0.373,51,1.333,54,1.412,58,2.042,71,0.778,75,0.959,76,1.726,100,1.971,129,1.597,130,1.446,131,1.545,152,0.893,192,2.583,233,1.918,242,0.893,304,1.353,305,1.726,308,1.615,425,2.804,426,2.514,428,1.529,429,1.529,432,1.766,433,2.254,434,3.069,435,2.737,436,3.267,437,2.067,438,1.427,439,2.437,440,2.067,441,2.173,442,3.618,443,2.173,444,2.173,445,2.737,446,2.067,798,3.657]],["title/classes/GroupColumn.html",[0,0.097,103,1.887]],["body/classes/GroupColumn.html",[0,0.12,1,2.409,2,0.46,3,0.11,4,0.181,5,0.095,7,0.2,8,0.205,9,0.511,14,1.066,16,0.376,17,0.278,19,0.396,21,0.399,22,0.595,23,1.088,24,1.144,26,0.737,27,0.027,31,1.491,39,0.405,40,0.351,41,0.295,42,1.101,44,1.563,47,0.01,48,0.01,53,0.87,54,0.619,55,1.137,58,1.626,60,1.738,65,0.561,66,2.518,71,1.169,73,0.867,76,0.43,87,2.518,88,0.949,89,1.044,90,1.044,91,1.044,92,1.044,93,1.06,95,1.044,98,1.365,99,0.938,100,1.834,103,1.826,105,1.044,107,1.044,108,1.566,109,1.461,110,1.719,111,1.044,112,1.044,113,1.044,114,1.719,115,0.539,116,0.644,117,1.06,118,0.803,119,0.351,120,1.719,121,0.949,122,1.719,123,2.191,124,0.949,125,1.719,126,0.949,127,1.137,128,0.644,129,1.202,130,1.118,131,0.809,132,0.803,133,1.26,134,0.989,135,1.26,136,0.803,137,1.06,138,0.989,139,1.044,140,1.719,141,1.719,142,0.949,143,0.949,144,0.644,145,0.644,146,0.691,147,0.644,148,1.044,149,0.644,150,1.044,151,0.601,152,0.376,153,2.208,154,1.719,155,0.803,156,1.044,157,2.34,158,2.101,159,1.044,160,1.826,161,1.044,162,1.044,163,1.044,164,1.992,165,1.044,166,1.044,167,1.044,168,0.691,169,1.044,170,1.826,171,1.719,172,1.044,173,1.044,174,1.044,175,1.044,176,1.044,177,1.044,178,1.044,179,0.691,180,1.044,181,1.044,182,1.044,183,1.044,184,1.044,185,1.044,186,1.044,187,1.044,188,0.644,189,1.044,190,1.044,191,1.719,192,2.376,193,1.044,194,1.719,195,1.044,196,2.191,197,2.191,198,1.044,199,1.044,200,1.044,201,2.565,202,1.044,203,1.044,204,1.044,205,1.044,206,1.044,207,1.044,208,1.044,209,1.044,210,1.044,211,1.044,212,1.044,213,1.719,214,1.044,215,1.044,216,1.719,217,1.044,218,1.044,219,1.044,220,1.044,221,1.044,222,2.191,223,1.719,224,1.719,225,1.719,226,1.719,227,1.719,228,2.539,229,1.719,230,1.06,231,1.719,232,1.719,233,1.321,234,2.539,235,1.719,236,2.539,237,1.719,238,1.044,239,1.044,240,1.044,241,1.044,242,0.619,243,1.044,244,1.044,245,2.191,246,1.044,247,1.044,248,1.044,249,2.565,250,1.044,251,2.191,252,1.321,253,1.044,254,1.719,255,1.719,256,0.949,257,1.044,258,1.044,259,1.044,260,1.044,261,1.044,262,1.044,263,1.044,264,2.553,265,1.044,266,1.044,267,3.02,268,1.044,269,1.044,270,1.044,271,1.044,272,1.044,273,1.044,274,1.719,275,1.044,276,1.044,277,1.044,278,1.321,279,1.719,280,1.719,281,1.044,282,1.044,283,1.044,284,1.044,285,1.044,286,1.044,287,1.719,288,1.044,289,2.191,290,1.044,291,1.044,292,1.044,293,1.044,294,1.044,295,1.719,296,1.044,297,2.191,298,1.044,299,1.044,300,0.949,301,1.952,302,2.191,303,1.044,304,0.43,305,1.046,306,1.044,307,1.044,308,0.902,309,0.803,310,1.044,311,1.719,312,0.803,313,1.044,314,2.191,315,1.044,316,1.044,317,1.044,318,1.044,319,1.044,320,1.719,321,1.044,322,1.044,323,1.719,324,1.044,325,1.044,326,1.044,327,1.044,328,1.044,329,1.044,330,1.044,331,1.044,332,1.044,333,1.719,334,1.719,335,1.044,336,1.044,337,1.044,338,0.949,339,1.719,340,1.044,341,1.719,342,1.044,343,1.044,344,1.044,345,2.191,346,1.044,347,1.044,348,1.044,349,1.044,350,1.044,351,1.044,352,1.719,353,1.044,354,2.539,355,1.044,356,1.45,357,2.539,358,2.539,359,3.193,360,2.539,361,1.044,362,1.044,363,1.044,364,2.539,365,2.539,366,2.539,367,2.539,368,1.044,369,1.044,370,1.044,371,1.719,372,1.044,373,1.719,374,1.044,375,1.044,376,1.044,377,1.044,378,1.044,379,2.191,380,1.684,381,2.191,382,2.191,383,1.719,384,1.719,385,1.719,386,2.539,387,1.044,388,1.719,389,1.044,390,1.044,391,1.719,392,1.044,393,1.044,394,1.719,395,1.044,396,1.044,397,1.719,398,2.539,399,1.044,400,2.191,401,1.044,402,3.02,403,1.044,404,1.044,405,1.044,406,2.191,407,1.044,408,2.191,409,1.044,410,1.044,411,1.044,412,1.044,413,1.719,414,0.803,415,1.044,416,1.044,417,1.044,418,1.044,419,1.044,420,1.044,421,2.539,422,1.044,423,1.044,424,1.044,425,1.06,426,1.351,427,2.191,428,0.644,429,0.644,430,1.044,431,1.044,799,2.573,800,2.573,801,2.573,802,1.563,803,1.563,804,1.563,805,1.563,806,1.563,807,1.563,808,1.563,809,1.563,810,1.563]],["title/components/LitoColorPickerComponent.html",[115,0.71,666,1.498]],["body/components/LitoColorPickerComponent.html",[0,0.119,3,0.206,4,0.206,5,0.179,7,0.179,8,0.333,9,0.758,14,0.951,17,0.313,19,0.505,21,0.439,23,0.951,24,1.31,26,0.659,27,0.026,39,0.342,41,0.342,47,0.016,48,0.016,49,0.179,54,0.706,60,0.985,65,1.502,71,1.113,77,0.807,85,1.507,93,1.722,98,1.054,99,1.079,108,1.722,109,2.158,115,1.113,116,1.208,117,2.007,119,0.659,129,1.006,136,1.507,144,2.529,145,2.61,146,1.297,147,2.007,149,2.007,151,1.128,152,1.006,153,1.297,158,1.502,188,2.187,201,2.147,242,1.278,278,1.507,304,0.807,305,1.341,308,1.341,447,1.297,448,2.54,449,1.849,450,1.96,451,1.96,452,1.96,456,1.782,457,1.782,458,3.419,461,2.957,463,2.328,475,1.634,480,2.328,501,1.634,518,3.345,519,1.634,520,1.634,521,3.126,522,1.634,523,1.507,530,1.782,533,1.297,535,1.634,536,1.634,537,2.957,541,1.634,542,1.634,555,1.634,565,2.189,635,2.312,637,1.96,639,2.54,641,1.96,643,1.96,653,1.96,654,2.793,655,2.793,656,1.96,657,3.548,658,1.96,661,2.793,662,1.96,663,1.849,664,2.147,665,2.54,666,2.348,667,2.959,668,1.96,669,1.96,670,1.96,672,3.536,673,3.536,674,2.481,724,2.54,725,3.85,726,3.529,727,1.782,728,4.469,729,1.989,730,2.158,731,3.111,732,3.111,733,3.951,734,2.183,735,2.183,736,2.183,737,2.183,738,2.183,739,2.183,740,2.183,741,1.396,742,2.183,743,2.183,744,2.183,745,2.183,746,2.183,747,3.111,748,2.183,749,2.183,750,2.183,751,1.782,752,2.183,753,2.183,754,2.183,755,2.183,756,2.183,757,2.183,758,2.183,759,2.183,760,2.183,761,2.183,774,3.536,775,2.481,776,2.481,777,2.481,778,2.481,779,3.536,780,2.481,781,2.481,782,2.481,783,2.481,784,2.481,811,4.182,812,4.182,813,2.934,814,2.934,815,2.934,816,2.934,817,2.934,818,2.934,819,2.934]],["title/interfaces/LitoFooterAction.html",[49,0.207,820,1.741]],["body/interfaces/LitoFooterAction.html",[0,0.112,3,0.275,4,0.275,5,0.239,7,0.239,8,0.406,9,1.023,17,0.338,19,0.473,21,0.487,23,1.283,27,0.027,31,1.495,39,0.358,41,0.447,47,0.019,48,0.019,49,0.366,51,1.408,70,1.408,73,0.711,75,0.765,77,1.079,79,1.316,99,1.009,115,1.256,119,0.881,127,2.503,128,1.614,133,1.958,134,1.958,135,1.507,168,1.733,230,2.331,356,1.733,449,2.65,565,1.952,635,2.559,729,1.865,730,1.958,741,2.851,798,3.791,820,2.907,821,2.013,822,3.773,823,3.773,824,2.381,825,2.381,826,3.094,827,2.381,828,2.381,829,2.381,830,2.381,831,2.381,832,3.094,833,3.094,834,3.094,835,3.094,836,2.381,837,2.381,838,2.381,839,2.381,840,2.381,841,2.381,842,2.381,843,2.381,844,2.183,845,2.183]],["title/interfaces/LitoRowAction.html",[49,0.207,133,1.303]],["body/interfaces/LitoRowAction.html",[0,0.113,3,0.278,4,0.278,5,0.241,7,0.241,8,0.408,9,0.798,17,0.339,19,0.477,21,0.487,23,1.285,27,0.027,31,1.499,39,0.36,41,0.448,47,0.019,48,0.019,49,0.367,51,1.42,70,1.42,73,0.717,75,0.771,77,1.088,79,1.328,99,1.012,115,1.074,119,0.888,127,2.513,128,1.628,133,2.184,134,2.311,135,1.519,168,2.658,230,2.341,356,1.748,449,1.748,565,1.958,635,2.11,729,1.881,730,1.969,741,2.86,798,3.811,820,2.631,821,2.03,822,3.783,823,3.783,824,2.401,825,2.401,826,3.111,827,2.401,828,3.652,829,2.401,830,2.401,831,2.401,832,3.111,833,3.111,834,3.111,835,3.111,836,2.401,837,2.401,838,2.401,839,2.401,840,2.401,841,2.401,842,2.401,843,2.401,844,2.201,845,2.201]],["title/interfaces/LitoRowActionConfirmation.html",[49,0.207,134,1.303]],["body/interfaces/LitoRowActionConfirmation.html",[0,0.117,3,0.288,4,0.288,5,0.25,7,0.25,8,0.418,17,0.274,19,0.495,21,0.486,23,1.295,27,0.027,31,1.516,39,0.368,41,0.453,47,0.019,48,0.019,49,0.372,51,1.472,70,1.472,73,0.743,75,0.8,77,1.128,79,1.376,99,1.026,115,1.099,119,0.921,127,2.556,128,1.688,133,2.015,134,2.222,135,1.575,168,1.812,230,2.381,356,1.812,449,1.812,565,1.648,635,2.594,729,2.899,730,2.015,741,2.899,820,2.693,821,2.104,822,3.184,823,3.184,824,2.489,825,2.489,826,3.184,827,2.489,828,2.489,829,2.489,830,2.489,831,2.489,832,3.184,833,3.184,834,3.184,835,3.184,836,2.489,837,2.489,838,2.489,839,2.489,840,2.489,841,2.489,842,2.489,843,2.489,844,2.282,845,2.282]],["title/classes/LitotableColor.html",[0,0.097,730,1.303]],["body/classes/LitotableColor.html",[0,0.115,2,1.189,3,0.284,4,0.284,5,0.247,7,0.247,8,0.414,9,0.63,14,0.789,17,0.271,19,0.628,21,0.484,23,1.291,24,1.09,26,0.909,27,0.027,31,1.509,39,0.365,41,0.451,47,0.019,48,0.019,49,0.37,70,1.452,73,0.734,75,0.789,77,1.113,79,1.358,99,1.099,115,1.09,119,0.909,127,2.54,128,1.666,133,1.998,134,1.998,135,1.554,168,1.788,230,2.366,356,1.788,449,1.788,565,1.634,635,2.141,729,1.924,730,2.208,741,2.885,820,2.67,821,2.077,822,3.158,823,3.158,824,2.456,825,2.456,826,3.158,827,2.456,828,2.456,829,2.456,830,2.456,831,2.456,832,3.158,833,3.158,834,3.158,835,3.158,836,2.456,837,2.456,838,2.456,839,2.456,840,2.456,841,2.456,842,2.456,843,2.456,844,2.252,845,2.252,846,4.045,847,5.2]],["title/modules/LitotableModule.html",[848,2.866,849,2.264]],["body/modules/LitotableModule.html",[0,0.098,3,0.242,4,0.242,5,0.211,27,0.027,39,0.495,41,0.242,47,0.017,48,0.017,119,0.774,121,2.093,124,2.093,126,2.093,129,0.829,142,2.093,143,2.093,145,1.419,151,2.56,447,2.714,454,2.093,523,1.77,528,2.841,529,2.302,533,2.714,565,1.47,614,2.564,663,2.714,666,2.714,704,3.729,726,1.919,849,4.592,850,2.564,851,3.125,852,2.915,853,2.915,854,2.915,855,3.729,856,3.956,857,2.915,858,3.447,859,4.678,860,4.678,861,4.678,862,4.678,863,2.915,864,3.447,865,3.447,866,4.678,867,4.678,868,4.678,869,3.447,870,3.447,871,4.678,872,3.447,873,4.678,874,3.447,875,4.678,876,3.447,877,4.678,878,4.678,879,3.447,880,4.678,881,4.678,882,4.678,883,3.447,884,4.678,885,3.447,886,4.678,887,3.447,888,4.678,889,3.447,890,4.678,891,4.678,892,3.447,893,4.678,894,4.678,895,3.447,896,4.678,897,4.678,898,3.447,899,3.447,900,4.678,901,3.447,902,4.678,903,3.447,904,4.678,905,4.678,906,3.447,907,4.678,908,3.447,909,4.678,910,3.447,911,4.678,912,3.447,913,4.678,914,4.678,915,3.447,916,3.447]],["title/classes/NumberConstrain.html",[0,0.097,524,1.887]],["body/classes/NumberConstrain.html",[0,0.154,2,1.043,3,0.249,4,0.249,5,0.217,7,0.217,8,0.38,9,0.552,14,0.692,16,0.853,17,0.349,19,0.576,21,0.335,22,0.865,23,1.208,24,1.298,26,0.797,27,0.027,31,1.584,39,0.249,40,0.797,41,0.378,42,2.08,45,1.935,47,0.018,48,0.018,49,0.352,54,0.853,58,2.021,71,0.743,72,2.37,74,2.37,75,0.931,76,1.704,98,1.274,99,0.597,100,1.935,129,1.49,130,1.043,131,1.889,152,1.148,192,2.55,233,2.048,242,0.853,304,1.312,305,1.704,308,1.586,425,2.787,426,2.683,428,1.461,429,1.461,432,1.687,433,2.154,434,3.348,435,1.975,436,1.975,437,2.656,438,1.363,439,2.797,440,1.975,441,2.109,442,3.581,443,2.109,444,2.109,445,2.656,446,1.975,524,1.975,695,1.822,917,3.548,918,3.548,919,3.548,920,4.77,921,3.548,922,3.548,923,3.548,924,3.548]],["title/classes/Operation.html",[0,0.097,684,1.741]],["body/classes/Operation.html",[0,0.179,2,1.315,3,0.314,4,0.314,5,0.273,7,0.273,8,0.441,9,0.696,14,0.873,16,1.076,17,0.352,19,0.669,21,0.314,22,1.005,24,1.161,26,1.005,27,0.027,39,0.389,40,1.005,41,0.454,45,1.606,47,0.021,48,0.021,49,0.273,70,1.606,73,0.811,75,0.873,77,1.23,79,1.502,137,2.713,138,1.718,179,2.449,527,2.127,615,2.296,681,2.296,682,2.296,683,3.364,684,3.383,685,3.364,686,2.715,687,3.091,691,2.715,692,2.715,693,2.715,694,2.715,695,2.844,696,2.715,697,2.715,698,2.296,699,2.715,700,2.489,701,2.489,702,2.489,925,5.54]],["title/interfaces/OperationField.html",[49,0.207,687,1.741]],["body/interfaces/OperationField.html",[0,0.179,3,0.313,4,0.313,5,0.272,7,0.272,8,0.441,9,0.861,16,1.512,17,0.355,19,0.538,21,0.422,22,1.14,27,0.027,39,0.388,40,1.001,41,0.454,45,1.6,47,0.021,48,0.021,49,0.272,51,1.6,70,1.6,73,0.809,75,0.87,77,1.226,79,1.497,137,2.475,138,1.713,179,2.444,527,2.989,615,2.289,681,2.289,682,2.289,683,3.357,684,3.317,685,3.357,686,2.707,687,3.227,691,2.707,692,2.707,693,2.707,694,2.707,695,2.289,696,2.707,697,2.707,698,2.289,699,2.707,700,2.482,701,2.482,702,2.482]],["title/pipes/PhonePipe.html",[703,2.058,855,2.058]],["body/pipes/PhonePipe.html",[0,0.131,3,0.322,4,0.322,5,0.28,9,0.714,11,4.351,14,1.188,17,0.239,21,0.458,23,1.188,24,0.961,26,1.031,27,0.027,39,0.322,41,0.322,47,0.021,48,0.021,54,1.104,58,1.769,60,1.541,71,1.179,73,0.832,82,3.759,93,1.89,99,0.772,108,1.89,119,1.031,152,1.104,233,1.442,242,1.354,703,3.418,705,3.413,707,3.88,708,4.759,711,4.759,712,3.88,717,3.88,855,3.418,926,3.88,927,4.589,928,4.589,929,5.629,930,4.589,931,4.589,932,6.089,933,6.089,934,4.589,935,4.589]],["title/classes/RowConstrain.html",[0,0.097,160,1.887]],["body/classes/RowConstrain.html",[0,0.122,1,2.318,2,0.474,3,0.113,4,0.185,5,0.098,7,0.205,8,0.21,9,0.251,14,1.021,16,0.388,17,0.253,19,0.405,21,0.402,22,0.608,23,1.021,24,0.961,26,0.362,27,0.027,31,1.5,33,1.469,39,0.409,40,0.362,41,0.3,42,1.541,44,1.602,47,0.01,48,0.01,53,0.897,54,0.635,55,1.166,58,1.644,60,1.757,65,0.579,66,2.555,71,1.128,73,0.832,76,0.443,87,2.555,88,0.979,89,1.076,90,1.076,91,1.076,92,1.076,95,1.076,99,0.851,100,1.852,103,1.469,105,1.076,107,1.076,109,1.014,110,1.762,111,1.076,112,1.076,113,1.076,114,1.762,115,0.553,116,0.664,117,1.087,118,0.827,119,0.362,120,1.762,121,0.979,122,1.762,123,2.238,124,0.979,125,1.762,126,0.979,127,1.166,128,0.664,129,1.418,130,1.139,131,0.829,132,0.827,133,1.288,134,1.014,135,1.288,136,0.827,137,1.087,138,1.014,139,1.076,140,1.762,141,1.762,142,0.979,143,0.979,144,0.664,145,0.664,146,0.712,147,0.664,148,1.076,149,0.664,150,1.076,151,0.619,152,0.388,153,2.028,154,1.762,155,0.827,156,1.076,157,2.379,158,2.117,159,1.076,160,2.156,161,1.076,162,1.076,163,1.076,164,2.035,165,1.076,166,1.076,167,1.076,168,0.712,169,1.076,170,1.865,171,1.762,172,1.076,173,1.076,174,1.076,175,1.076,176,1.076,177,1.076,178,1.076,179,0.712,180,1.076,181,1.076,182,1.076,183,1.076,184,1.076,185,1.076,186,1.076,187,1.076,188,0.664,189,1.076,190,1.076,191,1.762,192,2.395,193,1.076,194,1.762,195,1.076,196,2.238,197,2.238,198,1.076,199,1.076,200,1.076,201,2.488,202,1.076,203,1.076,204,1.076,205,1.076,206,1.076,207,1.076,208,1.076,209,1.076,210,1.076,211,1.076,212,1.076,213,1.762,214,1.076,215,1.076,216,1.762,217,1.076,218,1.076,219,1.076,220,1.076,221,1.076,222,2.238,223,1.762,224,1.762,225,1.762,226,1.762,227,1.762,228,2.587,229,1.762,230,1.087,231,1.762,232,1.762,233,1.644,234,2.587,235,1.762,236,2.587,237,1.762,238,1.076,239,1.076,240,1.076,241,1.076,242,0.635,243,1.076,244,1.076,245,2.238,246,1.076,247,1.076,248,1.076,249,2.596,250,1.076,251,2.238,252,1.355,253,1.076,254,1.762,255,1.762,256,0.979,257,1.076,258,1.076,259,1.076,260,1.076,261,1.076,262,1.076,263,1.076,264,2.595,265,1.076,266,1.076,267,3.065,268,1.076,269,1.076,270,1.076,271,1.076,272,1.076,273,1.076,274,1.762,275,1.076,276,1.076,277,1.076,278,1.355,279,1.762,280,1.762,281,1.076,282,1.076,283,1.076,284,1.076,285,1.076,286,1.076,287,1.762,288,1.076,289,2.238,290,1.076,291,1.076,292,1.076,293,1.076,294,1.076,295,1.762,296,1.076,297,1.762,298,1.076,299,1.076,300,0.979,301,1.989,302,2.238,303,1.076,304,0.443,305,1.066,306,1.076,307,1.076,308,0.922,309,0.827,310,1.076,311,1.762,312,0.827,313,1.076,314,2.238,315,1.076,316,1.076,317,1.076,318,1.076,319,1.076,320,1.762,321,1.076,322,1.076,323,1.762,324,1.076,325,1.076,326,1.076,327,1.076,328,1.076,329,1.076,330,1.076,331,1.076,332,1.076,333,1.762,334,1.762,335,1.076,336,1.076,337,1.076,338,0.979,339,1.762,340,1.076,341,1.762,342,1.076,343,1.076,344,1.076,345,2.238,346,1.076,347,1.076,348,1.076,349,1.076,350,1.076,351,1.076,352,1.762,353,1.076,354,2.587,355,1.076,356,1.481,357,2.587,358,2.587,359,3.236,360,2.587,361,1.076,362,1.076,363,1.076,364,2.587,365,2.587,366,2.587,367,2.587,368,1.076,369,1.076,370,1.076,371,1.762,372,1.076,373,1.762,374,1.076,375,1.076,376,1.076,377,1.076,378,1.076,379,1.076,380,0.827,381,1.076,382,1.076,383,1.762,384,1.762,385,1.762,386,1.076,387,1.076,388,1.762,389,1.076,390,1.076,391,1.762,392,1.076,393,1.076,394,1.076,395,1.076,396,1.076,397,1.076,398,1.076,399,1.076,400,2.238,401,1.076,402,3.065,403,1.076,404,1.076,405,1.076,406,2.238,407,1.076,408,2.238,409,1.076,410,1.076,411,1.076,412,1.076,413,1.762,414,0.827,415,1.076,416,1.076,417,1.076,418,1.076,419,1.076,420,1.076,421,2.587,422,1.076,423,1.076,424,1.076,425,1.38,426,1.995,427,3.236,428,0.664,429,0.664,430,1.076,431,1.076,936,2.639,937,1.611,938,1.611,939,1.611,940,1.611]],["title/classes/StringConstrain.html",[0,0.097,525,1.887]],["body/classes/StringConstrain.html",[0,0.152,2,1.019,3,0.243,4,0.243,5,0.212,7,0.212,8,0.374,9,0.731,14,0.916,16,0.833,17,0.342,19,0.567,21,0.374,22,0.851,24,1.34,26,1.055,27,0.027,31,1.614,39,0.243,40,0.778,41,0.374,42,2.065,45,1.912,47,0.017,48,0.017,49,0.349,54,0.833,58,2.01,71,0.726,75,0.916,76,1.692,93,1.933,98,1.686,99,0.79,100,1.917,108,1.933,109,1.804,129,1.479,130,1.019,131,1.475,152,1.129,192,2.532,233,2.01,242,0.833,304,1.292,305,1.692,308,1.57,425,2.778,426,2.67,428,1.427,429,1.427,432,1.648,433,2.104,434,3.321,435,1.929,436,1.929,437,2.613,438,1.331,439,2.353,440,1.929,441,2.075,442,3.562,443,2.075,444,2.075,445,2.613,446,1.929,525,2.613,526,2.734,941,4.694,942,4.694,943,4.694,944,5.324,945,3.464,946,4.694,947,4.694,948,3.464,949,3.464,950,3.464,951,3.464,952,3.464,953,3.464,954,3.464]],["title/interfaces/StringConstrainObject.html",[49,0.207,526,1.741]],["body/interfaces/StringConstrainObject.html",[0,0.143,3,0.27,4,0.27,5,0.235,7,0.235,8,0.401,16,0.925,17,0.345,19,0.464,21,0.418,22,0.913,27,0.027,31,1.553,39,0.27,40,0.864,41,0.394,42,1.883,45,2.014,47,0.019,48,0.019,49,0.363,51,1.381,54,0.925,58,2.057,71,0.806,75,0.982,76,1.743,99,0.944,100,1.998,129,1.486,130,1.131,131,1.581,152,0.925,192,2.609,233,1.94,242,0.925,304,1.384,305,1.743,308,1.637,425,2.817,426,2.543,428,1.583,429,1.583,432,1.829,434,3.123,435,2.141,436,2.141,437,2.141,438,1.478,439,2.479,440,2.141,441,2.224,442,3.645,443,2.224,444,2.224,445,2.801,446,2.141,468,3.055,526,1.974]],["title/interfaces/TableColumnMetadata.html",[49,0.207,55,1.498]],["body/interfaces/TableColumnMetadata.html",[3,0.287,4,0.287,5,0.249,7,0.249,8,0.417,9,1.063,10,4.527,11,4.065,14,0.796,15,4.527,16,1.388,17,0.354,18,4.527,21,0.47,22,1.104,23,1.126,27,0.026,28,4.065,31,1.388,33,2.272,39,0.287,41,0.442,42,1.37,47,0.019,48,0.019,49,0.319,50,4.427,51,1.465,52,2.478,53,2.272,54,1.258,55,2.551,56,5.146,57,3.035,58,1.282,59,4.879,60,1.756,61,4.422,62,3.45,63,3.45,64,3.035,65,1.878,66,2.272,67,3.45,68,3.45,69,3.45,70,1.878,71,0.855,72,2.725,73,0.949,74,2.725,75,1.02,76,1.123,77,1.439,78,3.035,79,1.37,80,2.725,81,2.725,82,2.725,83,3.035,84,3.035,85,2.095,86,3.035]],["title/interfaces/TableConfigurations.html",[49,0.207,135,1.303]],["body/interfaces/TableConfigurations.html",[0,0.108,3,0.265,4,0.265,5,0.231,7,0.231,8,0.396,9,1.071,17,0.34,19,0.456,21,0.471,23,1.3,27,0.027,31,1.587,39,0.349,41,0.443,47,0.018,48,0.018,49,0.361,51,1.356,70,1.356,73,0.685,75,0.737,77,1.039,79,1.269,99,0.994,115,1.042,119,0.849,127,2.458,128,1.555,133,2.271,134,1.911,135,1.911,168,1.67,230,2.647,356,2.612,449,1.67,565,1.563,635,2.048,729,1.797,730,2.271,741,2.811,820,3.034,821,1.94,822,3.02,823,3.02,824,2.294,825,2.294,826,3.02,827,2.294,828,2.294,829,2.294,830,2.294,831,2.294,832,3.02,833,3.02,834,3.02,835,3.02,836,2.294,837,3.588,838,3.588,839,3.588,840,3.588,841,3.588,842,3.588,843,3.588,844,2.103,845,2.103]],["title/classes/TableOperationConfig.html",[0,0.097,138,1.303]],["body/classes/TableOperationConfig.html",[0,0.179,2,1.315,3,0.314,4,0.314,5,0.273,7,0.273,8,0.441,9,0.696,14,0.873,16,1.076,17,0.337,19,0.669,21,0.314,22,1.005,24,1.161,26,1.005,27,0.027,39,0.389,40,1.005,41,0.454,45,1.606,47,0.021,48,0.021,49,0.273,70,1.606,73,0.811,75,0.873,77,1.23,79,1.502,137,2.478,138,2.129,179,2.858,527,2.127,615,2.296,681,2.296,682,2.296,683,3.364,684,3.465,685,3.364,686,2.715,687,3.091,691,2.715,692,2.715,693,3.364,694,2.715,695,2.296,696,2.715,697,2.715,698,2.296,699,2.715,700,2.489,701,2.489,702,2.489,955,5.54]],["title/coverage.html",[956,3.911]],["body/coverage.html",[0,0.195,1,1.555,5,0.231,6,3.194,17,0.197,27,0.026,33,2.103,47,0.018,48,0.018,49,0.41,50,2.523,52,3.377,55,1.67,71,1.478,87,2.103,88,3.728,103,2.103,115,1.287,129,0.909,130,1.111,133,1.452,134,1.452,135,1.452,138,1.452,146,1.67,151,1.452,157,2.103,158,1.356,160,2.103,432,2.999,438,1.452,447,1.67,453,3.714,454,3.377,455,3.714,481,2.294,524,2.103,525,2.103,526,1.94,533,1.67,565,2.049,663,1.67,666,1.67,681,1.94,682,3.153,684,1.94,687,1.94,698,1.94,703,3.02,704,2.294,706,3.194,724,2.294,725,3.588,726,3.29,727,3.588,730,1.452,751,2.294,820,1.94,821,3.153,855,2.294,926,3.194,956,3.194,957,3.778,958,3.778,959,3.778,960,4.974,961,4.206,962,4.974,963,3.194,964,3.778,965,3.778,966,3.778,967,3.778,968,3.778,969,6.304,970,4.974,971,3.778,972,5.56,973,3.778,974,5.56,975,4.974,976,3.778,977,3.194,978,5.909,979,3.778,980,3.778,981,3.778,982,4.974,983,3.778]],["title/dependencies.html",[851,2.723,984,2.394]],["body/dependencies.html",[27,0.026,47,0.022,48,0.022,119,1.145,128,2.1,528,3.096,851,3.405,863,4.311,985,5.099,986,6.909,987,5.099,988,5.996,989,5.099,990,5.099,991,5.996,992,5.07,993,5.099,994,5.099,995,5.099,996,5.099,997,5.099,998,5.099,999,5.099]],["title/miscellaneous/enumerations.html",[1000,1.576,1001,3.447]],["body/miscellaneous/enumerations.html",[7,0.274,21,0.315,22,1.007,27,0.026,28,3.707,47,0.021,48,0.021,52,2.724,72,2.996,73,1.196,74,2.996,75,1.287,76,1.234,77,1.781,78,3.337,79,2.024,80,2.996,81,3.707,82,2.996,83,3.337,84,3.337,85,2.303,86,3.337,99,1.192,131,1.744,137,2.286,230,2.286,432,2.134,468,3.371,588,2.996,615,2.303,622,3.793,682,2.303,700,2.497,701,2.497,702,2.497,821,2.303,844,2.497,845,2.497,1000,2.497,1001,3.793,1002,4.693,1003,5.551,1004,4.486,1005,4.486,1006,4.486,1007,4.486,1008,4.486,1009,4.486,1010,4.486,1011,4.486]],["title/miscellaneous/functions.html",[1000,1.576,1012,3.447]],["body/miscellaneous/functions.html",[7,0.327,9,0.835,14,1.046,17,0.28,26,1.205,27,0.024,47,0.023,48,0.023,52,3.256,55,2.73,57,3.989,64,3.989,977,5.221,1000,2.985,1002,4.534,1012,4.534]],["title/index.html",[7,0.207,664,1.741]],["body/index.html",[2,1.429,27,0.026,47,0.022,48,0.022,51,1.745,73,0.881,75,0.948,81,3.246,151,2.611,447,2.759,448,2.951,533,2.759,614,3.615,663,2.759,664,2.495,666,2.759,704,3.791,705,3.615,848,4.109,849,4.723,851,3.892,852,4.109,853,4.109,854,4.109,855,3.791,856,4.928,857,4.109,961,4.109,963,4.109]],["title/modules.html",[850,3.441]],["body/modules.html",[27,0.023,47,0.023,48,0.023,849,3.652,850,4.067,992,4.623,1013,5.467,1014,5.467,1015,5.467]],["title/properties.html",[8,0.325,984,2.394]],["body/properties.html",[8,0.437,27,0.024,47,0.023,48,0.023,1016,5.489,1017,5.489]],["title/miscellaneous/variables.html",[1000,1.576,1018,3.447]],["body/miscellaneous/variables.html",[7,0.249,17,0.213,27,0.024,47,0.019,48,0.019,98,1.463,99,0.686,158,2.588,565,1.812,725,2.474,726,2.268,727,3.172,730,1.566,751,3.172,1000,2.268,1018,3.445,1019,4.074,1020,4.074,1021,4.074,1022,4.074,1023,4.074,1024,4.074,1025,4.074,1026,4.074,1027,4.074,1028,4.074,1029,4.074,1030,4.074,1031,4.074,1032,4.074,1033,4.074,1034,4.074,1035,4.074,1036,4.074,1037,4.074,1038,4.074,1039,4.074,1040,4.074,1041,4.074,1042,4.074,1043,4.074,1044,4.074,1045,4.074,1046,4.074,1047,4.074,1048,4.074,1049,4.074,1050,4.074,1051,4.074,1052,4.074,1053,4.074,1054,4.074,1055,4.074,1056,4.074,1057,4.074,1058,4.074,1059,4.074,1060,4.074,1061,4.074,1062,4.074,1063,4.074,1064,4.074,1065,4.074,1066,4.074,1067,4.074,1068,4.074,1069,4.074,1070,4.074,1071,4.074,1072,4.074,1073,4.074,1074,4.074,1075,4.074,1076,4.074,1077,4.074,1078,4.074,1079,4.074,1080,4.074,1081,4.074,1082,4.074,1083,4.074,1084,4.074,1085,4.074,1086,4.074,1087,4.074,1088,4.074,1089,4.074,1090,4.074,1091,4.074,1092,4.074,1093,4.074,1094,4.074,1095,4.074,1096,4.074,1097,4.074,1098,4.074,1099,4.074]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":71,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1017,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":73,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.5rem",{"_index":775,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["1/4",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":715,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["100",{"_index":640,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["11",{"_index":963,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["12.2.0",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["12.2.13",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":961,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["16",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["1fr",{"_index":781,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["1rem",{"_index":645,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["2",{"_index":75,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/FieldConstrianStyle.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["2.3.0",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["222",{"_index":749,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["25",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":747,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["3",{"_index":77,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["380px",{"_index":739,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["4",{"_index":79,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["4000",{"_index":343,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["5",{"_index":81,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["6",{"_index":83,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["6.6.0",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["76",{"_index":778,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["80vh",{"_index":540,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["888",{"_index":568,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["_constrain",{"_index":427,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["_format",{"_index":929,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["_format.length",{"_index":931,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["_format[i",{"_index":932,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["_formbuilder",{"_index":482,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["_liveannouncer",{"_index":187,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["a.includes(c",{"_index":422,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["a.order",{"_index":279,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["a.push(c",{"_index":423,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["a.push(includes",{"_index":420,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["action",{"_index":171,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["action.actionresult.actionobservable",{"_index":336,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["action.actionresult.actionobservable.subscribe",{"_index":337,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["action.actionresult.willdeleterow",{"_index":333,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["action.actionresult.willupdaterow",{"_index":332,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["actioncolumn",{"_index":355,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["actionobservable",{"_index":826,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["actionresult",{"_index":822,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["actionscolumn",{"_index":356,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{}}}],["actiontddiv",{"_index":329,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["active",{"_index":89,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["actual_component",{"_index":670,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["addcolumn",{"_index":799,"title":{},"body":{"classes/GroupColumn.html":{}}}],["addcolumn(c",{"_index":394,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["addcolumn(column",{"_index":276,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["addconstrain",{"_index":943,"title":{},"body":{"classes/StringConstrain.html":{}}}],["addconstrain($event",{"_index":315,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["addconstrain(stringconstrain",{"_index":952,"title":{},"body":{"classes/StringConstrain.html":{}}}],["afterviewinit",{"_index":114,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["align",{"_index":647,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["allvisible",{"_index":377,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["angular/animations",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":111,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["angular/cdk/collections",{"_index":113,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["angular/cdk/drag",{"_index":142,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["angular/common",{"_index":863,"title":{},"body":{"modules/LitotableModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":692,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["angular/core",{"_index":119,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":528,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"modules/LitotableModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":881,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/card",{"_index":885,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/checkbox",{"_index":874,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/core",{"_index":910,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/datepicker",{"_index":908,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/dialog",{"_index":523,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{}}}],["angular/material/divider",{"_index":912,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/expansion",{"_index":529,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"modules/LitotableModule.html":{}}}],["angular/material/icon",{"_index":883,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/input",{"_index":887,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/menu",{"_index":879,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/paginator",{"_index":121,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["angular/material/progress",{"_index":869,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/radio",{"_index":889,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/select",{"_index":901,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/sidenav",{"_index":915,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/slide",{"_index":876,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/slider",{"_index":898,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/sort",{"_index":124,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["angular/material/stepper",{"_index":903,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/table",{"_index":126,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["angular/material/tabs",{"_index":895,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/material/tooltip",{"_index":906,"title":{},"body":{"modules/LitotableModule.html":{}}}],["angular/platform",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["announcesortchange(sortstate",{"_index":206,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["aply",{"_index":610,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["app",{"_index":667,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["arr",{"_index":737,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["array(length).fill('empty",{"_index":401,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["array(visiblecolumns.length).fill('empty",{"_index":403,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["array.from(format",{"_index":930,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["auto",{"_index":776,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["b",{"_index":278,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["b.order",{"_index":280,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["back",{"_index":611,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["background",{"_index":567,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["bar",{"_index":870,"title":{},"body":{"modules/LitotableModule.html":{}}}],["before",{"_index":591,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["between",{"_index":588,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":31,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{}}}],["border",{"_index":844,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"miscellaneous/enumerations.html":{}}}],["bottom",{"_index":644,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["break",{"_index":308,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["browse",{"_index":1015,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":992,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["c",{"_index":201,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.columngroup?.name",{"_index":265,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.columnname",{"_index":257,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.contentalign",{"_index":263,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.format",{"_index":261,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.order",{"_index":253,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.type",{"_index":259,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.metadata.visible",{"_index":255,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.propertykey",{"_index":251,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["c.visible",{"_index":359,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["case",{"_index":305,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["casesense",{"_index":946,"title":{},"body":{"classes/StringConstrain.html":{}}}],["casesensitive",{"_index":941,"title":{},"body":{"classes/StringConstrain.html":{}}}],["cdkdragdrop",{"_index":140,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["cellborders",{"_index":842,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["center",{"_index":85,"title":{},"body":{"interfaces/ColumnGroup.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["changecolumnvisivility",{"_index":786,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["changecolumnvisivility(column",{"_index":370,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["changeconstrainstate",{"_index":300,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["changeconstrainstate(value",{"_index":485,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["changeconstrainstyle",{"_index":471,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["changeconstrainstyle(value",{"_index":487,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["changenewcolorvalue",{"_index":762,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["changenewcolorvalue(color",{"_index":752,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["checked",{"_index":382,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["checkstate",{"_index":398,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["choose",{"_index":625,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["circle",{"_index":773,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["class",{"_index":0,"title":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"classes/ConstrainCreationFormData.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"classes/TableOperationConfig.html":{}},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"classes/ConstrainCreationFormData.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"classes/TableOperationConfig.html":{},"index.html":{}}}],["clearconstrains",{"_index":944,"title":{},"body":{"classes/StringConstrain.html":{}}}],["cleared",{"_index":211,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["closedialog",{"_index":472,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["cluster_litotablemodule",{"_index":852,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}],["cluster_litotablemodule_declarations",{"_index":854,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}],["cluster_litotablemodule_exports",{"_index":853,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}],["color",{"_index":565,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":728,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["colspan",{"_index":381,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column",{"_index":1,"title":{"classes/Column.html":{}},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["column)[0].visible",{"_index":372,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.contentalign",{"_index":262,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.format",{"_index":260,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.name",{"_index":256,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.type",{"_index":258,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["column.visible",{"_index":254,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columncontentalignment",{"_index":28,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["columngroup",{"_index":50,"title":{"interfaces/ColumnGroup.html":{}},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{}}}],["columngroups",{"_index":87,"title":{"classes/ColumnGroups.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["columngroups(0",{"_index":248,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columngroups(columns.length",{"_index":369,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columngroups.groupcolumns",{"_index":273,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columngroups.groupcolumns.filter((x",{"_index":266,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columngroups.groupcolumns.push(newcolgroup",{"_index":272,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columnmetadata",{"_index":64,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/functions.html":{}}}],["columnname",{"_index":56,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["columnnames",{"_index":353,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columns",{"_index":153,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["columns.map((x",{"_index":362,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columnsmetadata",{"_index":245,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columnsmetadata.map",{"_index":250,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columntype",{"_index":22,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["columntype.cuit",{"_index":570,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.currency",{"_index":583,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.date",{"_index":562,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.float",{"_index":581,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.integer",{"_index":580,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.phone",{"_index":569,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["columntype.string",{"_index":252,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["columntypes",{"_index":154,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["commonmodule",{"_index":862,"title":{},"body":{"modules/LitotableModule.html":{}}}],["complete",{"_index":342,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["component",{"_index":115,"title":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{}}}],["component_template",{"_index":658,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["components",{"_index":448,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"index.html":{}}}],["configurable",{"_index":231,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["configuration",{"_index":435,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["configurations/fieldconstriansstyle",{"_index":132,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["configurations/litotable.config",{"_index":136,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["configurations/tablecrud.config",{"_index":139,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["confirmation",{"_index":168,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{}}}],["confirmationdata",{"_index":169,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["console.log(actiontddiv?.parentnode?.parentnode",{"_index":331,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["console.log(this.fieldconstrain.constrain",{"_index":608,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["const",{"_index":60,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{}}}],["constrain",{"_index":129,"title":{"interfaces/Constrain.html":{}},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{}}}],["constrainarray",{"_index":942,"title":{},"body":{"classes/StringConstrain.html":{}}}],["constraincreationform",{"_index":447,"title":{"components/ConstrainCreationForm.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["constraincreationformdata",{"_index":481,"title":{"classes/ConstrainCreationFormData.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"coverage.html":{}}}],["constraincreatorcomponent",{"_index":533,"title":{"components/ConstrainCreatorComponent.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["constrainedrows",{"_index":165,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constrainname",{"_index":436,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["constrains",{"_index":437,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["constructor(columns",{"_index":787,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["constructor(dialog",{"_index":674,"title":{},"body":{"components/ConstrainCreatorComponent.html":{},"components/LitoColorPickerComponent.html":{}}}],["constructor(dialogref",{"_index":479,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/DialogColorPicker.html":{}}}],["constructor(fields",{"_index":686,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["constructor(length",{"_index":95,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constructor(name",{"_index":383,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constructor(operations",{"_index":693,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["constructor(private",{"_index":186,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["constructor(propertykey",{"_index":20,"title":{},"body":{"classes/Column.html":{}}}],["constructor(public",{"_index":536,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["constructor(style",{"_index":945,"title":{},"body":{"classes/StringConstrain.html":{}}}],["constructor(type",{"_index":695,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["constructor(value",{"_index":846,"title":{},"body":{"classes/LitotableColor.html":{}}}],["container",{"_index":774,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["contains",{"_index":1011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["content",{"_index":635,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["contentalign",{"_index":10,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["count",{"_index":379,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["coverage",{"_index":956,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":615,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["createoperationconfig",{"_index":681,"title":{"classes/CreateOperationConfig.html":{}},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["creation",{"_index":456,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["creationformopen",{"_index":167,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["creator",{"_index":531,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["creator'},{'name",{"_index":662,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["creator.component",{"_index":899,"title":{},"body":{"modules/LitotableModule.html":{}}}],["creator.component.css",{"_index":459,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["creator.component.html",{"_index":532,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts",{"_index":455,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"coverage.html":{}}}],["creator.component.ts:107",{"_index":495,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:111",{"_index":493,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:142",{"_index":488,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:148",{"_index":486,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:176",{"_index":490,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:284",{"_index":498,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:292",{"_index":496,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:315",{"_index":499,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:344",{"_index":489,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:36",{"_index":671,"title":{},"body":{"classes/ConstrainCreationFormData.html":{}}}],["creator.component.ts:45",{"_index":676,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:46",{"_index":677,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:47",{"_index":675,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:49",{"_index":680,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:51",{"_index":678,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:53",{"_index":679,"title":{},"body":{"components/ConstrainCreatorComponent.html":{}}}],["creator.component.ts:71",{"_index":509,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:72",{"_index":516,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:73",{"_index":508,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:74",{"_index":511,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:75",{"_index":515,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:76",{"_index":510,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:77",{"_index":517,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:78",{"_index":514,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:80",{"_index":506,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:83",{"_index":484,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:85",{"_index":507,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:86",{"_index":502,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator.component.ts:90",{"_index":491,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["creator/constrain",{"_index":454,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{}}}],["cuit",{"_index":80,"title":{},"body":{"interfaces/ColumnGroup.html":{},"pipes/CuitPipe.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["cuitpipe",{"_index":704,"title":{"pipes/CuitPipe.html":{}},"body":{"pipes/CuitPipe.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["currency",{"_index":78,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["cursor",{"_index":783,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["data",{"_index":65,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{}}}],["data.push(...prevdata",{"_index":67,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["data.push(newdata",{"_index":68,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["data.style[field",{"_index":303,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["data.title?data.title:'colors",{"_index":772,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["data.title?data.title:\\'colors",{"_index":785,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["data.type",{"_index":306,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["data.values[0",{"_index":310,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["data.values[1",{"_index":313,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["datasource",{"_index":161,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["datatype",{"_index":177,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["date",{"_index":76,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["date(value.value",{"_index":578,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["dateconstrain",{"_index":438,"title":{"classes/DateConstrain.html":{}},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{}}}],["daterange",{"_index":462,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["datos",{"_index":339,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["decimal",{"_index":918,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["declarations",{"_index":859,"title":{},"body":{"modules/LitotableModule.html":{}}}],["decorators",{"_index":500,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/DialogColorPicker.html":{}}}],["decorators/column.decorator",{"_index":40,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"classes/TableOperationConfig.html":{}}}],["default",{"_index":98,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"classes/TableOperationConfig.html":{}}}],["delete",{"_index":701,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["deleteoperationconfig",{"_index":698,"title":{"classes/DeleteOperationConfig.html":{}},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["deletion",{"_index":406,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["dependencies",{"_index":851,"title":{"dependencies.html":{}},"body":{"modules/LitotableModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":433,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{}}}],["dialog",{"_index":458,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["dialog'},{'name",{"_index":661,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["dialogcolordata",{"_index":724,"title":{"interfaces/DialogColorData.html":{}},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"coverage.html":{}}}],["dialogcolorpicker",{"_index":663,"title":{"components/DialogColorPicker.html":{}},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["dialogref",{"_index":463,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":541,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["direction",{"_index":646,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["directive",{"_index":656,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["directives",{"_index":669,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["display",{"_index":637,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["displayedcolumns",{"_index":157,"title":{"classes/DisplayedColumns.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["displaynames",{"_index":90,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["documentation",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":451,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["done",{"_index":612,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["drag_handle",{"_index":617,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["dragdropmodule",{"_index":913,"title":{},"body":{"modules/LitotableModule.html":{}}}],["drop",{"_index":143,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["dual",{"_index":636,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["dynamic",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":425,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["e.tostring",{"_index":446,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["e.updatecolspan",{"_index":405,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["eee",{"_index":566,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["element",{"_index":655,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["element.colspan",{"_index":408,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["element.name",{"_index":412,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["element['rowstyle",{"_index":228,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["element['rowstyle'].style",{"_index":236,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["element[rc.name",{"_index":225,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["empty",{"_index":421,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["enable",{"_index":426,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["end",{"_index":505,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["ends",{"_index":660,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["endswith",{"_index":551,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["endswithtoogle",{"_index":552,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["endwith",{"_index":1010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum",{"_index":70,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["enumerable",{"_index":232,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["enumerations",{"_index":1001,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":584,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["equals",{"_index":622,"title":{},"body":{"components/ConstrainCreationForm.html":{},"miscellaneous/enumerations.html":{}}}],["etc",{"_index":919,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["event.currentindex",{"_index":327,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["event.previousindex",{"_index":326,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["eventemitter",{"_index":518,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["ewinput.value",{"_index":633,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["example",{"_index":665,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["expand_less",{"_index":618,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["expand_more",{"_index":619,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["export",{"_index":41,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["exports",{"_index":860,"title":{},"body":{"modules/LitotableModule.html":{}}}],["extends",{"_index":683,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["false",{"_index":100,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["fetching",{"_index":162,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["fgc",{"_index":748,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["field",{"_index":301,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["fieldconstrain",{"_index":464,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["fieldconstrain.constrain.type",{"_index":623,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["fieldconstrain.constrainname",{"_index":613,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["fieldconstrians",{"_index":184,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["fieldconstrianstyle",{"_index":130,"title":{"interfaces/FieldConstrianStyle.html":{}},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{}}}],["fieldformgroup",{"_index":465,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["fields",{"_index":685,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["filter((c",{"_index":358,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["filter((x",{"_index":274,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["finalstring",{"_index":466,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["firstvisible.propertykey",{"_index":410,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["flex",{"_index":638,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["float",{"_index":74,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/NumberConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["footeraction",{"_index":843,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["form",{"_index":457,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["form.component.html",{"_index":460,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["format",{"_index":11,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"pipes/PhonePipe.html":{},"interfaces/TableColumnMetadata.html":{}}}],["formbuilder",{"_index":483,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["formcontrol",{"_index":504,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["formgroup",{"_index":503,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["formsmodule",{"_index":896,"title":{},"body":{"modules/LitotableModule.html":{}}}],["function",{"_index":33,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{}}}],["functions",{"_index":1012,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":755,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["gc.columns.includes(c",{"_index":418,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["gc.name",{"_index":419,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["getfinaltext",{"_index":473,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["grid",{"_index":779,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["group",{"_index":402,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupcolumn",{"_index":103,"title":{"classes/GroupColumn.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["groupcolumn(str",{"_index":270,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupcolumns",{"_index":91,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupdata",{"_index":387,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupdata.length",{"_index":391,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["groupdata[0].order",{"_index":393,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["grow",{"_index":649,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["hasconstrain(propertykey",{"_index":241,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["headerborders",{"_index":841,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["height",{"_index":651,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["hoverstyle",{"_index":838,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["html",{"_index":654,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["htmldivelement",{"_index":330,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["icon",{"_index":823,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["identifier",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":152,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["important",{"_index":777,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["imports",{"_index":916,"title":{},"body":{"modules/LitotableModule.html":{}}}],["includes",{"_index":414,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["includestoogle",{"_index":550,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indx",{"_index":346,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["inherited",{"_index":689,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{}}}],["initial",{"_index":652,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["inject",{"_index":519,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["inject(mat_dialog_data",{"_index":501,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["input",{"_index":116,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["input('colors",{"_index":734,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["input('columns",{"_index":534,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["input('configurations",{"_index":182,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('content",{"_index":735,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["input('fieldconstrians",{"_index":183,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('operations",{"_index":178,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('selection",{"_index":180,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('source",{"_index":174,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input('type",{"_index":176,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["input.tojson",{"_index":204,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["inputs",{"_index":672,"title":{},"body":{"components/ConstrainCreatorComponent.html":{},"components/LitoColorPickerComponent.html":{}}}],["inputsource",{"_index":175,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["integer",{"_index":72,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/NumberConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["interface",{"_index":49,"title":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"interfaces/DialogColorData.html":{},"interfaces/FieldConstrianStyle.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"interfaces/OperationField.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{}},"body":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"interfaces/FieldConstrianStyle.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/Constrain.html":{},"interfaces/DialogColorData.html":{},"interfaces/FieldConstrianStyle.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"interfaces/OperationField.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"index.html":{}}}],["isallselected",{"_index":286,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["isstyle",{"_index":302,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["items",{"_index":648,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["justify",{"_index":641,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["left",{"_index":84,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":653,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["length",{"_index":97,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["less",{"_index":587,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["lessthan",{"_index":1007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["literal",{"_index":798,"title":{},"body":{"interfaces/FieldConstrianStyle.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{}}}],["lito",{"_index":145,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{}}}],["litocolorpickercomponent",{"_index":666,"title":{"components/LitoColorPickerComponent.html":{}},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"index.html":{}}}],["litofooteraction",{"_index":820,"title":{"interfaces/LitoFooterAction.html":{}},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{}}}],["litorowaction",{"_index":133,"title":{"interfaces/LitoRowAction.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{}}}],["litorowactionconfirmation",{"_index":134,"title":{"interfaces/LitoRowActionConfirmation.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{}}}],["litotable",{"_index":530,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["litotable.component",{"_index":865,"title":{},"body":{"modules/LitotableModule.html":{}}}],["litotable.component.css",{"_index":150,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["litotable.component.html",{"_index":148,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["litotablecolor",{"_index":730,"title":{"classes/LitotableColor.html":{}},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["litotablecolor('#000000",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#0000ff",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#00ff00",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#00ffff",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#073763",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#0b5394",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#0c343d",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#1155cc",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#134f5c",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#1c4587",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#20124d",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#274e13",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#351c75",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#38761d",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#3c78d8",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#3d85c6",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#434343",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#45818e",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#4a86e8",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#4c1130",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#5b0f00",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#660000",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#666666",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#674ea7",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#6aa84f",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#6d9eeb",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#6fa8dc",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#741b47",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#76a5af",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#783f04",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#7f6000",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#85200c",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#8e7cc3",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#93c47d",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#980000",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#990000",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#9900ff",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#999999",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#9fc5e8",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#a2c4c9",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#a4c2f4",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#a61c00",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#a64d79",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#b45f06",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#b4a7d6",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#b6d7a8",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#b7b7b7",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#bf9000",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#c27ba0",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#c9daf8",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#cc0000",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#cc4125",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#cccccc",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#cfe2f3",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d0e0e3",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d5a6bd",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d9d2e9",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d9d9d9",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#d9ead3",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#dd7e6b",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#e06666",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#e69138",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#e6b8af",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ea9999",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ead1dc",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#efefef",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f1c232",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f3f3f3",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f4cccc",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f6b26b",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#f9cb9c",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#fce5cd",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ff0000",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ff00ff",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ff9900",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ffd966",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ffe599",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#fff2cc",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ffff00",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecolor('#ffffff",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["litotablecomponent",{"_index":151,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"classes/RowConstrain.html":{},"coverage.html":{},"index.html":{}}}],["litotablemodule",{"_index":849,"title":{"modules/LitotableModule.html":{}},"body":{"modules/LitotableModule.html":{},"index.html":{},"modules.html":{}}}],["liveannouncer",{"_index":110,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["main_colors",{"_index":751,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maincolors",{"_index":750,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["map((x",{"_index":360,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["margin",{"_index":643,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["mastertoggle",{"_index":291,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mat",{"_index":634,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["mat_dialog_data",{"_index":522,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["mataccordion",{"_index":512,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["matbuttonmodule",{"_index":880,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matbuttontogglemodule",{"_index":891,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matcardmodule",{"_index":884,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matcheckboxmodule",{"_index":873,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matching",{"_index":48,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":907,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matdialog",{"_index":521,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["matdialogmodule",{"_index":893,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matdialogref",{"_index":480,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["matdividermodule",{"_index":911,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matexpansionmodule",{"_index":890,"title":{},"body":{"modules/LitotableModule.html":{}}}],["maticonmodule",{"_index":882,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matinputmodule",{"_index":886,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matmenumodule",{"_index":878,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matnativedatemodule",{"_index":909,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matpaginator",{"_index":120,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["matpaginatormodule",{"_index":867,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matprogressbarmodule",{"_index":868,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matradiomodule",{"_index":888,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matselectmodule",{"_index":900,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matsidenavmodule",{"_index":914,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matslidermodule",{"_index":897,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matslidetogglemodule",{"_index":875,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matsort",{"_index":122,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["matsortmodule",{"_index":871,"title":{},"body":{"modules/LitotableModule.html":{}}}],["matsteppermodule",{"_index":902,"title":{},"body":{"modules/LitotableModule.html":{}}}],["mattabledatasource",{"_index":125,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mattabledatasource(c",{"_index":202,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mattabledatasource(datos",{"_index":195,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mattablemodule",{"_index":866,"title":{},"body":{"modules/LitotableModule.html":{}}}],["mattabsmodule",{"_index":894,"title":{},"body":{"modules/LitotableModule.html":{}}}],["mattooltipmodule",{"_index":905,"title":{},"body":{"modules/LitotableModule.html":{}}}],["max",{"_index":650,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["maxheight",{"_index":539,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["mesurableconstraintype",{"_index":131,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"miscellaneous/enumerations.html":{}}}],["mesurableconstraintype.between",{"_index":444,"title":{},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["mesurableconstraintype.equals",{"_index":443,"title":{},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["mesurableconstraintype.lessthan",{"_index":441,"title":{},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["mesurableconstraintype.morethan",{"_index":585,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["mesurableconstraintype.notbetween",{"_index":589,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["metadata",{"_index":54,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{}}}],["methods",{"_index":93,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"pipes/PhonePipe.html":{},"classes/StringConstrain.html":{}}}],["miscellaneous",{"_index":1000,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":848,"title":{"modules/LitotableModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":850,"title":{"modules.html":{}},"body":{"modules/LitotableModule.html":{},"modules.html":{}}}],["more",{"_index":586,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["morethan",{"_index":1006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["moveiteminarray",{"_index":141,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["mutable",{"_index":12,"title":{},"body":{"classes/Column.html":{}}}],["mutableaction",{"_index":13,"title":{},"body":{"classes/Column.html":{}}}],["name",{"_index":14,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/functions.html":{}}}],["nbsp;ends",{"_index":632,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["nbsp;includes",{"_index":630,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["nbsp;starts",{"_index":628,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["nc",{"_index":744,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["new",{"_index":158,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcolgroup",{"_index":269,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["newcolgroup.addcolumn(column",{"_index":271,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["newcolorarray",{"_index":811,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["newcolorstring",{"_index":745,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["newdata",{"_index":63,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["newrow",{"_index":345,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["next",{"_index":338,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["ngafterviewinit",{"_index":205,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["ngmodule",{"_index":861,"title":{},"body":{"modules/LitotableModule.html":{}}}],["ngoninit",{"_index":188,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["none",{"_index":616,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["nonobservableaction",{"_index":827,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["notbetween",{"_index":1008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["null",{"_index":341,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["number",{"_index":23,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{}}}],["numberconstrain",{"_index":524,"title":{"classes/NumberConstrain.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/NumberConstrain.html":{},"coverage.html":{}}}],["numberconstraintype",{"_index":155,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["numberconstraintype.between",{"_index":624,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["numbers",{"_index":917,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["numrows",{"_index":289,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["numselected",{"_index":287,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["object",{"_index":42,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{}}}],["object.defineproperty(element",{"_index":229,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["observable",{"_index":127,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{}}}],["onactionclick(row",{"_index":328,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["onfieldselectorchange",{"_index":474,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["onfieldselectorchange(selected",{"_index":492,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["oninit",{"_index":117,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["onnoclick",{"_index":475,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["opencreationform",{"_index":322,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["opendialog",{"_index":537,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["operation",{"_index":684,"title":{"classes/Operation.html":{}},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["operation:18",{"_index":690,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{}}}],["operationfield",{"_index":687,"title":{"interfaces/OperationField.html":{}},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["operations",{"_index":179,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/TableOperationConfig.html":{}}}],["operationtypes",{"_index":156,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["optional",{"_index":9,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":15,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["out",{"_index":857,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}],["output",{"_index":520,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["output('newcolorarray",{"_index":736,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["output('result",{"_index":535,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["outputs",{"_index":673,"title":{},"body":{"components/ConstrainCreatorComponent.html":{},"components/LitoColorPickerComponent.html":{}}}],["overview",{"_index":664,"title":{"index.html":{}},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"index.html":{}}}],["package",{"_index":984,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginationsizes",{"_index":837,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["paginator",{"_index":173,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/functions.html":{}}}],["parsedate(input",{"_index":203,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["parsefloat",{"_index":575,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["parsefloat(value.value",{"_index":573,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["parseint(value.target.value",{"_index":311,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["parseint(value.value",{"_index":307,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["performfooteraction",{"_index":351,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["phone",{"_index":82,"title":{},"body":{"interfaces/ColumnGroup.html":{},"pipes/PhonePipe.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["phonepipe",{"_index":855,"title":{"pipes/PhonePipe.html":{}},"body":{"modules/LitotableModule.html":{},"pipes/PhonePipe.html":{},"coverage.html":{},"index.html":{}}}],["picker",{"_index":731,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker'},{'name",{"_index":668,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker.component",{"_index":892,"title":{},"body":{"modules/LitotableModule.html":{}}}],["picker.component.css",{"_index":733,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker.component.html",{"_index":732,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts",{"_index":727,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picker.component.ts:28",{"_index":813,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:29",{"_index":814,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":816,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:31",{"_index":815,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:33",{"_index":812,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":819,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:37",{"_index":817,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:39",{"_index":818,"title":{},"body":{"components/LitoColorPickerComponent.html":{}}}],["picker.component.ts:57",{"_index":771,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:58",{"_index":769,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:59",{"_index":770,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:60",{"_index":768,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:61",{"_index":763,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:63",{"_index":767,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:64",{"_index":766,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:67",{"_index":765,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.component.ts:71",{"_index":764,"title":{},"body":{"components/DialogColorPicker.html":{}}}],["picker.html",{"_index":743,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["picker/lito",{"_index":726,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"modules/LitotableModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":703,"title":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{},"coverage.html":{}}}],["pipes",{"_index":705,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{},"index.html":{}}}],["pipes/cuit.pipe",{"_index":864,"title":{},"body":{"modules/LitotableModule.html":{}}}],["pipes/phone.pipe",{"_index":872,"title":{},"body":{"modules/LitotableModule.html":{}}}],["pipetransform",{"_index":711,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["pointer",{"_index":784,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["prevdata",{"_index":61,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["private",{"_index":543,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"properties.html":{}}}],["propertykey",{"_index":16,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"classes/TableOperationConfig.html":{}}}],["public",{"_index":461,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["r",{"_index":753,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["radio_button_checked",{"_index":627,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["range",{"_index":626,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["rc._constrain.enable",{"_index":227,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["rc._constrain.style",{"_index":234,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["rc._constrain.trigger(value",{"_index":226,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["reactiveformsmodule",{"_index":904,"title":{},"body":{"modules/LitotableModule.html":{}}}],["reduce",{"_index":413,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["reflect",{"_index":53,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{}}}],["reflect.definemetadata('columnsmetadata",{"_index":69,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["reflect.getmetadata",{"_index":246,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["reflect.getmetadata('columnsmetadata",{"_index":62,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["removeconstrain(constrain",{"_index":318,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["repeat(10",{"_index":780,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["reset",{"_index":614,"title":{},"body":{"components/ConstrainCreationForm.html":{},"modules/LitotableModule.html":{},"index.html":{}}}],["resetvalues",{"_index":476,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["restore",{"_index":702,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["result",{"_index":242,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["result.join",{"_index":717,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["result.pop",{"_index":934,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["result.slice(0",{"_index":713,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["result.slice(10",{"_index":716,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["result.slice(2",{"_index":714,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":58,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{}}}],["returns",{"_index":108,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"pipes/PhonePipe.html":{},"classes/StringConstrain.html":{}}}],["rgb(${this.nc[0",{"_index":759,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["rgb(${value[0",{"_index":833,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["rgb(255",{"_index":746,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["right",{"_index":86,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["row",{"_index":170,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["row.processing",{"_index":334,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["rowconstrain",{"_index":160,"title":{"classes/RowConstrain.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["rowconstrains",{"_index":159,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["rowstyle",{"_index":230,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"miscellaneous/enumerations.html":{}}}],["rowstylecolors",{"_index":840,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["rxjs",{"_index":128,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"dependencies.html":{}}}],["select",{"_index":609,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["selectable",{"_index":354,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selected",{"_index":494,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["selected.name",{"_index":559,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["selected.propertykey",{"_index":557,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["selected.type",{"_index":561,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["selectedrows",{"_index":163,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selection",{"_index":181,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selectionmodel",{"_index":112,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selectionstyle",{"_index":839,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["selectiontoogle(state",{"_index":296,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["selector",{"_index":144,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["self",{"_index":782,"title":{},"body":{"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["separador",{"_index":709,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["set",{"_index":164,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["setcolumns",{"_index":244,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["setrowsconstrains(source",{"_index":221,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["settimeout",{"_index":335,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["shadow",{"_index":845,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"miscellaneous/enumerations.html":{}}}],["shortdate",{"_index":477,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["shortdate(str",{"_index":497,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["showselectedonly",{"_index":166,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["siinput.value",{"_index":631,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["size",{"_index":92,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["sort",{"_index":123,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["sort((a",{"_index":389,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["sortstate.direction",{"_index":207,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["sortstate.direction}ending",{"_index":209,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"modules/LitotableModule.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{}}}],["source.foreach((element",{"_index":223,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["space",{"_index":642,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{}}}],["src/.../column.decorator.ts",{"_index":1002,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../fieldconstriansstyle.ts",{"_index":1003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../lito",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../litotable.config.ts",{"_index":1004,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tablecrud.config.ts",{"_index":1005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/litotable/column.ts",{"_index":6,"title":{},"body":{"classes/Column.html":{},"coverage.html":{}}}],["src/app/litotable/column.ts:10",{"_index":34,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:11",{"_index":37,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:12",{"_index":30,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:13",{"_index":29,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:14",{"_index":32,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:15",{"_index":25,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:7",{"_index":36,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:8",{"_index":38,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/column.ts:9",{"_index":35,"title":{},"body":{"classes/Column.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts",{"_index":432,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:100",{"_index":923,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:138",{"_index":950,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:139",{"_index":949,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:140",{"_index":948,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:141",{"_index":947,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:151",{"_index":951,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:189",{"_index":953,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:192",{"_index":954,"title":{},"body":{"classes/StringConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:32",{"_index":720,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:33",{"_index":719,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:34",{"_index":722,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:35",{"_index":718,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:47",{"_index":721,"title":{},"body":{"classes/DateConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:85",{"_index":922,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:86",{"_index":921,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:87",{"_index":924,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/fieldconstriansstyle.ts:88",{"_index":920,"title":{},"body":{"classes/NumberConstrain.html":{}}}],["src/app/litotable/configurations/litotable.config.ts",{"_index":821,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/litotable/configurations/litotable.config.ts:32",{"_index":847,"title":{},"body":{"classes/LitotableColor.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts",{"_index":682,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts:18",{"_index":925,"title":{},"body":{"classes/Operation.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts:25",{"_index":688,"title":{},"body":{"classes/CreateOperationConfig.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts:32",{"_index":723,"title":{},"body":{"classes/DeleteOperationConfig.html":{}}}],["src/app/litotable/configurations/tablecrud.config.ts:5",{"_index":955,"title":{},"body":{"classes/TableOperationConfig.html":{}}}],["src/app/litotable/constrain",{"_index":453,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"coverage.html":{}}}],["src/app/litotable/decorators/column.decorator.ts",{"_index":52,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/litotable/lito",{"_index":725,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/litotable/litotable.component.ts",{"_index":88,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["src/app/litotable/litotable.component.ts:352",{"_index":791,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:353",{"_index":790,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:354",{"_index":792,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:355",{"_index":793,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:356",{"_index":789,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:357",{"_index":788,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:376",{"_index":795,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:386",{"_index":797,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:395",{"_index":796,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:401",{"_index":794,"title":{},"body":{"classes/DisplayedColumns.html":{}}}],["src/app/litotable/litotable.component.ts:412",{"_index":805,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:413",{"_index":803,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:414",{"_index":804,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:415",{"_index":806,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:416",{"_index":802,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:417",{"_index":801,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:422",{"_index":810,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:430",{"_index":807,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:434",{"_index":809,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:439",{"_index":808,"title":{},"body":{"classes/GroupColumn.html":{}}}],["src/app/litotable/litotable.component.ts:445",{"_index":101,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:446",{"_index":104,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:447",{"_index":102,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:448",{"_index":96,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:452",{"_index":106,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["src/app/litotable/litotable.component.ts:503",{"_index":939,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.component.ts:504",{"_index":940,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.component.ts:505",{"_index":937,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.component.ts:506",{"_index":938,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.component.ts:507",{"_index":936,"title":{},"body":{"classes/RowConstrain.html":{}}}],["src/app/litotable/litotable.module.ts",{"_index":858,"title":{},"body":{"modules/LitotableModule.html":{}}}],["src/app/litotable/pipes/cuit.pipe.ts",{"_index":706,"title":{},"body":{"pipes/CuitPipe.html":{},"coverage.html":{}}}],["src/app/litotable/pipes/cuit.pipe.ts:5",{"_index":710,"title":{},"body":{"pipes/CuitPipe.html":{}}}],["src/app/litotable/pipes/phone.pipe.ts",{"_index":926,"title":{},"body":{"pipes/PhonePipe.html":{},"coverage.html":{}}}],["src/app/litotable/pipes/phone.pipe.ts:5",{"_index":927,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["start",{"_index":380,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["starts",{"_index":659,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["startswith",{"_index":1009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["startwith",{"_index":548,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["startwithtoogle",{"_index":549,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["state",{"_index":297,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["statements",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["str",{"_index":264,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["str).length",{"_index":268,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["str)[0",{"_index":275,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["straccordion",{"_index":467,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["stringconstrain",{"_index":525,"title":{"classes/StringConstrain.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/StringConstrain.html":{},"coverage.html":{}}}],["stringconstrainobject",{"_index":526,"title":{"interfaces/StringConstrainObject.html":{}},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"coverage.html":{}}}],["stringconstraintype",{"_index":468,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/StringConstrainObject.html":{},"miscellaneous/enumerations.html":{}}}],["stringconstraintype.contains",{"_index":603,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["stringconstraintype.endwith",{"_index":606,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["stringconstraintype.startswith",{"_index":600,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["stringformgroup",{"_index":469,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["style",{"_index":233,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["styles",{"_index":450,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["styleurls",{"_index":149,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["super(tableoperation.create",{"_index":696,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["super(tableoperation.delete",{"_index":699,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["support",{"_index":1013,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1014,"title":{},"body":{"modules.html":{}}}],["swinput.value",{"_index":629,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["switch",{"_index":304,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["table",{"_index":146,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"coverage.html":{}}}],["tablecolumn",{"_index":977,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tablecolumn(columnmetadata",{"_index":57,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{},"miscellaneous/functions.html":{}}}],["tablecolumnmetadata",{"_index":55,"title":{"interfaces/TableColumnMetadata.html":{}},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tableconfigurations",{"_index":135,"title":{"interfaces/TableConfigurations.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/RowConstrain.html":{},"interfaces/TableConfigurations.html":{},"coverage.html":{}}}],["tabledrop(event",{"_index":324,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["tableoperation",{"_index":137,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["tableoperationconfig",{"_index":138,"title":{"classes/TableOperationConfig.html":{}},"body":{"classes/ColumnGroups.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/RowConstrain.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":59,"title":{},"body":{"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["temp",{"_index":933,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["template",{"_index":449,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["templateref",{"_index":824,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["templateurl",{"_index":147,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{}}}],["this._constrain",{"_index":431,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this._formbuilder.group",{"_index":545,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this._liveannouncer.announce('sorting",{"_index":210,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this._liveannouncer.announce(`sorted",{"_index":208,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.actioncolumn",{"_index":365,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.checked",{"_index":384,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.checkstate",{"_index":385,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.colors",{"_index":740,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.colspan",{"_index":390,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columngroups",{"_index":368,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columngroups.updatecolumns",{"_index":376,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columnnames",{"_index":357,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columnnames.push('actions",{"_index":367,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columnnames.unshift('selection",{"_index":366,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns",{"_index":249,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.filter((c",{"_index":371,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.foreach((c",{"_index":378,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.push(c",{"_index":395,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.some((x",{"_index":399,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columns.sort((a",{"_index":277,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.columntypes",{"_index":361,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.constrain",{"_index":430,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.constrainedrows",{"_index":239,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.constrainedrows.add(element",{"_index":237,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.content",{"_index":742,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.creationformopen",{"_index":323,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource",{"_index":194,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource._updatechangesubscription",{"_index":350,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data",{"_index":240,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data.foreach((row",{"_index":294,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data.indexof(row",{"_index":347,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data.length",{"_index":290,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data.splice(indx",{"_index":349,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.data[indx",{"_index":348,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.paginator",{"_index":196,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datasource.sort",{"_index":198,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.datatype",{"_index":247,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.dialog.open(constraincreationform",{"_index":538,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.dialog.open(dialogcolorpicker",{"_index":738,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.dialogref.close",{"_index":555,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.dialogref.close(this.fieldconstrain",{"_index":607,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.displayedcolumns",{"_index":281,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displayedcolumns.columngroups",{"_index":284,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displayedcolumns.columnnames",{"_index":325,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displayedcolumns.updategroups",{"_index":285,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displaynames",{"_index":400,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displaynames.splice",{"_index":411,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.displaynames.unshift",{"_index":424,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.enable",{"_index":429,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.fetching",{"_index":191,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldconstrain.constrain",{"_index":563,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.addconstrain",{"_index":599,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.clearconstrains",{"_index":596,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.style[field",{"_index":571,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.type",{"_index":572,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.values[0",{"_index":574,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrain.values[1",{"_index":577,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.constrainname",{"_index":558,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.propertykey",{"_index":556,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrain.type",{"_index":560,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fieldconstrians",{"_index":213,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldconstrians.filter((x",{"_index":319,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldconstrians.map((x",{"_index":215,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldconstrians.push($event",{"_index":316,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.fieldformgroup",{"_index":544,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.fields",{"_index":697,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["this.finalstring",{"_index":579,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.getfinaltext",{"_index":554,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.groupcolumns.foreach((e",{"_index":404,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.groupcolumns.foreach((gc",{"_index":417,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.groupcolumns.some((x",{"_index":415,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.inputsource",{"_index":190,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.inputsource.subscribe((datos",{"_index":193,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.isallselected",{"_index":292,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.name",{"_index":44,"title":{},"body":{"classes/Column.html":{},"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.nc.reduce((a",{"_index":761,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.nc[0",{"_index":754,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.nc[1",{"_index":756,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.nc[1]},${this.nc[2",{"_index":760,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.nc[2",{"_index":757,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.newcolorstring",{"_index":758,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.numberconstraintype.morethan",{"_index":564,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.operations",{"_index":694,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["this.order",{"_index":46,"title":{},"body":{"classes/Column.html":{}}}],["this.paginator",{"_index":197,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.propertykey",{"_index":43,"title":{},"body":{"classes/Column.html":{}}}],["this.resetvalues",{"_index":553,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.result.emit(result",{"_index":542,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["this.rowconstrains",{"_index":214,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.rowconstrains.foreach((rc",{"_index":224,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.rowconstrains.length",{"_index":243,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectable",{"_index":364,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.add(row",{"_index":295,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.clear",{"_index":293,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.delete(row",{"_index":299,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.has(row",{"_index":298,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selectedrows.size",{"_index":288,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.selection",{"_index":282,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.setcolumns",{"_index":189,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.setrowsconstrains(datos",{"_index":200,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.shortdate",{"_index":590,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.shortdate(this.fieldconstrain.constrain.values[1",{"_index":592,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.sort",{"_index":199,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.start",{"_index":392,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.straccordion",{"_index":593,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.straccordion.closeall",{"_index":594,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.stringformgroup",{"_index":547,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.stringformgroup.value",{"_index":595,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["this.style",{"_index":428,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.tableconfigurations?.actionscolumn",{"_index":283,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.tableconfigurations?.footeraction?.actionresult.nonobservableaction",{"_index":352,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.type",{"_index":45,"title":{},"body":{"classes/Column.html":{},"interfaces/Constrain.html":{},"classes/CreateOperationConfig.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"classes/TableOperationConfig.html":{}}}],["this.updatecolspan",{"_index":396,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updatefieldstorowsconstrains",{"_index":222,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updategroups",{"_index":373,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updaterow",{"_index":340,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updaterowconstrains",{"_index":314,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.updatevisibility",{"_index":321,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["this.value",{"_index":741,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["this.values",{"_index":440,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.values.length",{"_index":445,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.values[0",{"_index":442,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["this.valuetype",{"_index":582,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["title",{"_index":729,"title":{},"body":{"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["toggle",{"_index":877,"title":{},"body":{"modules/LitotableModule.html":{}}}],["tooglevisibbility",{"_index":800,"title":{},"body":{"classes/GroupColumn.html":{}}}],["tooglevisibbility(state",{"_index":397,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["tooltip",{"_index":828,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["transform",{"_index":707,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["transform(value",{"_index":708,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["tree",{"_index":452,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["trigger",{"_index":434,"title":{},"body":{"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["true",{"_index":192,"title":{},"body":{"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"classes/DateConstrain.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"classes/NumberConstrain.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["tslib",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"classes/DeleteOperationConfig.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableColumnMetadata.html":{},"interfaces/TableConfigurations.html":{},"classes/TableOperationConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":831,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["typeofexpr",{"_index":691,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["undefined",{"_index":66,"title":{},"body":{"interfaces/ColumnGroup.html":{},"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{},"interfaces/TableColumnMetadata.html":{}}}],["unfold_less",{"_index":620,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["unfold_more",{"_index":621,"title":{},"body":{"components/ConstrainCreationForm.html":{}}}],["update",{"_index":700,"title":{},"body":{"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["updatecolspan",{"_index":386,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updatecolumns",{"_index":94,"title":{},"body":{"classes/ColumnGroups.html":{}}}],["updatecolumns(visiblecolumns",{"_index":105,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updatefieldstorowsconstrains",{"_index":212,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updategroups",{"_index":375,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updaterow(row",{"_index":344,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updaterowconstrains",{"_index":238,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updatestringconstrain",{"_index":478,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["updatevisibility",{"_index":317,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["updatevisivility",{"_index":374,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["validators",{"_index":527,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/CreateOperationConfig.html":{},"classes/DeleteOperationConfig.html":{},"classes/Operation.html":{},"interfaces/OperationField.html":{},"classes/TableOperationConfig.html":{}}}],["validators.required",{"_index":546,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["value",{"_index":99,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"pipes/CuitPipe.html":{},"classes/DateConstrain.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"classes/NumberConstrain.html":{},"pipes/PhonePipe.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{},"interfaces/TableConfigurations.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":832,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["value.target.value",{"_index":576,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["value.tostring",{"_index":935,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["value.tostring().split",{"_index":712,"title":{},"body":{"pipes/CuitPipe.html":{},"pipes/PhonePipe.html":{}}}],["value1",{"_index":309,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["value2",{"_index":312,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["value[1",{"_index":834,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["value[2",{"_index":835,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["value[3",{"_index":836,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["values",{"_index":439,"title":{},"body":{"interfaces/Constrain.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DateConstrain.html":{},"interfaces/FieldConstrianStyle.html":{},"classes/NumberConstrain.html":{},"classes/StringConstrain.html":{},"interfaces/StringConstrainObject.html":{}}}],["values.endswith",{"_index":605,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.endswithtoogle",{"_index":604,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.includes",{"_index":602,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.includestoogle",{"_index":601,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.startwith",{"_index":598,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["values.startwithtoogle",{"_index":597,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["valuetype",{"_index":470,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["var",{"_index":657,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["variable",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1018,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1016,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":118,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["viewchild(mataccordion",{"_index":513,"title":{},"body":{"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{}}}],["viewchild(matpaginator",{"_index":172,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["viewchild(matsort",{"_index":185,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["visible",{"_index":18,"title":{},"body":{"classes/Column.html":{},"interfaces/ColumnGroup.html":{},"interfaces/TableColumnMetadata.html":{}}}],["visiblecolumns",{"_index":107,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["visiblecolumns.findindex",{"_index":409,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["void",{"_index":109,"title":{},"body":{"classes/ColumnGroups.html":{},"components/ConstrainCreationForm.html":{},"classes/ConstrainCreationFormData.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"components/LitoColorPickerComponent.html":{},"classes/RowConstrain.html":{},"classes/StringConstrain.html":{}}}],["width",{"_index":639,"title":{},"body":{"components/ConstrainCreationForm.html":{},"components/ConstrainCreatorComponent.html":{},"interfaces/DialogColorData.html":{},"components/DialogColorPicker.html":{},"components/LitoColorPickerComponent.html":{}}}],["willaddrow",{"_index":825,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["willdeleterow",{"_index":830,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["willupdaterow",{"_index":829,"title":{},"body":{"interfaces/LitoFooterAction.html":{},"interfaces/LitoRowAction.html":{},"interfaces/LitoRowActionConfirmation.html":{},"classes/LitotableColor.html":{},"interfaces/TableConfigurations.html":{}}}],["writable",{"_index":235,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x",{"_index":320,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.columns.includes(c",{"_index":416,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.constrain",{"_index":220,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.metadata.enable",{"_index":219,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.metadata.style",{"_index":218,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.metadata.trigger",{"_index":217,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.name",{"_index":267,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.propertykey",{"_index":216,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.type",{"_index":363,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["x.visible",{"_index":388,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["y.visible)[0",{"_index":407,"title":{},"body":{"classes/ColumnGroups.html":{},"classes/DisplayedColumns.html":{},"classes/GroupColumn.html":{},"classes/RowConstrain.html":{}}}],["yes",{"_index":928,"title":{},"body":{"pipes/PhonePipe.html":{}}}],["zone.js",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":856,"title":{},"body":{"modules/LitotableModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Column.html":{"url":"classes/Column.html","title":"class - Column","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Column\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/column.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                contentAlign\n                            \n                            \n                                    Optional\n                                format\n                            \n                            \n                                    Optional\n                                mutable\n                            \n                            \n                                    Optional\n                                mutableAction\n                            \n                            \n                                name\n                            \n                            \n                                order\n                            \n                            \n                                propertyKey\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyKey: string, name: string, type: ColumnType, order: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/column.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ColumnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        contentAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnContentAlignment\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mutable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        mutableAction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propertyKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/column.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ColumnContentAlignment,\n  ColumnType,\n} from './decorators/column.decorator';\n\nexport class Column {\n  propertyKey: string;\n  visible?: boolean;\n  order: number;\n  name: string;\n  type: ColumnType;\n  format?: string;\n  contentAlign?: ColumnContentAlignment;\n  mutable?: boolean;\n  mutableAction?: (object: any) => any;\n  constructor(\n    propertyKey: string,\n    name: string,\n    type: ColumnType,\n    order: number\n  ) {\n    this.propertyKey = propertyKey;\n    this.name = name;\n    this.type = type;\n    this.order = order;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnGroup.html":{"url":"interfaces/ColumnGroup.html","title":"interface - ColumnGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColumnGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/decorators/column.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'reflect-metadata';\nexport interface TableColumnMetadata {\n  visible?: boolean;\n  order: number;\n  columnName?: string;\n  type?: ColumnType;\n  format?: string;\n  contentAlign?: ColumnContentAlignment;\n  columnGroup?: ColumnGroup;\n}\n\nexport interface ColumnGroup {\n  name: string;\n}\n\nexport function TableColumn(columnMetadata: TableColumnMetadata) {\n  return (target: Object, propertyKey: string) => {\n    const prevData = Reflect.getMetadata('columnsMetadata', target);\n    const newData = {\n      propertyKey: propertyKey,\n      metadata: columnMetadata,\n    };\n    let data = [];\n    if (prevData != undefined) {\n      data.push(...prevData);\n    }\n    data.push(newData);\n    Reflect.defineMetadata('columnsMetadata', data, target);\n  };\n}\n\nexport enum ColumnType {\n  STRING = 0,\n  INTEGER = 1,\n  FLOAT = 2,\n  DATE = 3,\n  CURRENCY = 4,\n  CUIT = 5,\n  PHONE = 6,\n}\n\nexport enum ColumnContentAlignment {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ColumnGroups.html":{"url":"classes/ColumnGroups.html","title":"class - ColumnGroups","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ColumnGroups\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/litotable.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                displayNames\n                            \n                            \n                                groupColumns\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateColumns\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(length: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/litotable.component.ts:448\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:445\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:447\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupColumn[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:446\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:448\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateColumns\n                        \n                    \n                \n            \n            \n                \nupdateColumns(visibleColumns: Column[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:452\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    visibleColumns\n                                    \n                                                Column[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstriansStyle';\nimport {\n  LitoRowAction,\n  LitoRowActionConfirmation,\n  TableConfigurations,\n} from './configurations/litotable.config';\nimport {\n  TableOperation,\n  TableOperationConfig,\n} from './configurations/tableCrud.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './litotable.component.html',\n  styleUrls: ['./litotable.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  columns: Column[] = [];\n  columnTypes = ColumnType;\n  numberConstrainType = MesurableConstrainType;\n  operationTypes = TableOperation;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n  confirmation?: {\n    confirmationData: LitoRowActionConfirmation;\n    row: any;\n    action: LitoRowAction;\n  };\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable;\n  @Input('type') dataType!: Object;\n  @Input('operations') operations?: TableOperationConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(\n          x.propertyKey,\n          x.metadata.trigger,\n          x.metadata.style,\n          x.metadata.enable,\n          x.constrain\n        );\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(\n      this.columns,\n      this.selection,\n      this.tableConfigurations?.actionsColumn != undefined\n    );\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  openCreationForm() {\n    // this.creationFormOpen = !this.creationFormOpen;\n  }\n\n  tableDrop(event: CdkDragDrop) {\n    moveItemInArray(\n      this.displayedColumns.columnNames,\n      event.previousIndex + 1,\n      event.currentIndex + 1\n    );\n  }\n\n  onActionClick(row: any, action: LitoRowAction, actionTdDiv?: HTMLDivElement) {\n    console.log(actionTdDiv?.parentNode?.parentNode);\n    if (\n      action.actionResult.willUpdateRow ||\n      action.actionResult.willDeleteRow\n    ) {\n      row.processing = true;\n      setTimeout(() => {\n        action.actionResult.actionObservable\n          ? action.actionResult.actionObservable.subscribe({\n              next: (datos: any) => {\n                this.updateRow(\n                  row,\n                  action.actionResult.willDeleteRow ? null : datos\n                );\n              },\n              complete: () => {\n                row.processing = false;\n              },\n            })\n          : null;\n      }, 4000);\n    }\n  }\n\n  updateRow(row: any, newRow: any) {\n    let indx = this.dataSource.data.indexOf(row);\n    if (newRow) {\n      this.dataSource.data[indx] = newRow;\n    } else {\n      this.dataSource.data.splice(indx, 1);\n    }\n    this.dataSource._updateChangeSubscription();\n  }\n\n  performFooterAction() {\n    if (\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction\n    ) {\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction();\n    }\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  actionColumn: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(\n    columns: Column[] = [],\n    selectable: boolean = false,\n    actionsColumn: boolean = false\n  ) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    this.actionColumn = actionsColumn;\n    if (selectable) this.columnNames.unshift('selection');\n    if (actionsColumn) this.columnNames.push('actions');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateVisivility() {\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  checked: boolean;\n  constructor(name: string) {\n    this.name = name;\n    this.checked = this.checkState();\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order);\n    this.colspan = groupData.length;\n    if (groupData.length != 0) this.start = groupData[0].order;\n    this.checked = this.checkState();\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n  toogleVisibbility(state: boolean) {\n    for (const c of this.columns) {\n      c.visible = state;\n    }\n  }\n  checkState() {\n    return this.columns.some((x) => x.visible);\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    this.groupColumns.forEach((e) => e.updateColspan());\n    let deletion = 0;\n    for (let i = 0; i  y.visible)[0];\n\n      if (element.colspan != 0) {\n        let index = visibleColumns.findIndex(\n          (x) => x.propertyKey == firstVisible.propertyKey\n        );\n        this.displayNames.splice(\n          1 + index - deletion,\n          element.colspan,\n          element.name\n        );\n        deletion += element.colspan - 1;\n      }\n    }\n    /* \n    this.displayNames = visibleColumns\n      .reduce(\n        (a, c) => {\n          const includes = this.groupColumns.some((x) => x.columns.includes(c));\n          let str = '';\n          this.groupColumns.forEach((gc) => {\n            if (gc.columns.includes(c)) {\n              str = gc.name;\n            }\n          });\n          a.push(includes ? str : 'empty-group');\n          return a;\n        },\n        ['empty-group']\n      )\n      .reduce(\n        (a, c) => {\n          if (c == 'empty-group' || !a.includes(c)) {\n            a.push(c);\n          }\n          return a;\n        },\n        ['empty-group']\n      );\n    */\n    this.displayNames.unshift();\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  style: Object;\n  constrain: (e: any) => boolean;\n  enable: boolean;\n  _constrain: Constrain;\n  constructor(\n    name: string,\n    constrain: (e: any) => boolean,\n    style: Object,\n    enable: boolean,\n    _constrain: Constrain\n  ) {\n    this.name = name;\n    this.style = style;\n    this.enable = enable;\n    this.constrain = constrain;\n    this._constrain = _constrain;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Constrain.html":{"url":"interfaces/Constrain.html","title":"interface - Constrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Constrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is for every Constrain\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enable\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            trigger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trigger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trigger:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstrainCreationForm.html":{"url":"components/ConstrainCreationForm.html","title":"component - ConstrainCreationForm","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConstrainCreationForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/litotable/constrain-creator/constrain-creator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                constrain-creation-form-dialog\n            \n\n            \n                styleUrls\n                ./constrain-creator.component.css\n            \n\n\n\n            \n                templateUrl\n                constrain-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                dateRange\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                fieldConstrain\n                            \n                            \n                                fieldFormGroup\n                            \n                            \n                                finalString\n                            \n                            \n                                numberConstrainType\n                            \n                            \n                                strAccordion\n                            \n                            \n                                stringConstrainType\n                            \n                            \n                                stringFormGroup\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeConstrainState\n                            \n                            \n                                changeConstrainStyle\n                            \n                            \n                                closeDialog\n                            \n                            \n                                getFinalText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFieldSelectorChange\n                            \n                            \n                                onNoClick\n                            \n                            \n                                resetValues\n                            \n                            \n                                shortDate\n                            \n                            \n                                updateStringConstrain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ConstrainCreationFormData, _formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ConstrainCreationFormData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeConstrainState\n                        \n                    \n                \n            \n            \n                \nchangeConstrainState(value: any, field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeConstrainStyle\n                        \n                    \n                \n            \n            \n                \nchangeConstrainStyle(value: any, field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:344\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFinalText\n                        \n                    \n                \n            \n            \n                \ngetFinalText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFieldSelectorChange\n                        \n                    \n                \n            \n            \n                \nonFieldSelectorChange(selected: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selected\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetValues\n                        \n                    \n                \n            \n            \n                \nresetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortDate\n                        \n                    \n                \n            \n            \n                \nshortDate(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStringConstrain\n                        \n                    \n                \n            \n            \n                \nupdateStringConstrain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:315\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConstrainCreationFormData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateRange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldConstrain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FieldConstrianStyle | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finalString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberConstrainType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : MesurableConstrainType\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strAccordion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatAccordion\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatAccordion)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringConstrainType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : StringConstrainType\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringFormGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Column } from '../column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  NumberConstrain,\n  MesurableConstrainType,\n  DateConstrain,\n  StringConstrainType,\n  StringConstrain,\n  StringConstrainObject,\n} from '../configurations/fieldConstriansStyle';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ColumnType } from '../decorators/column.decorator';\nimport { MatAccordion } from '@angular/material/expansion';\n\nexport class ConstrainCreationFormData {\n  columns: Column[] = [];\n}\n\n@Component({\n  selector: 'litotable-constrain-creator',\n  templateUrl: './constrain-creator.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreatorComponent implements OnInit {\n  @Input('columns') columns: Column[] = [];\n  @Output('result-constrain') result: EventEmitter =\n    new EventEmitter();\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConstrainCreationForm, {\n      data: { columns: this.columns },\n      maxHeight: '80vh',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'constrain-creation-form-dialog',\n  templateUrl: 'constrain-form.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreationForm {\n  fieldFormGroup!: FormGroup;\n  stringFormGroup!: FormGroup;\n  fieldConstrain: FieldConstrianStyle | any;\n  numberConstrainType = MesurableConstrainType;\n  stringConstrainType = StringConstrainType;\n  finalString: string = '';\n  valueType: string = '';\n  @ViewChild(MatAccordion) strAccordion!: MatAccordion;\n\n  dateRange = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConstrainCreationFormData,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.fieldFormGroup = this._formBuilder.group({\n      field: ['', Validators.required],\n    });\n    this.stringFormGroup = this._formBuilder.group({\n      startWith: [''],\n      startWithToogle: [''],\n      includes: [''],\n      includesToogle: [''],\n      endsWith: [''],\n      endsWithToogle: [''],\n    });\n    this.resetValues();\n\n    this.getFinalText();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onFieldSelectorChange(selected: Column) {\n    this.resetValues();\n    if (selected) {\n      this.fieldConstrain.propertyKey = selected.propertyKey;\n      this.fieldConstrain.constrainName = selected.name;\n      this.fieldConstrain.type = selected.type;\n\n      switch (selected.type) {\n        case ColumnType.DATE:\n          this.fieldConstrain.constrain = new DateConstrain(\n            this.numberConstrainType.MORETHAN,\n            [new Date(), new Date()],\n            {\n              color: '#eee',\n              'background-color': '#888',\n            }\n          );\n          break;\n        case ColumnType.STRING:\n        case ColumnType.PHONE:\n        case ColumnType.CUIT:\n          this.fieldConstrain.constrain = new StringConstrain({\n            color: '#eee',\n            'background-color': '#888',\n          });\n          break;\n      }\n    }\n    this.getFinalText();\n  }\n\n  changeConstrainStyle(value: any, field: string) {\n    if (field && field != '') {\n      this.fieldConstrain.constrain.style[field] = value;\n    }\n  }\n\n  changeConstrainState(value: any, field: string) {\n    switch (field) {\n      case 'date-type':\n      case 'number-type':\n        this.fieldConstrain.constrain.type = parseFloat(value.value);\n        break;\n      case 'number-value':\n      case 'number-value1':\n        this.fieldConstrain.constrain.values[0] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'number-value2':\n        this.fieldConstrain.constrain.values[1] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'date-value':\n      case 'date-value1':\n        this.fieldConstrain.constrain.values[0] = new Date(value.value);\n        break;\n      case 'date-value2':\n        this.fieldConstrain.constrain.values[1] = new Date(value.value);\n        break;\n    }\n    this.getFinalText();\n  }\n\n  getFinalText() {\n    this.finalString = '';\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.FLOAT:\n        this.valueType = 'value';\n        this.finalString = `that is `;\n        break;\n      case ColumnType.DATE:\n        this.valueType = 'date';\n        break;\n      case ColumnType.STRING:\n      case ColumnType.PHONE:\n      case ColumnType.CUIT:\n        this.valueType = 'string';\n        this.finalString = `that `;\n        break;\n      default:\n        this.valueType = 'value';\n        break;\n    }\n\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.CURRENCY:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `more than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `less than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n        }\n        break;\n      case ColumnType.DATE:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `after ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `before ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n        }\n\n        break;\n      case ColumnType.STRING:\n      case ColumnType.CUIT:\n      case ColumnType.PHONE:\n        for (\n          let i = 0;\n          i  1) {\n            if (i  false,\n        style: {},\n      },\n    };\n    if (this.strAccordion) this.strAccordion.closeAll();\n  }\n\n  updateStringConstrain() {\n    let values: {\n      startWith: any;\n      startWithToogle: any;\n      includes: any;\n      includesToogle: any;\n      endsWith: any;\n      endsWithToogle: any;\n    } = this.stringFormGroup.value;\n\n    this.fieldConstrain.constrain.clearConstrains();\n    if (values.startWithToogle && values.startWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.STARTSWITH,\n        value: values.startWith,\n      });\n    if (values.includesToogle && values.includes)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.CONTAINS,\n        value: values.includes,\n      });\n    if (values.endsWithToogle && values.endsWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.ENDWITH,\n        value: values.endsWith,\n      });\n    this.getFinalText();\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.fieldConstrain);\n    console.log(this.fieldConstrain.constrain);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      Select a field\n      \n      \n        Next\n      \n    \n    \n    \n      \n      Aply style\n      \n      \n        Back\n        Next\n      \n    \n    \n    \n      \n      Set constrain\n      \n        \n        \n        \n        \n\n        \n        \n        \n        \n        \n        \n      \n\n      \n        Back\n        Next\n      \n    \n    \n    \n      Done\n      \n        \n          Every {{ valueType }} from column\n          {{ fieldConstrain.constrainName }}\n          {{ finalString }}\n        \n      \n      \n        Back\n        \n          Reset\n        \n        Create\n      \n    \n  \n\n\n\n  \n    \n      Field\n      \n        None\n        {{\n          column.name\n        }}\n      \n    \n  \n\n\n\n  \n    \n      {{ fieldConstrain.constrainName }}\n    \n    \n      \n      \n    \n  \n\n\n\n  \n    \n      drag_handle\n    \n    \n      expand_less\n    \n    \n      expand_more\n    \n    \n      unfold_less\n    \n    \n      unfold_more\n    \n  \n  \n    \n      \n        EQUALS\n        LESS THAN\n        MORE THAN\n      \n      \n    \n  \n  \n  \n    \n      {{\n        fieldConstrain.constrain.type == numberConstrainType.BETWEEN\n          ? \"MORE THAN\"\n          : \"LESS THAN\"\n      }}\n      \n    \n    \n      \n        {{\n          fieldConstrain.constrain.type == numberConstrainType.BETWEEN\n            ? \"LESS THAN\"\n            : \"MORE THAN\"\n        }}\n      \n      \n    \n  \n\n\n\n  \n    \n      drag_handle\n     -->\n    \n      expand_less\n    \n    \n      expand_more\n    \n    \n      unfold_less\n    \n    \n      unfold_more\n    \n  \n  \n    \n    \n      \n        EQUALS\n        Choose a date\n        Choose a date\n        Choose a date range\n        Choose a date range\n      \n\n      \n      \n      \n    \n\n    \n    \n      \n        \n        \n      \n      \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            radio_button_checked\n          \n          radio_button_checked\n          &nbsp;Starts with\n        \n        \n          {{ swInput.value }}\n        \n      \n      \n        \n          Value\n          \n        \n        \n      \n    \n    \n      \n        \n          radio_button_checked\n          radio_button_checked\n          &nbsp;Includes\n        \n        \n          {{ siInput.value }}\n        \n      \n      \n        \n          Value\n          \n        \n        \n      \n    \n    \n      \n        \n          radio_button_checked\n          radio_button_checked\n          &nbsp;Ends with\n        \n        \n          {{ ewInput.value }}\n        \n      \n      \n        \n          Value\n          \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./constrain-creator.component.css\n                \n                .constrain-mat-content-dual {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n}\n\n.number-constrain-selector {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.number-constrain-selector > * {\n  flex-grow: 1;\n}\n\n.flex-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mat-dialog-content {\n  max-height: initial;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Select a field                    Next                              Aply style                    Back        Next                              Set constrain                                                                                                          Back        Next                        Done                        Every {{ valueType }} from column          {{ fieldConstrain.constrainName }}          {{ finalString }}                            Back                  Reset                Create                        Field              None        {{          column.name        }}                        {{ fieldConstrain.constrainName }}                                      drag_handle              expand_less              expand_more              unfold_less              unfold_more                          EQUALS        LESS THAN        MORE THAN                                {{        fieldConstrain.constrain.type == numberConstrainType.BETWEEN          ? \"MORE THAN\"          : \"LESS THAN\"      }}                            {{          fieldConstrain.constrain.type == numberConstrainType.BETWEEN            ? \"LESS THAN\"            : \"MORE THAN\"        }}                              drag_handle     -->          expand_less              expand_more              unfold_less              unfold_more                              EQUALS        Choose a date        Choose a date        Choose a date range        Choose a date range                                                                                                                            radio_button_checked                    radio_button_checked           Starts with                          {{ swInput.value }}                                      Value                                                                radio_button_checked          radio_button_checked           Includes                          {{ siInput.value }}                                      Value                                                                radio_button_checked          radio_button_checked           Ends with                          {{ ewInput.value }}                                      Value                                      '\n    var COMPONENTS = [{'name': 'ConstrainCreationForm', 'selector': 'constrain-creation-form-dialog'},{'name': 'ConstrainCreatorComponent', 'selector': 'litotable-constrain-creator'},{'name': 'DialogColorPicker', 'selector': 'dialog-overview-example-dialog'},{'name': 'LitoColorPickerComponent', 'selector': 'app-lito-color-picker'},{'name': 'LitotableComponent', 'selector': 'lito-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConstrainCreationForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstrainCreationFormData.html":{"url":"classes/ConstrainCreationFormData.html","title":"class - ConstrainCreationFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstrainCreationFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/constrain-creator/constrain-creator.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Column } from '../column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  NumberConstrain,\n  MesurableConstrainType,\n  DateConstrain,\n  StringConstrainType,\n  StringConstrain,\n  StringConstrainObject,\n} from '../configurations/fieldConstriansStyle';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ColumnType } from '../decorators/column.decorator';\nimport { MatAccordion } from '@angular/material/expansion';\n\nexport class ConstrainCreationFormData {\n  columns: Column[] = [];\n}\n\n@Component({\n  selector: 'litotable-constrain-creator',\n  templateUrl: './constrain-creator.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreatorComponent implements OnInit {\n  @Input('columns') columns: Column[] = [];\n  @Output('result-constrain') result: EventEmitter =\n    new EventEmitter();\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConstrainCreationForm, {\n      data: { columns: this.columns },\n      maxHeight: '80vh',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'constrain-creation-form-dialog',\n  templateUrl: 'constrain-form.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreationForm {\n  fieldFormGroup!: FormGroup;\n  stringFormGroup!: FormGroup;\n  fieldConstrain: FieldConstrianStyle | any;\n  numberConstrainType = MesurableConstrainType;\n  stringConstrainType = StringConstrainType;\n  finalString: string = '';\n  valueType: string = '';\n  @ViewChild(MatAccordion) strAccordion!: MatAccordion;\n\n  dateRange = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConstrainCreationFormData,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.fieldFormGroup = this._formBuilder.group({\n      field: ['', Validators.required],\n    });\n    this.stringFormGroup = this._formBuilder.group({\n      startWith: [''],\n      startWithToogle: [''],\n      includes: [''],\n      includesToogle: [''],\n      endsWith: [''],\n      endsWithToogle: [''],\n    });\n    this.resetValues();\n\n    this.getFinalText();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onFieldSelectorChange(selected: Column) {\n    this.resetValues();\n    if (selected) {\n      this.fieldConstrain.propertyKey = selected.propertyKey;\n      this.fieldConstrain.constrainName = selected.name;\n      this.fieldConstrain.type = selected.type;\n\n      switch (selected.type) {\n        case ColumnType.DATE:\n          this.fieldConstrain.constrain = new DateConstrain(\n            this.numberConstrainType.MORETHAN,\n            [new Date(), new Date()],\n            {\n              color: '#eee',\n              'background-color': '#888',\n            }\n          );\n          break;\n        case ColumnType.STRING:\n        case ColumnType.PHONE:\n        case ColumnType.CUIT:\n          this.fieldConstrain.constrain = new StringConstrain({\n            color: '#eee',\n            'background-color': '#888',\n          });\n          break;\n      }\n    }\n    this.getFinalText();\n  }\n\n  changeConstrainStyle(value: any, field: string) {\n    if (field && field != '') {\n      this.fieldConstrain.constrain.style[field] = value;\n    }\n  }\n\n  changeConstrainState(value: any, field: string) {\n    switch (field) {\n      case 'date-type':\n      case 'number-type':\n        this.fieldConstrain.constrain.type = parseFloat(value.value);\n        break;\n      case 'number-value':\n      case 'number-value1':\n        this.fieldConstrain.constrain.values[0] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'number-value2':\n        this.fieldConstrain.constrain.values[1] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'date-value':\n      case 'date-value1':\n        this.fieldConstrain.constrain.values[0] = new Date(value.value);\n        break;\n      case 'date-value2':\n        this.fieldConstrain.constrain.values[1] = new Date(value.value);\n        break;\n    }\n    this.getFinalText();\n  }\n\n  getFinalText() {\n    this.finalString = '';\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.FLOAT:\n        this.valueType = 'value';\n        this.finalString = `that is `;\n        break;\n      case ColumnType.DATE:\n        this.valueType = 'date';\n        break;\n      case ColumnType.STRING:\n      case ColumnType.PHONE:\n      case ColumnType.CUIT:\n        this.valueType = 'string';\n        this.finalString = `that `;\n        break;\n      default:\n        this.valueType = 'value';\n        break;\n    }\n\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.CURRENCY:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `more than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `less than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n        }\n        break;\n      case ColumnType.DATE:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `after ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `before ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n        }\n\n        break;\n      case ColumnType.STRING:\n      case ColumnType.CUIT:\n      case ColumnType.PHONE:\n        for (\n          let i = 0;\n          i  1) {\n            if (i  false,\n        style: {},\n      },\n    };\n    if (this.strAccordion) this.strAccordion.closeAll();\n  }\n\n  updateStringConstrain() {\n    let values: {\n      startWith: any;\n      startWithToogle: any;\n      includes: any;\n      includesToogle: any;\n      endsWith: any;\n      endsWithToogle: any;\n    } = this.stringFormGroup.value;\n\n    this.fieldConstrain.constrain.clearConstrains();\n    if (values.startWithToogle && values.startWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.STARTSWITH,\n        value: values.startWith,\n      });\n    if (values.includesToogle && values.includes)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.CONTAINS,\n        value: values.includes,\n      });\n    if (values.endsWithToogle && values.endsWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.ENDWITH,\n        value: values.endsWith,\n      });\n    this.getFinalText();\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.fieldConstrain);\n    console.log(this.fieldConstrain.constrain);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstrainCreatorComponent.html":{"url":"components/ConstrainCreatorComponent.html","title":"component - ConstrainCreatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConstrainCreatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/litotable/constrain-creator/constrain-creator.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                litotable-constrain-creator\n            \n\n            \n                styleUrls\n                ./constrain-creator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./constrain-creator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                result-constrain\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:45\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        result-constrain\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:46\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/constrain-creator/constrain-creator.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { Column } from '../column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  NumberConstrain,\n  MesurableConstrainType,\n  DateConstrain,\n  StringConstrainType,\n  StringConstrain,\n  StringConstrainObject,\n} from '../configurations/fieldConstriansStyle';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ColumnType } from '../decorators/column.decorator';\nimport { MatAccordion } from '@angular/material/expansion';\n\nexport class ConstrainCreationFormData {\n  columns: Column[] = [];\n}\n\n@Component({\n  selector: 'litotable-constrain-creator',\n  templateUrl: './constrain-creator.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreatorComponent implements OnInit {\n  @Input('columns') columns: Column[] = [];\n  @Output('result-constrain') result: EventEmitter =\n    new EventEmitter();\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConstrainCreationForm, {\n      data: { columns: this.columns },\n      maxHeight: '80vh',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'constrain-creation-form-dialog',\n  templateUrl: 'constrain-form.component.html',\n  styleUrls: ['./constrain-creator.component.css'],\n})\nexport class ConstrainCreationForm {\n  fieldFormGroup!: FormGroup;\n  stringFormGroup!: FormGroup;\n  fieldConstrain: FieldConstrianStyle | any;\n  numberConstrainType = MesurableConstrainType;\n  stringConstrainType = StringConstrainType;\n  finalString: string = '';\n  valueType: string = '';\n  @ViewChild(MatAccordion) strAccordion!: MatAccordion;\n\n  dateRange = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ConstrainCreationFormData,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.fieldFormGroup = this._formBuilder.group({\n      field: ['', Validators.required],\n    });\n    this.stringFormGroup = this._formBuilder.group({\n      startWith: [''],\n      startWithToogle: [''],\n      includes: [''],\n      includesToogle: [''],\n      endsWith: [''],\n      endsWithToogle: [''],\n    });\n    this.resetValues();\n\n    this.getFinalText();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onFieldSelectorChange(selected: Column) {\n    this.resetValues();\n    if (selected) {\n      this.fieldConstrain.propertyKey = selected.propertyKey;\n      this.fieldConstrain.constrainName = selected.name;\n      this.fieldConstrain.type = selected.type;\n\n      switch (selected.type) {\n        case ColumnType.DATE:\n          this.fieldConstrain.constrain = new DateConstrain(\n            this.numberConstrainType.MORETHAN,\n            [new Date(), new Date()],\n            {\n              color: '#eee',\n              'background-color': '#888',\n            }\n          );\n          break;\n        case ColumnType.STRING:\n        case ColumnType.PHONE:\n        case ColumnType.CUIT:\n          this.fieldConstrain.constrain = new StringConstrain({\n            color: '#eee',\n            'background-color': '#888',\n          });\n          break;\n      }\n    }\n    this.getFinalText();\n  }\n\n  changeConstrainStyle(value: any, field: string) {\n    if (field && field != '') {\n      this.fieldConstrain.constrain.style[field] = value;\n    }\n  }\n\n  changeConstrainState(value: any, field: string) {\n    switch (field) {\n      case 'date-type':\n      case 'number-type':\n        this.fieldConstrain.constrain.type = parseFloat(value.value);\n        break;\n      case 'number-value':\n      case 'number-value1':\n        this.fieldConstrain.constrain.values[0] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'number-value2':\n        this.fieldConstrain.constrain.values[1] = parseFloat(\n          value.target.value\n        );\n        break;\n      case 'date-value':\n      case 'date-value1':\n        this.fieldConstrain.constrain.values[0] = new Date(value.value);\n        break;\n      case 'date-value2':\n        this.fieldConstrain.constrain.values[1] = new Date(value.value);\n        break;\n    }\n    this.getFinalText();\n  }\n\n  getFinalText() {\n    this.finalString = '';\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.FLOAT:\n        this.valueType = 'value';\n        this.finalString = `that is `;\n        break;\n      case ColumnType.DATE:\n        this.valueType = 'date';\n        break;\n      case ColumnType.STRING:\n      case ColumnType.PHONE:\n      case ColumnType.CUIT:\n        this.valueType = 'string';\n        this.finalString = `that `;\n        break;\n      default:\n        this.valueType = 'value';\n        break;\n    }\n\n    switch (this.fieldConstrain.type) {\n      case ColumnType.INTEGER:\n      case ColumnType.FLOAT:\n      case ColumnType.CURRENCY:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `more than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `less than ${this.fieldConstrain.constrain.values[0]}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.fieldConstrain.constrain.values[0]} and ${this.fieldConstrain.constrain.values[1]}`;\n            break;\n        }\n        break;\n      case ColumnType.DATE:\n        switch (this.fieldConstrain.constrain.type) {\n          case MesurableConstrainType.EQUALS:\n            this.finalString += `equal to ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.MORETHAN:\n            this.finalString += `after ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.LESSTHAN:\n            this.finalString += `before ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )}`;\n            break;\n          case MesurableConstrainType.BETWEEN:\n            this.finalString += `between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n          case MesurableConstrainType.NOTBETWEEN:\n            this.finalString += `not between ${this.shortDate(\n              this.fieldConstrain.constrain.values[0]\n            )} and ${this.shortDate(this.fieldConstrain.constrain.values[1])}`;\n            break;\n        }\n\n        break;\n      case ColumnType.STRING:\n      case ColumnType.CUIT:\n      case ColumnType.PHONE:\n        for (\n          let i = 0;\n          i  1) {\n            if (i  false,\n        style: {},\n      },\n    };\n    if (this.strAccordion) this.strAccordion.closeAll();\n  }\n\n  updateStringConstrain() {\n    let values: {\n      startWith: any;\n      startWithToogle: any;\n      includes: any;\n      includesToogle: any;\n      endsWith: any;\n      endsWithToogle: any;\n    } = this.stringFormGroup.value;\n\n    this.fieldConstrain.constrain.clearConstrains();\n    if (values.startWithToogle && values.startWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.STARTSWITH,\n        value: values.startWith,\n      });\n    if (values.includesToogle && values.includes)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.CONTAINS,\n        value: values.includes,\n      });\n    if (values.endsWithToogle && values.endsWith)\n      this.fieldConstrain.constrain.addConstrain({\n        type: StringConstrainType.ENDWITH,\n        value: values.endsWith,\n      });\n    this.getFinalText();\n  }\n\n  closeDialog() {\n    this.dialogRef.close(this.fieldConstrain);\n    console.log(this.fieldConstrain.constrain);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./constrain-creator.component.css\n                \n                .constrain-mat-content-dual {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n}\n\n.number-constrain-selector {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.number-constrain-selector > * {\n  flex-grow: 1;\n}\n\n.flex-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.mat-dialog-content {\n  max-height: initial;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ConstrainCreationForm', 'selector': 'constrain-creation-form-dialog'},{'name': 'ConstrainCreatorComponent', 'selector': 'litotable-constrain-creator'},{'name': 'DialogColorPicker', 'selector': 'dialog-overview-example-dialog'},{'name': 'LitoColorPickerComponent', 'selector': 'app-lito-color-picker'},{'name': 'LitotableComponent', 'selector': 'lito-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConstrainCreatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOperationConfig.html":{"url":"classes/CreateOperationConfig.html","title":"class - CreateOperationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOperationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Operation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fields: OperationField[])\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                  \n                                                        \n                                                                        OperationField[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OperationField[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableOperation\n\n                    \n                \n                        \n                            \n                                Inherited from         Operation\n\n                            \n                        \n                    \n                        \n                                Defined in         Operation:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CuitPipe.html":{"url":"pipes/CuitPipe.html","title":"pipe - CuitPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CuitPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/litotable/pipes/cuit.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        cuit\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, separador: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/pipes/cuit.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    separador\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '.'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cuit' })\nexport class CuitPipe implements PipeTransform {\n  transform(value: number, separador: string = '.'): string {\n    let result = value.toString().split('');\n    result = [\n      ...result.slice(0, 2),\n      separador,\n      ...result.slice(2, 10),\n      separador,\n      ...result.slice(10),\n    ];\n    return result.join('');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateConstrain.html":{"url":"classes/DateConstrain.html","title":"class - DateConstrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateConstrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is for date constrains\n\n            \n\n\n            \n                Implements\n            \n            \n                            Constrain\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enable\n                            \n                            \n                                style\n                            \n                            \n                                trigger\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: MesurableConstrainType, values: [Date, Date], style: Object, enable: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        MesurableConstrainType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    [Date, Date]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MesurableConstrainType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [Date, Date]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteOperationConfig.html":{"url":"classes/DeleteOperationConfig.html","title":"class - DeleteOperationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteOperationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Operation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableOperation\n\n                    \n                \n                        \n                            \n                                Inherited from         Operation\n\n                            \n                        \n                    \n                        \n                                Defined in         Operation:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogColorData.html":{"url":"interfaces/DialogColorData.html","title":"interface - DialogColorData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogColorData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colors\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colors:         LitotableColor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LitotableColor[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { LitotableColor } from '../configurations/litotable.config';\n\nexport interface DialogColorData {\n  title: string;\n  value: string;\n  colors: LitotableColor[];\n}\n\n@Component({\n  selector: 'app-lito-color-picker',\n  templateUrl: './lito-color-picker.component.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class LitoColorPickerComponent implements OnInit {\n  @Input('colors') colors?: LitotableColor[];\n  @Input('content') content: string = 'color';\n  @Output('result') result: EventEmitter = new EventEmitter();\n  @Output('newColorArray') arr: EventEmitter =\n    new EventEmitter();\n  value?: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogColorPicker, {\n      width: '380px',\n      data: { colors: this.colors, value: this.value, title: this.content },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-color-picker.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class DialogColorPicker {\n  value: string = '';\n  nc: [number, number, number] = [0, 0, 0];\n  newColorString = 'rgb(255, 255, 255)';\n  fgc: string = '#222';\n  mainColors: LitotableColor[] = MAIN_COLORS;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogColorData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  changeNewColorValue(color: string, value: any) {\n    switch (color) {\n      case 'r':\n        this.nc[0] = value;\n        break;\n      case 'g':\n        this.nc[1] = value;\n        break;\n      case 'b':\n        this.nc[2] = value;\n        break;\n    }\n    this.newColorString = `rgb(${this.nc[0]}, ${this.nc[1]},${this.nc[2]})`;\n    if (this.nc.reduce((a, c) => a + c) / 3 \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogColorPicker.html":{"url":"components/DialogColorPicker.html","title":"component - DialogColorPicker","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogColorPicker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dialog-overview-example-dialog\n            \n\n            \n                styleUrls\n                ./lito-color-picker.component.css\n            \n\n\n\n            \n                templateUrl\n                dialog-color-picker.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                fgc\n                            \n                            \n                                mainColors\n                            \n                            \n                                nc\n                            \n                            \n                                newColorString\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeNewColorValue\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogColorData)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogColorData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeNewColorValue\n                        \n                    \n                \n            \n            \n                \nchangeNewColorValue(color: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogColorData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fgc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#222'\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LitotableColor[]\n\n                    \n                \n                \n                    \n                        Default value : MAIN_COLORS\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nc\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number, number]\n\n                    \n                \n                \n                    \n                        Default value : [0, 0, 0]\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newColorString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'rgb(255, 255, 255)'\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { LitotableColor } from '../configurations/litotable.config';\n\nexport interface DialogColorData {\n  title: string;\n  value: string;\n  colors: LitotableColor[];\n}\n\n@Component({\n  selector: 'app-lito-color-picker',\n  templateUrl: './lito-color-picker.component.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class LitoColorPickerComponent implements OnInit {\n  @Input('colors') colors?: LitotableColor[];\n  @Input('content') content: string = 'color';\n  @Output('result') result: EventEmitter = new EventEmitter();\n  @Output('newColorArray') arr: EventEmitter =\n    new EventEmitter();\n  value?: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogColorPicker, {\n      width: '380px',\n      data: { colors: this.colors, value: this.value, title: this.content },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-color-picker.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class DialogColorPicker {\n  value: string = '';\n  nc: [number, number, number] = [0, 0, 0];\n  newColorString = 'rgb(255, 255, 255)';\n  fgc: string = '#222';\n  mainColors: LitotableColor[] = MAIN_COLORS;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogColorData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  changeNewColorValue(color: string, value: any) {\n    switch (color) {\n      case 'r':\n        this.nc[0] = value;\n        break;\n      case 'g':\n        this.nc[1] = value;\n        break;\n      case 'b':\n        this.nc[2] = value;\n        break;\n    }\n    this.newColorString = `rgb(${this.nc[0]}, ${this.nc[1]},${this.nc[2]})`;\n    if (this.nc.reduce((a, c) => a + c) / 3 \n    \n\n    \n        \n  {{data.title?data.title:'Colors'}}\n\n\n  \n    circle\n    circle\n  \n\n\n    \n\n    \n                \n                    ./lito-color-picker.component.css\n                \n                .colors-container {\n  margin: 1.5rem auto 0 !important;\n  width: 76%;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n\n.colors-container > * {\n  justify-self: center;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{data.title?data.title:\\'Colors\\'}}      circle    circle  '\n    var COMPONENTS = [{'name': 'ConstrainCreationForm', 'selector': 'constrain-creation-form-dialog'},{'name': 'ConstrainCreatorComponent', 'selector': 'litotable-constrain-creator'},{'name': 'DialogColorPicker', 'selector': 'dialog-overview-example-dialog'},{'name': 'LitoColorPickerComponent', 'selector': 'app-lito-color-picker'},{'name': 'LitotableComponent', 'selector': 'lito-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogColorPicker'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayedColumns.html":{"url":"classes/DisplayedColumns.html","title":"class - DisplayedColumns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayedColumns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/litotable.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionColumn\n                            \n                            \n                                columnGroups\n                            \n                            \n                                columnNames\n                            \n                            \n                                columns\n                            \n                            \n                                columnTypes\n                            \n                            \n                                selectable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allVisible\n                            \n                            \n                                changeColumnVisivility\n                            \n                            \n                                updateGroups\n                            \n                            \n                                updateVisivility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(columns: Column[], selectable: boolean, actionsColumn: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/litotable.component.ts:357\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        columns\n                                                  \n                                                        \n                                                                        Column[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionsColumn\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionColumn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:356\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnGroups\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:357\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:353\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:352\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColumnType[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:354\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:355\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        allVisible\n                        \n                    \n                \n            \n            \n                \nallVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:401\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeColumnVisivility\n                        \n                    \n                \n            \n            \n                \nchangeColumnVisivility(column: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:376\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    column\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroups\n                        \n                    \n                \n            \n            \n                \nupdateGroups()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:395\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateVisivility\n                        \n                    \n                \n            \n            \n                \nupdateVisivility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:386\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstriansStyle';\nimport {\n  LitoRowAction,\n  LitoRowActionConfirmation,\n  TableConfigurations,\n} from './configurations/litotable.config';\nimport {\n  TableOperation,\n  TableOperationConfig,\n} from './configurations/tableCrud.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './litotable.component.html',\n  styleUrls: ['./litotable.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  columns: Column[] = [];\n  columnTypes = ColumnType;\n  numberConstrainType = MesurableConstrainType;\n  operationTypes = TableOperation;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n  confirmation?: {\n    confirmationData: LitoRowActionConfirmation;\n    row: any;\n    action: LitoRowAction;\n  };\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable;\n  @Input('type') dataType!: Object;\n  @Input('operations') operations?: TableOperationConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(\n          x.propertyKey,\n          x.metadata.trigger,\n          x.metadata.style,\n          x.metadata.enable,\n          x.constrain\n        );\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(\n      this.columns,\n      this.selection,\n      this.tableConfigurations?.actionsColumn != undefined\n    );\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  openCreationForm() {\n    // this.creationFormOpen = !this.creationFormOpen;\n  }\n\n  tableDrop(event: CdkDragDrop) {\n    moveItemInArray(\n      this.displayedColumns.columnNames,\n      event.previousIndex + 1,\n      event.currentIndex + 1\n    );\n  }\n\n  onActionClick(row: any, action: LitoRowAction, actionTdDiv?: HTMLDivElement) {\n    console.log(actionTdDiv?.parentNode?.parentNode);\n    if (\n      action.actionResult.willUpdateRow ||\n      action.actionResult.willDeleteRow\n    ) {\n      row.processing = true;\n      setTimeout(() => {\n        action.actionResult.actionObservable\n          ? action.actionResult.actionObservable.subscribe({\n              next: (datos: any) => {\n                this.updateRow(\n                  row,\n                  action.actionResult.willDeleteRow ? null : datos\n                );\n              },\n              complete: () => {\n                row.processing = false;\n              },\n            })\n          : null;\n      }, 4000);\n    }\n  }\n\n  updateRow(row: any, newRow: any) {\n    let indx = this.dataSource.data.indexOf(row);\n    if (newRow) {\n      this.dataSource.data[indx] = newRow;\n    } else {\n      this.dataSource.data.splice(indx, 1);\n    }\n    this.dataSource._updateChangeSubscription();\n  }\n\n  performFooterAction() {\n    if (\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction\n    ) {\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction();\n    }\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  actionColumn: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(\n    columns: Column[] = [],\n    selectable: boolean = false,\n    actionsColumn: boolean = false\n  ) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    this.actionColumn = actionsColumn;\n    if (selectable) this.columnNames.unshift('selection');\n    if (actionsColumn) this.columnNames.push('actions');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateVisivility() {\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  checked: boolean;\n  constructor(name: string) {\n    this.name = name;\n    this.checked = this.checkState();\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order);\n    this.colspan = groupData.length;\n    if (groupData.length != 0) this.start = groupData[0].order;\n    this.checked = this.checkState();\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n  toogleVisibbility(state: boolean) {\n    for (const c of this.columns) {\n      c.visible = state;\n    }\n  }\n  checkState() {\n    return this.columns.some((x) => x.visible);\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    this.groupColumns.forEach((e) => e.updateColspan());\n    let deletion = 0;\n    for (let i = 0; i  y.visible)[0];\n\n      if (element.colspan != 0) {\n        let index = visibleColumns.findIndex(\n          (x) => x.propertyKey == firstVisible.propertyKey\n        );\n        this.displayNames.splice(\n          1 + index - deletion,\n          element.colspan,\n          element.name\n        );\n        deletion += element.colspan - 1;\n      }\n    }\n    /* \n    this.displayNames = visibleColumns\n      .reduce(\n        (a, c) => {\n          const includes = this.groupColumns.some((x) => x.columns.includes(c));\n          let str = '';\n          this.groupColumns.forEach((gc) => {\n            if (gc.columns.includes(c)) {\n              str = gc.name;\n            }\n          });\n          a.push(includes ? str : 'empty-group');\n          return a;\n        },\n        ['empty-group']\n      )\n      .reduce(\n        (a, c) => {\n          if (c == 'empty-group' || !a.includes(c)) {\n            a.push(c);\n          }\n          return a;\n        },\n        ['empty-group']\n      );\n    */\n    this.displayNames.unshift();\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  style: Object;\n  constrain: (e: any) => boolean;\n  enable: boolean;\n  _constrain: Constrain;\n  constructor(\n    name: string,\n    constrain: (e: any) => boolean,\n    style: Object,\n    enable: boolean,\n    _constrain: Constrain\n  ) {\n    this.name = name;\n    this.style = style;\n    this.enable = enable;\n    this.constrain = constrain;\n    this._constrain = _constrain;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConstrianStyle.html":{"url":"interfaces/FieldConstrianStyle.html","title":"interface - FieldConstrianStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FieldConstrianStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is for configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            constrain\n                                        \n                                \n                                \n                                        \n                                            constrainName\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            propertyKey\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constrain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        constrain:         Constrain\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Constrain\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        constrainName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        constrainName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        propertyKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        propertyKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupColumn.html":{"url":"classes/GroupColumn.html","title":"class - GroupColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/litotable.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                colspan\n                            \n                            \n                                columns\n                            \n                            \n                                count\n                            \n                            \n                                name\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addColumn\n                            \n                            \n                                checkState\n                            \n                            \n                                toogleVisibbility\n                            \n                            \n                                updateColspan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/litotable.component.ts:417\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:417\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colspan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:416\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Column[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:413\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:414\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:412\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:415\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addColumn\n                        \n                    \n                \n            \n            \n                \naddColumn(c: Column)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:430\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Column\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkState\n                        \n                    \n                \n            \n            \n                \ncheckState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:439\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toogleVisibbility\n                        \n                    \n                \n            \n            \n                \ntoogleVisibbility(state: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:434\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateColspan\n                        \n                    \n                \n            \n            \n                \nupdateColspan()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/litotable.component.ts:422\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstriansStyle';\nimport {\n  LitoRowAction,\n  LitoRowActionConfirmation,\n  TableConfigurations,\n} from './configurations/litotable.config';\nimport {\n  TableOperation,\n  TableOperationConfig,\n} from './configurations/tableCrud.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './litotable.component.html',\n  styleUrls: ['./litotable.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  columns: Column[] = [];\n  columnTypes = ColumnType;\n  numberConstrainType = MesurableConstrainType;\n  operationTypes = TableOperation;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n  confirmation?: {\n    confirmationData: LitoRowActionConfirmation;\n    row: any;\n    action: LitoRowAction;\n  };\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable;\n  @Input('type') dataType!: Object;\n  @Input('operations') operations?: TableOperationConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(\n          x.propertyKey,\n          x.metadata.trigger,\n          x.metadata.style,\n          x.metadata.enable,\n          x.constrain\n        );\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(\n      this.columns,\n      this.selection,\n      this.tableConfigurations?.actionsColumn != undefined\n    );\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  openCreationForm() {\n    // this.creationFormOpen = !this.creationFormOpen;\n  }\n\n  tableDrop(event: CdkDragDrop) {\n    moveItemInArray(\n      this.displayedColumns.columnNames,\n      event.previousIndex + 1,\n      event.currentIndex + 1\n    );\n  }\n\n  onActionClick(row: any, action: LitoRowAction, actionTdDiv?: HTMLDivElement) {\n    console.log(actionTdDiv?.parentNode?.parentNode);\n    if (\n      action.actionResult.willUpdateRow ||\n      action.actionResult.willDeleteRow\n    ) {\n      row.processing = true;\n      setTimeout(() => {\n        action.actionResult.actionObservable\n          ? action.actionResult.actionObservable.subscribe({\n              next: (datos: any) => {\n                this.updateRow(\n                  row,\n                  action.actionResult.willDeleteRow ? null : datos\n                );\n              },\n              complete: () => {\n                row.processing = false;\n              },\n            })\n          : null;\n      }, 4000);\n    }\n  }\n\n  updateRow(row: any, newRow: any) {\n    let indx = this.dataSource.data.indexOf(row);\n    if (newRow) {\n      this.dataSource.data[indx] = newRow;\n    } else {\n      this.dataSource.data.splice(indx, 1);\n    }\n    this.dataSource._updateChangeSubscription();\n  }\n\n  performFooterAction() {\n    if (\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction\n    ) {\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction();\n    }\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  actionColumn: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(\n    columns: Column[] = [],\n    selectable: boolean = false,\n    actionsColumn: boolean = false\n  ) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    this.actionColumn = actionsColumn;\n    if (selectable) this.columnNames.unshift('selection');\n    if (actionsColumn) this.columnNames.push('actions');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateVisivility() {\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  checked: boolean;\n  constructor(name: string) {\n    this.name = name;\n    this.checked = this.checkState();\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order);\n    this.colspan = groupData.length;\n    if (groupData.length != 0) this.start = groupData[0].order;\n    this.checked = this.checkState();\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n  toogleVisibbility(state: boolean) {\n    for (const c of this.columns) {\n      c.visible = state;\n    }\n  }\n  checkState() {\n    return this.columns.some((x) => x.visible);\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    this.groupColumns.forEach((e) => e.updateColspan());\n    let deletion = 0;\n    for (let i = 0; i  y.visible)[0];\n\n      if (element.colspan != 0) {\n        let index = visibleColumns.findIndex(\n          (x) => x.propertyKey == firstVisible.propertyKey\n        );\n        this.displayNames.splice(\n          1 + index - deletion,\n          element.colspan,\n          element.name\n        );\n        deletion += element.colspan - 1;\n      }\n    }\n    /* \n    this.displayNames = visibleColumns\n      .reduce(\n        (a, c) => {\n          const includes = this.groupColumns.some((x) => x.columns.includes(c));\n          let str = '';\n          this.groupColumns.forEach((gc) => {\n            if (gc.columns.includes(c)) {\n              str = gc.name;\n            }\n          });\n          a.push(includes ? str : 'empty-group');\n          return a;\n        },\n        ['empty-group']\n      )\n      .reduce(\n        (a, c) => {\n          if (c == 'empty-group' || !a.includes(c)) {\n            a.push(c);\n          }\n          return a;\n        },\n        ['empty-group']\n      );\n    */\n    this.displayNames.unshift();\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  style: Object;\n  constrain: (e: any) => boolean;\n  enable: boolean;\n  _constrain: Constrain;\n  constructor(\n    name: string,\n    constrain: (e: any) => boolean,\n    style: Object,\n    enable: boolean,\n    _constrain: Constrain\n  ) {\n    this.name = name;\n    this.style = style;\n    this.enable = enable;\n    this.constrain = constrain;\n    this._constrain = _constrain;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LitoColorPickerComponent.html":{"url":"components/LitoColorPickerComponent.html","title":"component - LitoColorPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LitoColorPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lito-color-picker\n            \n\n            \n                styleUrls\n                ./lito-color-picker.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lito-color-picker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                newColorArray\n                            \n                            \n                                result\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                \n                \n                    \n                        Type :         LitotableColor[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'color'\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:29\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        newColorArray\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        result\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/lito-color-picker/lito-color-picker.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { LitotableColor } from '../configurations/litotable.config';\n\nexport interface DialogColorData {\n  title: string;\n  value: string;\n  colors: LitotableColor[];\n}\n\n@Component({\n  selector: 'app-lito-color-picker',\n  templateUrl: './lito-color-picker.component.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class LitoColorPickerComponent implements OnInit {\n  @Input('colors') colors?: LitotableColor[];\n  @Input('content') content: string = 'color';\n  @Output('result') result: EventEmitter = new EventEmitter();\n  @Output('newColorArray') arr: EventEmitter =\n    new EventEmitter();\n  value?: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogColorPicker, {\n      width: '380px',\n      data: { colors: this.colors, value: this.value, title: this.content },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) this.result.emit(result);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-color-picker.html',\n  styleUrls: ['./lito-color-picker.component.css'],\n})\nexport class DialogColorPicker {\n  value: string = '';\n  nc: [number, number, number] = [0, 0, 0];\n  newColorString = 'rgb(255, 255, 255)';\n  fgc: string = '#222';\n  mainColors: LitotableColor[] = MAIN_COLORS;\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogColorData\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  changeNewColorValue(color: string, value: any) {\n    switch (color) {\n      case 'r':\n        this.nc[0] = value;\n        break;\n      case 'g':\n        this.nc[1] = value;\n        break;\n      case 'b':\n        this.nc[2] = value;\n        break;\n    }\n    this.newColorString = `rgb(${this.nc[0]}, ${this.nc[1]},${this.nc[2]})`;\n    if (this.nc.reduce((a, c) => a + c) / 3 \n    \n\n    \n        {{ content }}\n\n    \n\n    \n                \n                    ./lito-color-picker.component.css\n                \n                .colors-container {\n  margin: 1.5rem auto 0 !important;\n  width: 76%;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n\n.colors-container > * {\n  justify-self: center;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ content }}'\n    var COMPONENTS = [{'name': 'ConstrainCreationForm', 'selector': 'constrain-creation-form-dialog'},{'name': 'ConstrainCreatorComponent', 'selector': 'litotable-constrain-creator'},{'name': 'DialogColorPicker', 'selector': 'dialog-overview-example-dialog'},{'name': 'LitoColorPickerComponent', 'selector': 'app-lito-color-picker'},{'name': 'LitotableComponent', 'selector': 'lito-table'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LitoColorPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LitoFooterAction.html":{"url":"interfaces/LitoFooterAction.html","title":"interface - LitoFooterAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LitoFooterAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/litotable.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionResult\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            template\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionResult\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionResult:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template:         Component\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Component\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface LitoFooterAction {\n  icon?: string;\n  content?: string;\n  color?: string;\n  actionResult: {\n    willAddRow: boolean;\n    actionObservable?: Observable;\n    nonObservableAction?: () => any;\n  };\n  template?: Component;\n}\n\nexport interface LitoRowAction {\n  tooltip: string;\n  icon: string;\n  color: string;\n  actionResult: {\n    willUpdateRow?: boolean;\n    willDeleteRow?: boolean;\n    actionObservable?: Observable;\n  };\n  confirmation?: LitoRowActionConfirmation;\n}\nexport interface LitoRowActionConfirmation {\n  title: string;\n  content: string;\n}\nexport class LitotableColor {\n  value: string;\n  constructor(\n    value: [number, number, number] | [number, number, number, number] | string\n  ) {\n    this.value = '';\n    if (typeof value == 'string') {\n      this.value = value;\n    } else {\n      if (value.length == 3) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\n      } else if (value.length == 4) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\n      }\n    }\n  }\n}\nexport interface TableConfigurations {\n  paginationSizes?: number[];\n  hoverStyle?: RowStyle;\n  selectionStyle?: RowStyle;\n  rowStyleColors?: LitotableColor[];\n  headerBorders?: boolean;\n  cellBorders?: boolean;\n  actionsColumn?: LitoRowAction[];\n  footerAction?: LitoFooterAction;\n}\n\nexport enum RowStyle {\n  BORDER = 1,\n  SHADOW = 2,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LitoRowAction.html":{"url":"interfaces/LitoRowAction.html","title":"interface - LitoRowAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LitoRowAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/litotable.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionResult\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmation\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            tooltip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionResult\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionResult:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmation:         LitoRowActionConfirmation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LitoRowActionConfirmation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface LitoFooterAction {\n  icon?: string;\n  content?: string;\n  color?: string;\n  actionResult: {\n    willAddRow: boolean;\n    actionObservable?: Observable;\n    nonObservableAction?: () => any;\n  };\n  template?: Component;\n}\n\nexport interface LitoRowAction {\n  tooltip: string;\n  icon: string;\n  color: string;\n  actionResult: {\n    willUpdateRow?: boolean;\n    willDeleteRow?: boolean;\n    actionObservable?: Observable;\n  };\n  confirmation?: LitoRowActionConfirmation;\n}\nexport interface LitoRowActionConfirmation {\n  title: string;\n  content: string;\n}\nexport class LitotableColor {\n  value: string;\n  constructor(\n    value: [number, number, number] | [number, number, number, number] | string\n  ) {\n    this.value = '';\n    if (typeof value == 'string') {\n      this.value = value;\n    } else {\n      if (value.length == 3) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\n      } else if (value.length == 4) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\n      }\n    }\n  }\n}\nexport interface TableConfigurations {\n  paginationSizes?: number[];\n  hoverStyle?: RowStyle;\n  selectionStyle?: RowStyle;\n  rowStyleColors?: LitotableColor[];\n  headerBorders?: boolean;\n  cellBorders?: boolean;\n  actionsColumn?: LitoRowAction[];\n  footerAction?: LitoFooterAction;\n}\n\nexport enum RowStyle {\n  BORDER = 1,\n  SHADOW = 2,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LitoRowActionConfirmation.html":{"url":"interfaces/LitoRowActionConfirmation.html","title":"interface - LitoRowActionConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LitoRowActionConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/litotable.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface LitoFooterAction {\n  icon?: string;\n  content?: string;\n  color?: string;\n  actionResult: {\n    willAddRow: boolean;\n    actionObservable?: Observable;\n    nonObservableAction?: () => any;\n  };\n  template?: Component;\n}\n\nexport interface LitoRowAction {\n  tooltip: string;\n  icon: string;\n  color: string;\n  actionResult: {\n    willUpdateRow?: boolean;\n    willDeleteRow?: boolean;\n    actionObservable?: Observable;\n  };\n  confirmation?: LitoRowActionConfirmation;\n}\nexport interface LitoRowActionConfirmation {\n  title: string;\n  content: string;\n}\nexport class LitotableColor {\n  value: string;\n  constructor(\n    value: [number, number, number] | [number, number, number, number] | string\n  ) {\n    this.value = '';\n    if (typeof value == 'string') {\n      this.value = value;\n    } else {\n      if (value.length == 3) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\n      } else if (value.length == 4) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\n      }\n    }\n  }\n}\nexport interface TableConfigurations {\n  paginationSizes?: number[];\n  hoverStyle?: RowStyle;\n  selectionStyle?: RowStyle;\n  rowStyleColors?: LitotableColor[];\n  headerBorders?: boolean;\n  cellBorders?: boolean;\n  actionsColumn?: LitoRowAction[];\n  footerAction?: LitoFooterAction;\n}\n\nexport enum RowStyle {\n  BORDER = 1,\n  SHADOW = 2,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LitotableColor.html":{"url":"classes/LitotableColor.html","title":"class - LitotableColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LitotableColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/litotable.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value:  |  | string)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/litotable.config.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                     |  | string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/litotable.config.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface LitoFooterAction {\n  icon?: string;\n  content?: string;\n  color?: string;\n  actionResult: {\n    willAddRow: boolean;\n    actionObservable?: Observable;\n    nonObservableAction?: () => any;\n  };\n  template?: Component;\n}\n\nexport interface LitoRowAction {\n  tooltip: string;\n  icon: string;\n  color: string;\n  actionResult: {\n    willUpdateRow?: boolean;\n    willDeleteRow?: boolean;\n    actionObservable?: Observable;\n  };\n  confirmation?: LitoRowActionConfirmation;\n}\nexport interface LitoRowActionConfirmation {\n  title: string;\n  content: string;\n}\nexport class LitotableColor {\n  value: string;\n  constructor(\n    value: [number, number, number] | [number, number, number, number] | string\n  ) {\n    this.value = '';\n    if (typeof value == 'string') {\n      this.value = value;\n    } else {\n      if (value.length == 3) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\n      } else if (value.length == 4) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\n      }\n    }\n  }\n}\nexport interface TableConfigurations {\n  paginationSizes?: number[];\n  hoverStyle?: RowStyle;\n  selectionStyle?: RowStyle;\n  rowStyleColors?: LitotableColor[];\n  headerBorders?: boolean;\n  cellBorders?: boolean;\n  actionsColumn?: LitoRowAction[];\n  footerAction?: LitoFooterAction;\n}\n\nexport enum RowStyle {\n  BORDER = 1,\n  SHADOW = 2,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LitotableModule.html":{"url":"modules/LitotableModule.html","title":"module - LitotableModule","body":"\n                   \n\n\n\n\n    Modules\n    LitotableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LitotableModule\n\n\n\ncluster_LitotableModule_exports\n\n\n\ncluster_LitotableModule_declarations\n\n\n\n\nConstrainCreationForm\n\nConstrainCreationForm\n\n\n\nLitotableModule\n\nLitotableModule\n\nLitotableModule -->\n\nConstrainCreationForm->LitotableModule\n\n\n\n\n\nConstrainCreatorComponent\n\nConstrainCreatorComponent\n\nLitotableModule -->\n\nConstrainCreatorComponent->LitotableModule\n\n\n\n\n\nCuitPipe\n\nCuitPipe\n\nLitotableModule -->\n\nCuitPipe->LitotableModule\n\n\n\n\n\nDialogColorPicker\n\nDialogColorPicker\n\nLitotableModule -->\n\nDialogColorPicker->LitotableModule\n\n\n\n\n\nLitoColorPickerComponent\n\nLitoColorPickerComponent\n\nLitotableModule -->\n\nLitoColorPickerComponent->LitotableModule\n\n\n\n\n\nLitotableComponent\n\nLitotableComponent\n\nLitotableModule -->\n\nLitotableComponent->LitotableModule\n\n\n\n\n\nPhonePipe\n\nPhonePipe\n\nLitotableModule -->\n\nPhonePipe->LitotableModule\n\n\n\n\n\nLitotableComponent \n\nLitotableComponent \n\nLitotableComponent  -->\n\nLitotableModule->LitotableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/litotable/litotable.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConstrainCreationForm\n                        \n                        \n                            ConstrainCreatorComponent\n                        \n                        \n                            CuitPipe\n                        \n                        \n                            DialogColorPicker\n                        \n                        \n                            LitoColorPickerComponent\n                        \n                        \n                            LitotableComponent\n                        \n                        \n                            PhonePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LitotableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CuitPipe } from './pipes/cuit.pipe';\nimport { LitotableComponent } from './litotable.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { PhonePipe } from './pipes/phone.pipe';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport {\n  LitoColorPickerComponent,\n  DialogColorPicker,\n} from './lito-color-picker/lito-color-picker.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {\n  ConstrainCreatorComponent,\n  ConstrainCreationForm,\n} from './constrain-creator/constrain-creator.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\n@NgModule({\n  declarations: [\n    CuitPipe,\n    PhonePipe,\n    LitotableComponent,\n    LitoColorPickerComponent,\n    DialogColorPicker,\n    ConstrainCreatorComponent,\n    ConstrainCreationForm,\n  ],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatRadioModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatDialogModule,\n    MatTabsModule,\n    FormsModule,\n    MatSliderModule,\n    MatSelectModule,\n    MatStepperModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatDividerModule,\n    DragDropModule,\n    MatSidenavModule,\n  ],\n  exports: [LitotableComponent],\n})\nexport class LitotableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberConstrain.html":{"url":"classes/NumberConstrain.html","title":"class - NumberConstrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberConstrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is for numbers constrains (integer, float, decimal, etc..)\n\n            \n\n\n            \n                Implements\n            \n            \n                            Constrain\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enable\n                            \n                            \n                                style\n                            \n                            \n                                trigger\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: MesurableConstrainType, values: [number, number], style: Object, enable: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        MesurableConstrainType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    [number, number]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MesurableConstrainType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Operation.html":{"url":"classes/Operation.html","title":"class - Operation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Operation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: TableOperation)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        TableOperation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableOperation\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperationField.html":{"url":"interfaces/OperationField.html","title":"interface - OperationField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OperationField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            propertyKey\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validators\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        propertyKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        propertyKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validators:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhonePipe.html":{"url":"pipes/PhonePipe.html","title":"pipe - PhonePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PhonePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/litotable/pipes/phone.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        phone\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, format?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/pipes/phone.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'phone' })\nexport class PhonePipe implements PipeTransform {\n  transform(value: number, format?: string): string {\n    // format style: \"(###) ####-####\"\n    if (format) {\n      let result = value.toString().split('');\n      let _format = Array.from(format);\n      for (let i = _format.length - 1; i >= 0; i--) {\n        if (_format[i] == '#') {\n          const temp = result.pop();\n          if (temp) {\n            _format[i] = temp;\n          } else {\n            _format[i] = '0';\n          }\n        }\n      }\n      result = _format;\n      return result.join('');\n    }\n    return value.toString();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowConstrain.html":{"url":"classes/RowConstrain.html","title":"class - RowConstrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowConstrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/litotable.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _constrain\n                            \n                            \n                                constrain\n                            \n                            \n                                enable\n                            \n                            \n                                name\n                            \n                            \n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, constrain: (e: any) => void, style: Object, enable: boolean, _constrain: Constrain)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/litotable.component.ts:507\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        constrain\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _constrain\n                                                  \n                                                        \n                                                                        Constrain\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _constrain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constrain\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:507\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constrain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:505\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:506\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:503\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/litotable.component.ts:504\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport 'reflect-metadata';\nimport { Observable } from 'rxjs';\nimport { Column } from './column';\nimport {\n  Constrain,\n  FieldConstrianStyle,\n  MesurableConstrainType,\n} from './configurations/fieldConstriansStyle';\nimport {\n  LitoRowAction,\n  LitoRowActionConfirmation,\n  TableConfigurations,\n} from './configurations/litotable.config';\nimport {\n  TableOperation,\n  TableOperationConfig,\n} from './configurations/tableCrud.config';\nimport { ColumnType, TableColumnMetadata } from './decorators/column.decorator';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'lito-table',\n  templateUrl: './litotable.component.html',\n  styleUrls: ['./litotable.component.css'],\n})\nexport class LitotableComponent implements OnInit, AfterViewInit {\n  columns: Column[] = [];\n  columnTypes = ColumnType;\n  numberConstrainType = MesurableConstrainType;\n  operationTypes = TableOperation;\n  displayedColumns: DisplayedColumns = new DisplayedColumns();\n  rowConstrains: RowConstrain[] = [];\n  dataSource = new MatTableDataSource();\n  fetching: boolean = false;\n  selectedRows = new Set();\n  constrainedRows = new Set();\n  showSelectedOnly: boolean = false;\n  creationFormOpen: boolean = false;\n  confirmation?: {\n    confirmationData: LitoRowActionConfirmation;\n    row: any;\n    action: LitoRowAction;\n  };\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @Input('source') inputSource!: Observable;\n  @Input('type') dataType!: Object;\n  @Input('operations') operations?: TableOperationConfig;\n  @Input('selection') selection!: boolean;\n  @Input('configurations') tableConfigurations?: TableConfigurations;\n  @Input('fieldConstrians') fieldConstrians: FieldConstrianStyle[] = [];\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(private _liveAnnouncer: LiveAnnouncer) {}\n\n  ngOnInit(): void {\n    this.setColumns();\n    if (this.inputSource != undefined) {\n      this.fetching = true;\n      this.inputSource.subscribe((datos: any[]) => {\n        this.fetching = false;\n        this.dataSource = new MatTableDataSource(datos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.setRowsConstrains(datos);\n      });\n    } else {\n      let c: any[] = [];\n      this.dataSource = new MatTableDataSource(c);\n    }\n    this.dataSource.paginator = this.paginator;\n  }\n\n  parseDate(input: Date): string {\n    return input.toJSON();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  announceSortChange(sortState: Sort) {\n    if (sortState.direction) {\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\n    } else {\n      this._liveAnnouncer.announce('Sorting cleared');\n    }\n  }\n\n  updateFieldsToRowsConstrains() {\n    if (this.fieldConstrians) {\n      this.rowConstrains = this.fieldConstrians.map((x) => {\n        return new RowConstrain(\n          x.propertyKey,\n          x.metadata.trigger,\n          x.metadata.style,\n          x.metadata.enable,\n          x.constrain\n        );\n      });\n    }\n  }\n\n  setRowsConstrains(source: any[]) {\n    this.updateFieldsToRowsConstrains();\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  updateRowConstrains() {\n    this.constrainedRows = new Set();\n\n    const source: any[] = this.dataSource.data;\n    source.forEach((element) => {\n      this.rowConstrains.forEach((rc) => {\n        const value = element[rc.name];\n        if (rc._constrain.trigger(value)) {\n          if (rc._constrain.enable) {\n            if (!element['rowStyle']) {\n              Object.defineProperty(element, 'rowStyle', {\n                configurable: true,\n                enumerable: false,\n                value: { style: rc._constrain.style },\n                writable: true,\n              });\n            } else if (element['rowStyle']) {\n              element['rowStyle'].style = {\n                ...element['rowStyle'].style,\n                ...rc._constrain.style,\n              };\n            }\n            this.constrainedRows.add(element);\n          }\n        }\n      });\n    });\n  }\n\n  hasConstrain(propertyKey: string, value: any): boolean {\n    let result = false;\n    if (this.rowConstrains.length != 0) {\n    }\n    return result;\n  }\n\n  setColumns() {\n    const columnsMetadata: any[] = Reflect.getMetadata(\n      'columnsMetadata',\n      this.dataType\n    );\n\n    let columnGroups: ColumnGroups = new ColumnGroups(0);\n\n    if (columnsMetadata != undefined) {\n      this.columns = columnsMetadata.map(\n        (c: { propertyKey: string; metadata: TableColumnMetadata }, i) => {\n          let column = new Column(\n            c.propertyKey,\n            c.propertyKey,\n            ColumnType.STRING,\n            c.metadata.order\n          );\n          column.visible =\n            c.metadata.visible == undefined ? true : c.metadata.visible;\n          column.name = c.metadata.columnName || c.propertyKey;\n          column.type = c.metadata.type || ColumnType.STRING;\n          column.format = c.metadata.format || undefined;\n          column.contentAlign = c.metadata.contentAlign || undefined;\n\n          const str = c.metadata.columnGroup?.name;\n          if (str) {\n            if (\n              columnGroups.groupColumns.filter((x) => x.name == str).length == 0\n            ) {\n              let newColGroup = new GroupColumn(str);\n              newColGroup.addColumn(column);\n              columnGroups.groupColumns.push(newColGroup);\n            } else {\n              columnGroups.groupColumns\n                .filter((x) => x.name == str)[0]\n                .addColumn(column);\n            }\n          }\n          return column;\n        }\n      );\n      this.columns.sort((a, b) => {\n        return a.order! - b.order!;\n      });\n    }\n    this.displayedColumns = new DisplayedColumns(\n      this.columns,\n      this.selection,\n      this.tableConfigurations?.actionsColumn != undefined\n    );\n    this.displayedColumns.columnGroups = columnGroups;\n    this.displayedColumns.updateGroups();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selectedRows.size;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows && numRows != 0;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selectedRows.clear()\n      : this.dataSource.data.forEach((row) => this.selectedRows.add(row));\n  }\n\n  selectionToogle(state: boolean, row: any) {\n    if (state) {\n      this.selectedRows.add(row);\n    } else {\n      if (this.selectedRows.has(row)) this.selectedRows.delete(row);\n    }\n  }\n\n  changeConstrainState(\n    value: any,\n    data: Constrain | any,\n    field: string,\n    isStyle: boolean = true\n  ) {\n    if (isStyle && field && field != '') {\n      data.style[field] = value;\n    }\n    if (!isStyle) {\n      switch (field) {\n        case 'number-type':\n          data.type = parseInt(value.value);\n          break;\n        case 'number-value':\n        case 'number-value1':\n          data.values[0] = parseInt(value.target.value);\n          break;\n        case 'number-value2':\n          data.values[1] = parseInt(value.target.value);\n          break;\n      }\n    }\n    this.updateRowConstrains();\n  }\n\n  addConstrain($event: FieldConstrianStyle) {\n    this.fieldConstrians.push($event);\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  updateVisibility() {\n    this.updateFieldsToRowsConstrains();\n    this.updateRowConstrains();\n  }\n\n  removeConstrain(constrain: FieldConstrianStyle) {\n    this.fieldConstrians = this.fieldConstrians.filter((x) => x != constrain);\n    this.updateVisibility();\n  }\n\n  openCreationForm() {\n    // this.creationFormOpen = !this.creationFormOpen;\n  }\n\n  tableDrop(event: CdkDragDrop) {\n    moveItemInArray(\n      this.displayedColumns.columnNames,\n      event.previousIndex + 1,\n      event.currentIndex + 1\n    );\n  }\n\n  onActionClick(row: any, action: LitoRowAction, actionTdDiv?: HTMLDivElement) {\n    console.log(actionTdDiv?.parentNode?.parentNode);\n    if (\n      action.actionResult.willUpdateRow ||\n      action.actionResult.willDeleteRow\n    ) {\n      row.processing = true;\n      setTimeout(() => {\n        action.actionResult.actionObservable\n          ? action.actionResult.actionObservable.subscribe({\n              next: (datos: any) => {\n                this.updateRow(\n                  row,\n                  action.actionResult.willDeleteRow ? null : datos\n                );\n              },\n              complete: () => {\n                row.processing = false;\n              },\n            })\n          : null;\n      }, 4000);\n    }\n  }\n\n  updateRow(row: any, newRow: any) {\n    let indx = this.dataSource.data.indexOf(row);\n    if (newRow) {\n      this.dataSource.data[indx] = newRow;\n    } else {\n      this.dataSource.data.splice(indx, 1);\n    }\n    this.dataSource._updateChangeSubscription();\n  }\n\n  performFooterAction() {\n    if (\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction\n    ) {\n      this.tableConfigurations?.footerAction?.actionResult.nonObservableAction();\n    }\n  }\n}\n\nexport class DisplayedColumns {\n  columns: Column[];\n  columnNames: string[];\n  columnTypes: ColumnType[];\n  selectable: boolean;\n  actionColumn: boolean;\n  columnGroups: ColumnGroups;\n\n  constructor(\n    columns: Column[] = [],\n    selectable: boolean = false,\n    actionsColumn: boolean = false\n  ) {\n    this.columns = columns;\n    this.columnNames = columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    this.columnTypes = columns.map((x) => x.type);\n    this.selectable = selectable;\n    this.actionColumn = actionsColumn;\n    if (selectable) this.columnNames.unshift('selection');\n    if (actionsColumn) this.columnNames.push('actions');\n    this.columnGroups = new ColumnGroups(columns.length);\n  }\n\n  changeColumnVisivility(column: Column) {\n    this.columns.filter((c) => c == column)[0].visible = !column.visible;\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateVisivility() {\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n    this.updateGroups();\n  }\n\n  updateGroups() {\n    this.columnGroups.updateColumns(\n      this.columns.filter((c) => c.visible == true)\n    );\n  }\n\n  allVisible() {\n    this.columns.forEach((c) => (c.visible = true));\n    this.columnNames = this.columns\n      .filter((c) => c.visible == true)\n      .map((x) => x.name);\n    if (this.selectable) this.columnNames.unshift('selection');\n    if (this.actionColumn) this.columnNames.push('actions');\n  }\n}\n\nexport class GroupColumn {\n  name: string;\n  columns: Column[] = [];\n  count: number = 0;\n  start: number = 0;\n  colspan: number = 1;\n  checked: boolean;\n  constructor(name: string) {\n    this.name = name;\n    this.checked = this.checkState();\n  }\n  updateColspan() {\n    let groupData = this.columns\n      .filter((x) => x.visible)\n      .sort((a, b) => a.order - b.order);\n    this.colspan = groupData.length;\n    if (groupData.length != 0) this.start = groupData[0].order;\n    this.checked = this.checkState();\n  }\n  addColumn(c: Column) {\n    this.columns.push(c);\n    this.updateColspan();\n  }\n  toogleVisibbility(state: boolean) {\n    for (const c of this.columns) {\n      c.visible = state;\n    }\n  }\n  checkState() {\n    return this.columns.some((x) => x.visible);\n  }\n}\n\nexport class ColumnGroups {\n  active: boolean = false;\n  groupColumns: GroupColumn[] = [];\n  displayNames: string[] = [];\n  size: number = 0;\n  constructor(length: number) {\n    this.displayNames = new Array(length).fill('empty-group');\n  }\n  updateColumns(visibleColumns: Column[]) {\n    this.displayNames = new Array(visibleColumns.length).fill('empty-group');\n    this.groupColumns.forEach((e) => e.updateColspan());\n    let deletion = 0;\n    for (let i = 0; i  y.visible)[0];\n\n      if (element.colspan != 0) {\n        let index = visibleColumns.findIndex(\n          (x) => x.propertyKey == firstVisible.propertyKey\n        );\n        this.displayNames.splice(\n          1 + index - deletion,\n          element.colspan,\n          element.name\n        );\n        deletion += element.colspan - 1;\n      }\n    }\n    /* \n    this.displayNames = visibleColumns\n      .reduce(\n        (a, c) => {\n          const includes = this.groupColumns.some((x) => x.columns.includes(c));\n          let str = '';\n          this.groupColumns.forEach((gc) => {\n            if (gc.columns.includes(c)) {\n              str = gc.name;\n            }\n          });\n          a.push(includes ? str : 'empty-group');\n          return a;\n        },\n        ['empty-group']\n      )\n      .reduce(\n        (a, c) => {\n          if (c == 'empty-group' || !a.includes(c)) {\n            a.push(c);\n          }\n          return a;\n        },\n        ['empty-group']\n      );\n    */\n    this.displayNames.unshift();\n  }\n}\n\nexport class RowConstrain {\n  name: string;\n  style: Object;\n  constrain: (e: any) => boolean;\n  enable: boolean;\n  _constrain: Constrain;\n  constructor(\n    name: string,\n    constrain: (e: any) => boolean,\n    style: Object,\n    enable: boolean,\n    _constrain: Constrain\n  ) {\n    this.name = name;\n    this.style = style;\n    this.enable = enable;\n    this.constrain = constrain;\n    this._constrain = _constrain;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringConstrain.html":{"url":"classes/StringConstrain.html","title":"class - StringConstrain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringConstrain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is for string constrains\n\n            \n\n\n            \n                Implements\n            \n            \n                            Constrain\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                caseSensitive\n                            \n                            \n                                constrainArray\n                            \n                            \n                                enable\n                            \n                            \n                                style\n                            \n                            \n                                trigger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConstrain\n                            \n                            \n                                clearConstrains\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(style: Object, enable: boolean, caseSense: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:141\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        enable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caseSense\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        caseSensitive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constrainArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StringConstrainObject[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trigger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:151\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConstrain\n                        \n                    \n                \n            \n            \n                \naddConstrain(stringConstrain: StringConstrainObject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stringConstrain\n                                    \n                                                StringConstrainObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearConstrains\n                        \n                    \n                \n            \n            \n                \nclearConstrains()\n                \n            \n\n\n            \n                \n                    Defined in src/app/litotable/configurations/fieldConstriansStyle.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StringConstrainObject.html":{"url":"interfaces/StringConstrainObject.html","title":"interface - StringConstrainObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StringConstrainObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/fieldConstriansStyle.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         StringConstrainType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StringConstrainType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColumnType } from '../decorators/column.decorator';\n\n/**\n * This interface is for configuration\n *\n */\nexport interface FieldConstrianStyle {\n  propertyKey: string;\n  constrainName: string;\n  type: ColumnType;\n  constrain: Constrain;\n  metadata: {\n    enable: boolean;\n    trigger: (e: any) => boolean;\n    style: Object;\n  };\n}\n\n/**\n * This interface is for every Constrain\n */\nexport interface Constrain {\n  style: any;\n  enable: boolean;\n  trigger: (e: any) => boolean;\n}\n\n/**\n * This class is for date constrains\n */\nexport class DateConstrain implements Constrain {\n  style: Object;\n  enable: boolean;\n  values: [Date, Date];\n  type: MesurableConstrainType;\n  constructor(\n    type: MesurableConstrainType,\n    values: [Date, Date],\n    style: Object = {},\n    enable: boolean = true\n  ) {\n    this.type = type;\n    this.values = values;\n    this.style = style;\n    this.enable = enable;\n  }\n  trigger = (e: Date): boolean => {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    switch (this.type) {\n      case MesurableConstrainType.LESSTHAN: {\n        if (e  this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.EQUALS: {\n        if (e == this.values[0]) return true;\n        else return false;\n        break;\n      }\n      case MesurableConstrainType.BETWEEN: {\n        if (this.values.length == 2)\n          if (e > this.values[0] && e  this.values[0] && e  {\n    e = e.toString();\n    let result = true;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumnMetadata.html":{"url":"interfaces/TableColumnMetadata.html","title":"interface - TableColumnMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumnMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/decorators/column.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            columnGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            columnName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            contentAlign\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visible\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columnGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnGroup:         ColumnGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnGroup\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columnName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columnName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentAlign\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentAlign:         ColumnContentAlignment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnContentAlignment\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import 'reflect-metadata';\nexport interface TableColumnMetadata {\n  visible?: boolean;\n  order: number;\n  columnName?: string;\n  type?: ColumnType;\n  format?: string;\n  contentAlign?: ColumnContentAlignment;\n  columnGroup?: ColumnGroup;\n}\n\nexport interface ColumnGroup {\n  name: string;\n}\n\nexport function TableColumn(columnMetadata: TableColumnMetadata) {\n  return (target: Object, propertyKey: string) => {\n    const prevData = Reflect.getMetadata('columnsMetadata', target);\n    const newData = {\n      propertyKey: propertyKey,\n      metadata: columnMetadata,\n    };\n    let data = [];\n    if (prevData != undefined) {\n      data.push(...prevData);\n    }\n    data.push(newData);\n    Reflect.defineMetadata('columnsMetadata', data, target);\n  };\n}\n\nexport enum ColumnType {\n  STRING = 0,\n  INTEGER = 1,\n  FLOAT = 2,\n  DATE = 3,\n  CURRENCY = 4,\n  CUIT = 5,\n  PHONE = 6,\n}\n\nexport enum ColumnContentAlignment {\n  LEFT = 1,\n  CENTER = 2,\n  RIGHT = 3,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfigurations.html":{"url":"interfaces/TableConfigurations.html","title":"interface - TableConfigurations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableConfigurations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/litotable.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actionsColumn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellBorders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            footerAction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headerBorders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hoverStyle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            paginationSizes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowStyleColors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selectionStyle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionsColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionsColumn:         LitoRowAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LitoRowAction[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellBorders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellBorders:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        footerAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        footerAction:         LitoFooterAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LitoFooterAction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerBorders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headerBorders:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoverStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hoverStyle:         RowStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowStyle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paginationSizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paginationSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowStyleColors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowStyleColors:         LitotableColor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LitotableColor[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectionStyle:         RowStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowStyle\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface LitoFooterAction {\n  icon?: string;\n  content?: string;\n  color?: string;\n  actionResult: {\n    willAddRow: boolean;\n    actionObservable?: Observable;\n    nonObservableAction?: () => any;\n  };\n  template?: Component;\n}\n\nexport interface LitoRowAction {\n  tooltip: string;\n  icon: string;\n  color: string;\n  actionResult: {\n    willUpdateRow?: boolean;\n    willDeleteRow?: boolean;\n    actionObservable?: Observable;\n  };\n  confirmation?: LitoRowActionConfirmation;\n}\nexport interface LitoRowActionConfirmation {\n  title: string;\n  content: string;\n}\nexport class LitotableColor {\n  value: string;\n  constructor(\n    value: [number, number, number] | [number, number, number, number] | string\n  ) {\n    this.value = '';\n    if (typeof value == 'string') {\n      this.value = value;\n    } else {\n      if (value.length == 3) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]})`;\n      } else if (value.length == 4) {\n        this.value = `rgb(${value[0]}, ${value[1]}, ${value[2]}, ${value[3]})`;\n      }\n    }\n  }\n}\nexport interface TableConfigurations {\n  paginationSizes?: number[];\n  hoverStyle?: RowStyle;\n  selectionStyle?: RowStyle;\n  rowStyleColors?: LitotableColor[];\n  headerBorders?: boolean;\n  cellBorders?: boolean;\n  actionsColumn?: LitoRowAction[];\n  footerAction?: LitoFooterAction;\n}\n\nexport enum RowStyle {\n  BORDER = 1,\n  SHADOW = 2,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableOperationConfig.html":{"url":"classes/TableOperationConfig.html","title":"class - TableOperationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableOperationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/litotable/configurations/tableCrud.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                operations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operations: Operation[])\n                    \n                \n                        \n                            \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operations\n                                                  \n                                                        \n                                                                        Operation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        operations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Operation[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/litotable/configurations/tableCrud.config.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { typeofExpr } from '@angular/compiler/src/output/output_ast';\nimport { ColumnType } from '../decorators/column.decorator';\n\nexport class TableOperationConfig {\n  operations: Operation[];\n  constructor(operations: Operation[]) {\n    this.operations = operations;\n  }\n}\n\nexport interface OperationField {\n  propertyKey: string;\n  type: ColumnType;\n  validators?: any[];\n}\n\nclass Operation {\n  type: TableOperation;\n  constructor(type: TableOperation) {\n    this.type = type;\n  }\n}\n\nexport class CreateOperationConfig extends Operation {\n  fields: OperationField[];\n  constructor(fields: OperationField[]) {\n    super(TableOperation.CREATE);\n    this.fields = fields;\n  }\n}\n\nexport class DeleteOperationConfig extends Operation {\n  constructor() {\n    super(TableOperation.DELETE);\n  }\n}\n\nexport enum TableOperation {\n  CREATE = 1,\n  UPDATE = 2,\n  DELETE = 3,\n  RESTORE = 4,\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/litotable/column.ts\n            \n            class\n            Column\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            class\n            DateConstrain\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            class\n            NumberConstrain\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            class\n            StringConstrain\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            interface\n            Constrain\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            interface\n            FieldConstrianStyle\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/fieldConstriansStyle.ts\n            \n            interface\n            StringConstrainObject\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/litotable.config.ts\n            \n            class\n            LitotableColor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/litotable.config.ts\n            \n            interface\n            LitoFooterAction\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/litotable.config.ts\n            \n            interface\n            LitoRowAction\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/litotable.config.ts\n            \n            interface\n            LitoRowActionConfirmation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/litotable.config.ts\n            \n            interface\n            TableConfigurations\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            class\n            CreateOperationConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            class\n            DeleteOperationConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            class\n            Operation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            class\n            TableOperationConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/litotable/configurations/tableCrud.config.ts\n            \n            interface\n            OperationField\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/litotable/constrain-creator/constrain-creator.component.ts\n            \n            component\n            ConstrainCreationForm\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/litotable/constrain-creator/constrain-creator.component.ts\n            \n            component\n            ConstrainCreatorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/litotable/constrain-creator/constrain-creator.component.ts\n            \n            class\n            ConstrainCreationFormData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/litotable/decorators/column.decorator.ts\n            \n            interface\n            ColumnGroup\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/litotable/decorators/column.decorator.ts\n            \n            interface\n            TableColumnMetadata\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/litotable/decorators/column.decorator.ts\n            \n            function\n            TableColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n            \n            component\n            DialogColorPicker\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n            \n            component\n            LitoColorPickerComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n            \n            interface\n            DialogColorData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n            \n            variable\n            MAIN_COLORS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            component\n            LitotableComponent\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            class\n            ColumnGroups\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            class\n            DisplayedColumns\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            class\n            GroupColumn\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/litotable/litotable.component.ts\n            \n            class\n            RowConstrain\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/litotable/pipes/cuit.pipe.ts\n            \n            pipe\n            CuitPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/litotable/pipes/phone.pipe.ts\n            \n            pipe\n            PhonePipe\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/cdk : ^12.2.13\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/material : ^12.2.13\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColumnContentAlignment   (src/.../column.decorator.ts)\n                        \n                        \n                            ColumnType   (src/.../column.decorator.ts)\n                        \n                        \n                            MesurableConstrainType   (src/.../fieldConstriansStyle.ts)\n                        \n                        \n                            RowStyle   (src/.../litotable.config.ts)\n                        \n                        \n                            StringConstrainType   (src/.../fieldConstriansStyle.ts)\n                        \n                        \n                            TableOperation   (src/.../tableCrud.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/litotable/decorators/column.decorator.ts\n    \n        \n            \n                \n                    \n                        \n                        ColumnContentAlignment\n                    \n                \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 CENTER\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ColumnType\n                    \n                \n                        \n                            \n                                 STRING\n                            \n                        \n                        \n                            \n                                 INTEGER\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 FLOAT\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 DATE\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 CURRENCY\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 CUIT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 PHONE\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    src/app/litotable/configurations/fieldConstriansStyle.ts\n    \n        \n            \n                \n                    \n                        \n                        MesurableConstrainType\n                    \n                \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 MORETHAN\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 LESSTHAN\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 BETWEEN\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 NOTBETWEEN\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StringConstrainType\n                    \n                \n                        \n                            \n                                 STARTSWITH\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ENDWITH\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 CONTAINS\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/litotable/configurations/litotable.config.ts\n    \n        \n            \n                \n                    \n                        \n                        RowStyle\n                    \n                \n                        \n                            \n                                 BORDER\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SHADOW\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/app/litotable/configurations/tableCrud.config.ts\n    \n        \n            \n                \n                    \n                        \n                        TableOperation\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 RESTORE\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TableColumn   (src/.../column.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/litotable/decorators/column.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TableColumn\n                        \n                    \n                \n            \n            \n                \nTableColumn(columnMetadata: TableColumnMetadata)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    columnMetadata\n                                    \n                                                TableColumnMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LitotableModule\n\n\n\ncluster_LitotableModule_declarations\n\n\n\ncluster_LitotableModule_exports\n\n\n\n\nConstrainCreationForm\n\nConstrainCreationForm\n\n\n\nLitotableModule\n\nLitotableModule\n\nLitotableModule -->\n\nConstrainCreationForm->LitotableModule\n\n\n\n\n\nConstrainCreatorComponent\n\nConstrainCreatorComponent\n\nLitotableModule -->\n\nConstrainCreatorComponent->LitotableModule\n\n\n\n\n\nCuitPipe\n\nCuitPipe\n\nLitotableModule -->\n\nCuitPipe->LitotableModule\n\n\n\n\n\nDialogColorPicker\n\nDialogColorPicker\n\nLitotableModule -->\n\nDialogColorPicker->LitotableModule\n\n\n\n\n\nLitoColorPickerComponent\n\nLitoColorPickerComponent\n\nLitotableModule -->\n\nLitoColorPickerComponent->LitotableModule\n\n\n\n\n\nLitotableComponent\n\nLitotableComponent\n\nLitotableModule -->\n\nLitotableComponent->LitotableModule\n\n\n\n\n\nPhonePipe\n\nPhonePipe\n\nLitotableModule -->\n\nPhonePipe->LitotableModule\n\n\n\n\n\nLitotableComponent \n\nLitotableComponent \n\nLitotableComponent  -->\n\nLitotableModule->LitotableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        LitotableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MAIN_COLORS   (src/.../lito-color-picker.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/litotable/lito-color-picker/lito-color-picker.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MAIN_COLORS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LitotableColor[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  new LitotableColor('#000000'),\n  new LitotableColor('#434343'),\n  new LitotableColor('#666666'),\n  new LitotableColor('#999999'),\n  new LitotableColor('#b7b7b7'),\n  new LitotableColor('#cccccc'),\n  new LitotableColor('#d9d9d9'),\n  new LitotableColor('#efefef'),\n  new LitotableColor('#f3f3f3'),\n  new LitotableColor('#ffffff'),\n\n  new LitotableColor('#980000'),\n  new LitotableColor('#ff0000'),\n  new LitotableColor('#ff9900'),\n  new LitotableColor('#ffff00'),\n  new LitotableColor('#00ff00'),\n  new LitotableColor('#00ffff'),\n  new LitotableColor('#4a86e8'),\n  new LitotableColor('#0000ff'),\n  new LitotableColor('#9900ff'),\n  new LitotableColor('#ff00ff'),\n\n  new LitotableColor('#e6b8af'),\n  new LitotableColor('#f4cccc'),\n  new LitotableColor('#fce5cd'),\n  new LitotableColor('#fff2cc'),\n  new LitotableColor('#d9ead3'),\n  new LitotableColor('#d0e0e3'),\n  new LitotableColor('#c9daf8'),\n  new LitotableColor('#cfe2f3'),\n  new LitotableColor('#d9d2e9'),\n  new LitotableColor('#ead1dc'),\n\n  new LitotableColor('#dd7e6b'),\n  new LitotableColor('#ea9999'),\n  new LitotableColor('#f9cb9c'),\n  new LitotableColor('#ffe599'),\n  new LitotableColor('#b6d7a8'),\n  new LitotableColor('#a2c4c9'),\n  new LitotableColor('#a4c2f4'),\n  new LitotableColor('#9fc5e8'),\n  new LitotableColor('#b4a7d6'),\n  new LitotableColor('#d5a6bd'),\n\n  new LitotableColor('#cc4125'),\n  new LitotableColor('#e06666'),\n  new LitotableColor('#f6b26b'),\n  new LitotableColor('#ffd966'),\n  new LitotableColor('#93c47d'),\n  new LitotableColor('#76a5af'),\n  new LitotableColor('#6d9eeb'),\n  new LitotableColor('#6fa8dc'),\n  new LitotableColor('#8e7cc3'),\n  new LitotableColor('#c27ba0'),\n\n  new LitotableColor('#a61c00'),\n  new LitotableColor('#cc0000'),\n  new LitotableColor('#e69138'),\n  new LitotableColor('#f1c232'),\n  new LitotableColor('#6aa84f'),\n  new LitotableColor('#45818e'),\n  new LitotableColor('#3c78d8'),\n  new LitotableColor('#3d85c6'),\n  new LitotableColor('#674ea7'),\n  new LitotableColor('#a64d79'),\n\n  new LitotableColor('#85200c'),\n  new LitotableColor('#990000'),\n  new LitotableColor('#b45f06'),\n  new LitotableColor('#bf9000'),\n  new LitotableColor('#38761d'),\n  new LitotableColor('#134f5c'),\n  new LitotableColor('#1155cc'),\n  new LitotableColor('#0b5394'),\n  new LitotableColor('#351c75'),\n  new LitotableColor('#741b47'),\n\n  new LitotableColor('#5b0f00'),\n  new LitotableColor('#660000'),\n  new LitotableColor('#783f04'),\n  new LitotableColor('#7f6000'),\n  new LitotableColor('#274e13'),\n  new LitotableColor('#0c343d'),\n  new LitotableColor('#1c4587'),\n  new LitotableColor('#073763'),\n  new LitotableColor('#20124d'),\n  new LitotableColor('#4c1130'),\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
